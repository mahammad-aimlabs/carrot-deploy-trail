import{D as st,b as N,E as B,U as as,T as lr,d as G,v as L,c as os,f as D,g as V,I as Be,M as H,w as j,h as X,B as Ut,m as ls,P as gt,i as E,e as O,j as cs,k as hs,n as qt,l as Q,o as Z,p as us,q as ds,s as fs}from"./BRIHZYE5.js";import{a as Tt,bm as ps,bn as gs}from"./pcUuCZtV.js";const oe=Object.create(null),cr=Object.create(null);function De(s,t){let e=cr[s];return e===void 0&&(oe[t]===void 0&&(oe[t]=1),cr[s]=e=oe[t]++),e}let mt;function Jr(){return(!mt||mt!=null&&mt.isContextLost())&&(mt=st.get().createCanvas().getContext("webgl",{})),mt}let Ht;function ms(){if(!Ht){Ht="mediump";const s=Jr();s&&s.getShaderPrecisionFormat&&(Ht=s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision?"highp":"mediump")}return Ht}function xs(s,t,e){return t?s:e?(s=s.replace("out vec4 finalColor;",""),`
        
        #ifdef GL_ES // This checks if it is WebGL1
        #define in varying
        #define finalColor gl_FragColor
        #define texture texture2D
        #endif
        ${s}
        `):`
        
        #ifdef GL_ES // This checks if it is WebGL1
        #define in attribute
        #define out varying
        #endif
        ${s}
        `}function _s(s,t,e){const r=e?t.maxSupportedFragmentPrecision:t.maxSupportedVertexPrecision;if(s.substring(0,9)!=="precision"){let i=e?t.requestedFragmentPrecision:t.requestedVertexPrecision;return i==="highp"&&r!=="highp"&&(i="mediump"),`precision ${i} float;
${s}`}else if(r!=="highp"&&s.substring(0,15)==="precision highp")return s.replace("precision highp","precision mediump");return s}function ys(s,t){return t?`#version 300 es
${s}`:s}const bs={},Ss={};function ws(s,{name:t="pixi-program"},e=!0){t=t.replace(/\s+/g,"-"),t+=e?"-fragment":"-vertex";const r=e?bs:Ss;return r[t]?(r[t]++,t+=`-${r[t]}`):r[t]=1,s.indexOf("#define SHADER_NAME")!==-1?s:`${`#define SHADER_NAME ${t}`}
${s}`}function Ts(s,t){return t?s.replace("#version 300 es",""):s}const le={stripVersion:Ts,ensurePrecision:_s,addProgramDefines:xs,setProgramName:ws,insertVersion:ys},ce=Object.create(null),ti=class Re{constructor(t){t={...Re.defaultOptions,...t};const e=t.fragment.indexOf("#version 300 es")!==-1,r={stripVersion:e,ensurePrecision:{requestedFragmentPrecision:t.preferredFragmentPrecision,requestedVertexPrecision:t.preferredVertexPrecision,maxSupportedVertexPrecision:"highp",maxSupportedFragmentPrecision:ms()},setProgramName:{name:t.name},addProgramDefines:e,insertVersion:e};let i=t.fragment,n=t.vertex;Object.keys(le).forEach(a=>{const o=r[a];i=le[a](i,o,!0),n=le[a](n,o,!1)}),this.fragment=i,this.vertex=n,this.transformFeedbackVaryings=t.transformFeedbackVaryings,this._key=De(`${this.vertex}:${this.fragment}`,"gl-program")}destroy(){this.fragment=null,this.vertex=null,this._attributeData=null,this._uniformData=null,this._uniformBlockData=null,this.transformFeedbackVaryings=null}static from(t){const e=`${t.vertex}:${t.fragment}`;return ce[e]||(ce[e]=new Re(t)),ce[e]}};ti.defaultOptions={preferredVertexPrecision:"highp",preferredFragmentPrecision:"mediump"};let We=ti;const hr={uint8x2:{size:2,stride:2,normalised:!1},uint8x4:{size:4,stride:4,normalised:!1},sint8x2:{size:2,stride:2,normalised:!1},sint8x4:{size:4,stride:4,normalised:!1},unorm8x2:{size:2,stride:2,normalised:!0},unorm8x4:{size:4,stride:4,normalised:!0},snorm8x2:{size:2,stride:2,normalised:!0},snorm8x4:{size:4,stride:4,normalised:!0},uint16x2:{size:2,stride:4,normalised:!1},uint16x4:{size:4,stride:8,normalised:!1},sint16x2:{size:2,stride:4,normalised:!1},sint16x4:{size:4,stride:8,normalised:!1},unorm16x2:{size:2,stride:4,normalised:!0},unorm16x4:{size:4,stride:8,normalised:!0},snorm16x2:{size:2,stride:4,normalised:!0},snorm16x4:{size:4,stride:8,normalised:!0},float16x2:{size:2,stride:4,normalised:!1},float16x4:{size:4,stride:8,normalised:!1},float32:{size:1,stride:4,normalised:!1},float32x2:{size:2,stride:8,normalised:!1},float32x3:{size:3,stride:12,normalised:!1},float32x4:{size:4,stride:16,normalised:!1},uint32:{size:1,stride:4,normalised:!1},uint32x2:{size:2,stride:8,normalised:!1},uint32x3:{size:3,stride:12,normalised:!1},uint32x4:{size:4,stride:16,normalised:!1},sint32:{size:1,stride:4,normalised:!1},sint32x2:{size:2,stride:8,normalised:!1},sint32x3:{size:3,stride:12,normalised:!1},sint32x4:{size:4,stride:16,normalised:!1}};function Kt(s){return hr[s]??hr.float32}const vs={f32:"float32","vec2<f32>":"float32x2","vec3<f32>":"float32x3","vec4<f32>":"float32x4",vec2f:"float32x2",vec3f:"float32x3",vec4f:"float32x4",i32:"sint32","vec2<i32>":"sint32x2","vec3<i32>":"sint32x3","vec4<i32>":"sint32x4",u32:"uint32","vec2<u32>":"uint32x2","vec3<u32>":"uint32x3","vec4<u32>":"uint32x4",bool:"uint32","vec2<bool>":"uint32x2","vec3<bool>":"uint32x3","vec4<bool>":"uint32x4"};function Ps({source:s,entryPoint:t}){const e={},r=s.indexOf(`fn ${t}`);if(r!==-1){const i=s.indexOf("->",r);if(i!==-1){const n=s.substring(r,i),a=/@location\((\d+)\)\s+([a-zA-Z0-9_]+)\s*:\s*([a-zA-Z0-9_<>]+)(?:,|\s|$)/g;let o;for(;(o=a.exec(n))!==null;){const l=vs[o[3]]??"float32";e[o[2]]={location:parseInt(o[1],10),format:l,stride:Kt(l).stride,offset:0,instance:!1,start:0}}}}return e}function he(s){var u,f;const t=/(^|[^/])@(group|binding)\(\d+\)[^;]+;/g,e=/@group\((\d+)\)/,r=/@binding\((\d+)\)/,i=/var(<[^>]+>)? (\w+)/,n=/:\s*(\w+)/,a=/struct\s+(\w+)\s*{([^}]+)}/g,o=/(\w+)\s*:\s*([\w\<\>]+)/g,l=/struct\s+(\w+)/,h=(u=s.match(t))==null?void 0:u.map(d=>({group:parseInt(d.match(e)[1],10),binding:parseInt(d.match(r)[1],10),name:d.match(i)[2],isUniform:d.match(i)[1]==="<uniform>",type:d.match(n)[1]}));if(!h)return{groups:[],structs:[]};const c=((f=s.match(a))==null?void 0:f.map(d=>{const g=d.match(l)[1],p=d.match(o).reduce((m,x)=>{const[_,b]=x.split(":");return m[_.trim()]=b.trim(),m},{});return p?{name:g,members:p}:null}).filter(({name:d})=>h.some(g=>g.type===d)))??[];return{groups:h,structs:c}}var At=(s=>(s[s.VERTEX=1]="VERTEX",s[s.FRAGMENT=2]="FRAGMENT",s[s.COMPUTE=4]="COMPUTE",s))(At||{});function Cs({groups:s}){const t=[];for(let e=0;e<s.length;e++){const r=s[e];t[r.group]||(t[r.group]=[]),r.isUniform?t[r.group].push({binding:r.binding,visibility:At.VERTEX|At.FRAGMENT,buffer:{type:"uniform"}}):r.type==="sampler"?t[r.group].push({binding:r.binding,visibility:At.FRAGMENT,sampler:{type:"filtering"}}):r.type==="texture_2d"&&t[r.group].push({binding:r.binding,visibility:At.FRAGMENT,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}})}return t}function Ms({groups:s}){const t=[];for(let e=0;e<s.length;e++){const r=s[e];t[r.group]||(t[r.group]={}),t[r.group][r.name]=r.binding}return t}function ks(s,t){const e=new Set,r=new Set,i=[...s.structs,...t.structs].filter(a=>e.has(a.name)?!1:(e.add(a.name),!0)),n=[...s.groups,...t.groups].filter(a=>{const o=`${a.name}-${a.binding}`;return r.has(o)?!1:(r.add(o),!0)});return{structs:i,groups:n}}const ue=Object.create(null);class Et{constructor(t){var o,l;this._layoutKey=0,this._attributeLocationsKey=0;const{fragment:e,vertex:r,layout:i,gpuLayout:n,name:a}=t;if(this.name=a,this.fragment=e,this.vertex=r,e.source===r.source){const h=he(e.source);this.structsAndGroups=h}else{const h=he(r.source),c=he(e.source);this.structsAndGroups=ks(h,c)}this.layout=i??Ms(this.structsAndGroups),this.gpuLayout=n??Cs(this.structsAndGroups),this.autoAssignGlobalUniforms=((o=this.layout[0])==null?void 0:o.globalUniforms)!==void 0,this.autoAssignLocalUniforms=((l=this.layout[1])==null?void 0:l.localUniforms)!==void 0,this._generateProgramKey()}_generateProgramKey(){const{vertex:t,fragment:e}=this,r=t.source+e.source+t.entryPoint+e.entryPoint;this._layoutKey=De(r,"program")}get attributeData(){return this._attributeData??(this._attributeData=Ps(this.vertex)),this._attributeData}destroy(){this.gpuLayout=null,this.layout=null,this.structsAndGroups=null,this.fragment=null,this.vertex=null}static from(t){const e=`${t.vertex.source}:${t.fragment.source}:${t.fragment.entryPoint}:${t.vertex.entryPoint}`;return ue[e]||(ue[e]=new Et(t)),ue[e]}}const ei=["f32","i32","vec2<f32>","vec3<f32>","vec4<f32>","mat2x2<f32>","mat3x3<f32>","mat4x4<f32>","mat3x2<f32>","mat4x2<f32>","mat2x3<f32>","mat4x3<f32>","mat2x4<f32>","mat3x4<f32>","vec2<i32>","vec3<i32>","vec4<i32>"],Bs=ei.reduce((s,t)=>(s[t]=!0,s),{});function Rs(s,t){switch(s){case"f32":return 0;case"vec2<f32>":return new Float32Array(2*t);case"vec3<f32>":return new Float32Array(3*t);case"vec4<f32>":return new Float32Array(4*t);case"mat2x2<f32>":return new Float32Array([1,0,0,1]);case"mat3x3<f32>":return new Float32Array([1,0,0,0,1,0,0,0,1]);case"mat4x4<f32>":return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}return null}const ri=class ii{constructor(t,e){this._touched=0,this.uid=N("uniform"),this._resourceType="uniformGroup",this._resourceId=N("resource"),this.isUniformGroup=!0,this._dirtyId=0,this.destroyed=!1,e={...ii.defaultOptions,...e},this.uniformStructures=t;const r={};for(const i in t){const n=t[i];if(n.name=i,n.size=n.size??1,!Bs[n.type])throw new Error(`Uniform type ${n.type} is not supported. Supported uniform types are: ${ei.join(", ")}`);n.value??(n.value=Rs(n.type,n.size)),r[i]=n.value}this.uniforms=r,this._dirtyId=1,this.ubo=e.ubo,this.isStatic=e.isStatic,this._signature=De(Object.keys(r).map(i=>`${i}-${t[i].type}`).join("-"),"uniform-group")}update(){this._dirtyId++}};ri.defaultOptions={ubo:!1,isStatic:!1};let nt=ri;class bt{constructor(t){this.resources=Object.create(null),this._dirty=!0;let e=0;for(const r in t){const i=t[r];this.setResource(i,e++)}this._updateKey()}_updateKey(){if(!this._dirty)return;this._dirty=!1;const t=[];let e=0;for(const r in this.resources)t[e++]=this.resources[r]._resourceId;this._key=t.join("|")}setResource(t,e){var i,n;const r=this.resources[e];t!==r&&(r&&((i=t.off)==null||i.call(t,"change",this.onResourceChange,this)),(n=t.on)==null||n.call(t,"change",this.onResourceChange,this),this.resources[e]=t,this._dirty=!0)}getResource(t){return this.resources[t]}_touch(t){const e=this.resources;for(const r in e)e[r]._touched=t}destroy(){var e;const t=this.resources;for(const r in t){const i=t[r];(e=i.off)==null||e.call(i,"change",this.onResourceChange,this)}this.resources=null}onResourceChange(t){if(this._dirty=!0,t.destroyed){const e=this.resources;for(const r in e)e[r]===t&&(e[r]=null)}else this._updateKey()}}var St=(s=>(s[s.WEBGL=1]="WEBGL",s[s.WEBGPU=2]="WEBGPU",s[s.BOTH=3]="BOTH",s))(St||{});class vt extends Tt{constructor(t){super(),this.uid=N("shader"),this._uniformBindMap=Object.create(null),this._ownedBindGroups=[];let{gpuProgram:e,glProgram:r,groups:i,resources:n,compatibleRenderers:a,groupMap:o}=t;this.gpuProgram=e,this.glProgram=r,a===void 0&&(a=0,e&&(a|=St.WEBGPU),r&&(a|=St.WEBGL)),this.compatibleRenderers=a;const l={};if(!n&&!i&&(n={}),n&&i)throw new Error("[Shader] Cannot have both resources and groups");if(!e&&i&&!o)throw new Error("[Shader] No group map or WebGPU shader provided - consider using resources instead.");if(!e&&i&&o)for(const h in o)for(const c in o[h]){const u=o[h][c];l[u]={group:h,binding:c,name:u}}else if(e&&i&&!o){const h=e.structsAndGroups.groups;o={},h.forEach(c=>{o[c.group]=o[c.group]||{},o[c.group][c.binding]=c.name,l[c.name]=c})}else if(n){i={},o={},e&&e.structsAndGroups.groups.forEach(u=>{o[u.group]=o[u.group]||{},o[u.group][u.binding]=u.name,l[u.name]=u});let h=0;for(const c in n)l[c]||(i[99]||(i[99]=new bt,this._ownedBindGroups.push(i[99])),l[c]={group:99,binding:h,name:c},o[99]=o[99]||{},o[99][h]=c,h++);for(const c in n){const u=c;let f=n[c];!f.source&&!f._resourceType&&(f=new nt(f));const d=l[u];d&&(i[d.group]||(i[d.group]=new bt,this._ownedBindGroups.push(i[d.group])),i[d.group].setResource(f,d.binding))}}this.groups=i,this._uniformBindMap=o,this.resources=this._buildResourceAccessor(i,l)}addResource(t,e,r){var i,n;(i=this._uniformBindMap)[e]||(i[e]={}),(n=this._uniformBindMap[e])[r]||(n[r]=t),this.groups[e]||(this.groups[e]=new bt,this._ownedBindGroups.push(this.groups[e]))}_buildResourceAccessor(t,e){const r={};for(const i in e){const n=e[i];Object.defineProperty(r,n.name,{get(){return t[n.group].getResource(n.binding)},set(a){t[n.group].setResource(a,n.binding)}})}return r}destroy(t=!1){var e,r;this.emit("destroy",this),t&&((e=this.gpuProgram)==null||e.destroy(),(r=this.glProgram)==null||r.destroy()),this.gpuProgram=null,this.glProgram=null,this.removeAllListeners(),this._uniformBindMap=null,this._ownedBindGroups.forEach(i=>{i.destroy()}),this._ownedBindGroups=null,this.resources=null,this.groups=null}static from(t){const{gpu:e,gl:r,...i}=t;let n,a;return e&&(n=Et.from(e)),r&&(a=We.from(r)),new vt({gpuProgram:n,glProgram:a,...i})}}const As={normal:0,add:1,multiply:2,screen:3,overlay:4,erase:5,"normal-npm":6,"add-npm":7,"screen-npm":8,min:9,max:10},de=0,fe=1,pe=2,ge=3,me=4,xe=5,Ae=class si{constructor(){this.data=0,this.blendMode="normal",this.polygonOffset=0,this.blend=!0,this.depthMask=!0}get blend(){return!!(this.data&1<<de)}set blend(t){!!(this.data&1<<de)!==t&&(this.data^=1<<de)}get offsets(){return!!(this.data&1<<fe)}set offsets(t){!!(this.data&1<<fe)!==t&&(this.data^=1<<fe)}set cullMode(t){if(t==="none"){this.culling=!1;return}this.culling=!0,this.clockwiseFrontFace=t==="front"}get cullMode(){return this.culling?this.clockwiseFrontFace?"front":"back":"none"}get culling(){return!!(this.data&1<<pe)}set culling(t){!!(this.data&1<<pe)!==t&&(this.data^=1<<pe)}get depthTest(){return!!(this.data&1<<ge)}set depthTest(t){!!(this.data&1<<ge)!==t&&(this.data^=1<<ge)}get depthMask(){return!!(this.data&1<<xe)}set depthMask(t){!!(this.data&1<<xe)!==t&&(this.data^=1<<xe)}get clockwiseFrontFace(){return!!(this.data&1<<me)}set clockwiseFrontFace(t){!!(this.data&1<<me)!==t&&(this.data^=1<<me)}get blendMode(){return this._blendMode}set blendMode(t){this.blend=t!=="none",this._blendMode=t,this._blendModeId=As[t]||0}get polygonOffset(){return this._polygonOffset}set polygonOffset(t){this.offsets=!!t,this._polygonOffset=t}toString(){return`[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`}static for2d(){const t=new si;return t.depthTest=!1,t.blend=!0,t}};Ae.default2d=Ae.for2d();let Qt=Ae;class ni{static init(t){Object.defineProperty(this,"resizeTo",{set(e){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=e,e&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let e,r;if(this._resizeTo===globalThis.window)e=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:i,clientHeight:n}=this._resizeTo;e=i,r=n}this.renderer.resize(e,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=t.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}ni.extension=B.Application;class ai{static init(t){t=Object.assign({autoStart:!0,sharedTicker:!1},t),Object.defineProperty(this,"ticker",{set(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,as.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=t.sharedTicker?lr.shared:new lr,t.autoStart&&this.start()}static destroy(){if(this._ticker){const t=this._ticker;this.ticker=null,t.destroy()}}}ai.extension=B.Application;class Fs extends Tt{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return G(L,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return G(L,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return G(L,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return G(L,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return G(L,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(t=!1){var e;this.emit("destroy",this),this.removeAllListeners();for(const r in this.chars)(e=this.chars[r].texture)==null||e.destroy();this.chars=null,t&&(this.pages.forEach(r=>r.texture.destroy(!0)),this.pages=null)}}const ur=[{offset:0,color:"white"},{offset:1,color:"black"}],Le=class Fe{constructor(...t){this.uid=N("fillGradient"),this.type="linear",this.colorStops=[];let e=zs(t);e={...e.type==="radial"?Fe.defaultRadialOptions:Fe.defaultLinearOptions,...os(e)},this._textureSize=e.textureSize,this._wrapMode=e.wrapMode,e.type==="radial"?(this.center=e.center,this.outerCenter=e.outerCenter??this.center,this.innerRadius=e.innerRadius,this.outerRadius=e.outerRadius,this.scale=e.scale,this.rotation=e.rotation):(this.start=e.start,this.end=e.end),this.textureSpace=e.textureSpace,this.type=e.type,e.colorStops.forEach(i=>{this.addColorStop(i.offset,i.color)})}addColorStop(t,e){return this.colorStops.push({offset:t,color:D.shared.setValue(e).toHexa()}),this}buildLinearGradient(){if(this.texture)return;let{x:t,y:e}=this.start,{x:r,y:i}=this.end,n=r-t,a=i-e;const o=n<0||a<0;if(this._wrapMode==="clamp-to-edge"){if(n<0){const m=t;t=r,r=m,n*=-1}if(a<0){const m=e;e=i,i=m,a*=-1}}const l=this.colorStops.length?this.colorStops:ur,h=this._textureSize,{canvas:c,context:u}=fr(h,1),f=o?u.createLinearGradient(this._textureSize,0,0,0):u.createLinearGradient(0,0,this._textureSize,0);dr(f,l),u.fillStyle=f,u.fillRect(0,0,h,1),this.texture=new V({source:new Be({resource:c,addressMode:this._wrapMode})});const d=Math.sqrt(n*n+a*a),g=Math.atan2(a,n),p=new H;p.scale(d/h,1),p.rotate(g),p.translate(t,e),this.textureSpace==="local"&&p.scale(h,h),this.transform=p}buildGradient(){this.type==="linear"?this.buildLinearGradient():this.buildRadialGradient()}buildRadialGradient(){if(this.texture)return;const t=this.colorStops.length?this.colorStops:ur,e=this._textureSize,{canvas:r,context:i}=fr(e,e),{x:n,y:a}=this.center,{x:o,y:l}=this.outerCenter,h=this.innerRadius,c=this.outerRadius,u=o-c,f=l-c,d=e/(c*2),g=(n-u)*d,p=(a-f)*d,m=i.createRadialGradient(g,p,h*d,(o-u)*d,(l-f)*d,c*d);dr(m,t),i.fillStyle=t[t.length-1].color,i.fillRect(0,0,e,e),i.fillStyle=m,i.translate(g,p),i.rotate(this.rotation),i.scale(1,this.scale),i.translate(-g,-p),i.fillRect(0,0,e,e),this.texture=new V({source:new Be({resource:r,addressMode:this._wrapMode})});const x=new H;x.scale(1/d,1/d),x.translate(u,f),this.textureSpace==="local"&&x.scale(e,e),this.transform=x}get styleKey(){return this.uid}destroy(){var t;(t=this.texture)==null||t.destroy(!0),this.texture=null}};Le.defaultLinearOptions={start:{x:0,y:0},end:{x:0,y:1},colorStops:[],textureSpace:"local",type:"linear",textureSize:256,wrapMode:"clamp-to-edge"};Le.defaultRadialOptions={center:{x:.5,y:.5},innerRadius:0,outerRadius:.5,colorStops:[],scale:1,textureSpace:"local",type:"radial",textureSize:256,wrapMode:"clamp-to-edge"};let tt=Le;function dr(s,t){for(let e=0;e<t.length;e++){const r=t[e];s.addColorStop(r.offset,r.color)}}function fr(s,t){const e=st.get().createCanvas(s,t),r=e.getContext("2d");return{canvas:e,context:r}}function zs(s){let t=s[0]??{};return(typeof t=="number"||s[1])&&(G("8.5.2","use options object instead"),t={type:"linear",start:{x:s[0],y:s[1]},end:{x:s[2],y:s[3]},textureSpace:s[4],textureSize:s[5]??tt.defaultLinearOptions.textureSize}),t}const pr={repeat:{addressModeU:"repeat",addressModeV:"repeat"},"repeat-x":{addressModeU:"repeat",addressModeV:"clamp-to-edge"},"repeat-y":{addressModeU:"clamp-to-edge",addressModeV:"repeat"},"no-repeat":{addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}};class re{constructor(t,e){this.uid=N("fillPattern"),this.transform=new H,this._styleKey=null,this.texture=t,this.transform.scale(1/t.frame.width,1/t.frame.height),e&&(t.source.style.addressModeU=pr[e].addressModeU,t.source.style.addressModeV=pr[e].addressModeV)}setTransform(t){const e=this.texture;this.transform.copyFrom(t),this.transform.invert(),this.transform.scale(1/e.frame.width,1/e.frame.height),this._styleKey=null}get styleKey(){return this._styleKey?this._styleKey:(this._styleKey=`fill-pattern-${this.uid}-${this.texture.uid}-${this.transform.toArray().join("-")}`,this._styleKey)}}function Is(s,t){const e=ps(s),r=[];let i=null,n=0,a=0;for(let o=0;o<e.length;o++){const l=e[o],h=l[0],c=l;switch(h){case"M":n=c[1],a=c[2],t.moveTo(n,a);break;case"m":n+=c[1],a+=c[2],t.moveTo(n,a);break;case"H":n=c[1],t.lineTo(n,a);break;case"h":n+=c[1],t.lineTo(n,a);break;case"V":a=c[1],t.lineTo(n,a);break;case"v":a+=c[1],t.lineTo(n,a);break;case"L":n=c[1],a=c[2],t.lineTo(n,a);break;case"l":n+=c[1],a+=c[2],t.lineTo(n,a);break;case"C":n=c[5],a=c[6],t.bezierCurveTo(c[1],c[2],c[3],c[4],n,a);break;case"c":t.bezierCurveTo(n+c[1],a+c[2],n+c[3],a+c[4],n+c[5],a+c[6]),n+=c[5],a+=c[6];break;case"S":n=c[3],a=c[4],t.bezierCurveToShort(c[1],c[2],n,a);break;case"s":t.bezierCurveToShort(n+c[1],a+c[2],n+c[3],a+c[4]),n+=c[3],a+=c[4];break;case"Q":n=c[3],a=c[4],t.quadraticCurveTo(c[1],c[2],n,a);break;case"q":t.quadraticCurveTo(n+c[1],a+c[2],n+c[3],a+c[4]),n+=c[3],a+=c[4];break;case"T":n=c[1],a=c[2],t.quadraticCurveToShort(n,a);break;case"t":n+=c[1],a+=c[2],t.quadraticCurveToShort(n,a);break;case"A":n=c[6],a=c[7],t.arcToSvg(c[1],c[2],c[3],c[4],c[5],n,a);break;case"a":n+=c[6],a+=c[7],t.arcToSvg(c[1],c[2],c[3],c[4],c[5],n,a);break;case"Z":case"z":t.closePath(),r.length>0&&(i=r.pop(),i?(n=i.startX,a=i.startY):(n=0,a=0)),i=null;break;default:j(`Unknown SVG path command: ${h}`)}h!=="Z"&&h!=="z"&&i===null&&(i={startX:n,startY:a},r.push(i))}return t}class He{constructor(t=0,e=0,r=0){this.type="circle",this.x=t,this.y=e,this.radius=r}clone(){return new He(this.x,this.y,this.radius)}contains(t,e){if(this.radius<=0)return!1;const r=this.radius*this.radius;let i=this.x-t,n=this.y-e;return i*=i,n*=n,i+n<=r}strokeContains(t,e,r,i=.5){if(this.radius===0)return!1;const n=this.x-t,a=this.y-e,o=this.radius,l=(1-i)*r,h=Math.sqrt(n*n+a*a);return h<=o+l&&h>o-(r-l)}getBounds(t){return t||(t=new X),t.x=this.x-this.radius,t.y=this.y-this.radius,t.width=this.radius*2,t.height=this.radius*2,t}copyFrom(t){return this.x=t.x,this.y=t.y,this.radius=t.radius,this}copyTo(t){return t.copyFrom(this),t}toString(){return`[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`}}class Ve{constructor(t=0,e=0,r=0,i=0){this.type="ellipse",this.x=t,this.y=e,this.halfWidth=r,this.halfHeight=i}clone(){return new Ve(this.x,this.y,this.halfWidth,this.halfHeight)}contains(t,e){if(this.halfWidth<=0||this.halfHeight<=0)return!1;let r=(t-this.x)/this.halfWidth,i=(e-this.y)/this.halfHeight;return r*=r,i*=i,r+i<=1}strokeContains(t,e,r,i=.5){const{halfWidth:n,halfHeight:a}=this;if(n<=0||a<=0)return!1;const o=r*(1-i),l=r-o,h=n-l,c=a-l,u=n+o,f=a+o,d=t-this.x,g=e-this.y,p=d*d/(h*h)+g*g/(c*c),m=d*d/(u*u)+g*g/(f*f);return p>1&&m<=1}getBounds(t){return t||(t=new X),t.x=this.x-this.halfWidth,t.y=this.y-this.halfHeight,t.width=this.halfWidth*2,t.height=this.halfHeight*2,t}copyFrom(t){return this.x=t.x,this.y=t.y,this.halfWidth=t.halfWidth,this.halfHeight=t.halfHeight,this}copyTo(t){return t.copyFrom(this),t}toString(){return`[pixi.js/math:Ellipse x=${this.x} y=${this.y} halfWidth=${this.halfWidth} halfHeight=${this.halfHeight}]`}}function Gs(s,t,e,r,i,n){const a=s-e,o=t-r,l=i-e,h=n-r,c=a*l+o*h,u=l*l+h*h;let f=-1;u!==0&&(f=c/u);let d,g;f<0?(d=e,g=r):f>1?(d=i,g=n):(d=e+f*l,g=r+f*h);const p=s-d,m=t-g;return p*p+m*m}let Us,Es;class Ft{constructor(...t){this.type="polygon";let e=Array.isArray(t[0])?t[0]:t;if(typeof e[0]!="number"){const r=[];for(let i=0,n=e.length;i<n;i++)r.push(e[i].x,e[i].y);e=r}this.points=e,this.closePath=!0}isClockwise(){let t=0;const e=this.points,r=e.length;for(let i=0;i<r;i+=2){const n=e[i],a=e[i+1],o=e[(i+2)%r],l=e[(i+3)%r];t+=(o-n)*(l+a)}return t<0}containsPolygon(t){const e=this.getBounds(Us),r=t.getBounds(Es);if(!e.containsRect(r))return!1;const i=t.points;for(let n=0;n<i.length;n+=2){const a=i[n],o=i[n+1];if(!this.contains(a,o))return!1}return!0}clone(){const t=this.points.slice(),e=new Ft(t);return e.closePath=this.closePath,e}contains(t,e){let r=!1;const i=this.points.length/2;for(let n=0,a=i-1;n<i;a=n++){const o=this.points[n*2],l=this.points[n*2+1],h=this.points[a*2],c=this.points[a*2+1];l>e!=c>e&&t<(h-o)*((e-l)/(c-l))+o&&(r=!r)}return r}strokeContains(t,e,r,i=.5){const n=r*r,a=n*(1-i),o=n-a,{points:l}=this,h=l.length-(this.closePath?0:2);for(let c=0;c<h;c+=2){const u=l[c],f=l[c+1],d=l[(c+2)%l.length],g=l[(c+3)%l.length],p=Gs(t,e,u,f,d,g),m=Math.sign((d-u)*(e-f)-(g-f)*(t-u));if(p<=(m<0?o:a))return!0}return!1}getBounds(t){t||(t=new X);const e=this.points;let r=1/0,i=-1/0,n=1/0,a=-1/0;for(let o=0,l=e.length;o<l;o+=2){const h=e[o],c=e[o+1];r=h<r?h:r,i=h>i?h:i,n=c<n?c:n,a=c>a?c:a}return t.x=r,t.width=i-r,t.y=n,t.height=a-n,t}copyFrom(t){return this.points=t.points.slice(),this.closePath=t.closePath,this}copyTo(t){return t.copyFrom(this),t}toString(){return`[pixi.js/math:PolygoncloseStroke=${this.closePath}points=${this.points.reduce((t,e)=>`${t}, ${e}`,"")}]`}get lastX(){return this.points[this.points.length-2]}get lastY(){return this.points[this.points.length-1]}get x(){return this.points[this.points.length-2]}get y(){return this.points[this.points.length-1]}}const Vt=(s,t,e,r,i,n,a)=>{const o=s-e,l=t-r,h=Math.sqrt(o*o+l*l);return h>=i-n&&h<=i+a};class Oe{constructor(t=0,e=0,r=0,i=0,n=20){this.type="roundedRectangle",this.x=t,this.y=e,this.width=r,this.height=i,this.radius=n}getBounds(t){return t||(t=new X),t.x=this.x,t.y=this.y,t.width=this.width,t.height=this.height,t}clone(){return new Oe(this.x,this.y,this.width,this.height,this.radius)}copyFrom(t){return this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this}copyTo(t){return t.copyFrom(this),t}contains(t,e){if(this.width<=0||this.height<=0)return!1;if(t>=this.x&&t<=this.x+this.width&&e>=this.y&&e<=this.y+this.height){const r=Math.max(0,Math.min(this.radius,Math.min(this.width,this.height)/2));if(e>=this.y+r&&e<=this.y+this.height-r||t>=this.x+r&&t<=this.x+this.width-r)return!0;let i=t-(this.x+r),n=e-(this.y+r);const a=r*r;if(i*i+n*n<=a||(i=t-(this.x+this.width-r),i*i+n*n<=a)||(n=e-(this.y+this.height-r),i*i+n*n<=a)||(i=t-(this.x+r),i*i+n*n<=a))return!0}return!1}strokeContains(t,e,r,i=.5){const{x:n,y:a,width:o,height:l,radius:h}=this,c=r*(1-i),u=r-c,f=n+h,d=a+h,g=o-h*2,p=l-h*2,m=n+o,x=a+l;return(t>=n-c&&t<=n+u||t>=m-u&&t<=m+c)&&e>=d&&e<=d+p||(e>=a-c&&e<=a+u||e>=x-u&&e<=x+c)&&t>=f&&t<=f+g?!0:t<f&&e<d&&Vt(t,e,f,d,h,u,c)||t>m-h&&e<d&&Vt(t,e,m-h,d,h,u,c)||t>m-h&&e>x-h&&Vt(t,e,m-h,x-h,h,u,c)||t<f&&e>x-h&&Vt(t,e,f,x-h,h,u,c)}toString(){return`[pixi.js/math:RoundedRectangle x=${this.x} y=${this.y}width=${this.width} height=${this.height} radius=${this.radius}]`}}const Ds=["precision mediump float;","void main(void){","float test = 0.1;","%forloop%","gl_FragColor = vec4(0.0);","}"].join(`
`);function Ws(s){let t="";for(let e=0;e<s;++e)e>0&&(t+=`
else `),e<s-1&&(t+=`if(test == ${e}.0){}`);return t}function Ls(s,t){if(s===0)throw new Error("Invalid value of `0` passed to `checkMaxIfStatementsInShader`");const e=t.createShader(t.FRAGMENT_SHADER);try{for(;;){const r=Ds.replace(/%forloop%/gi,Ws(s));if(t.shaderSource(e,r),t.compileShader(e),!t.getShaderParameter(e,t.COMPILE_STATUS))s=s/2|0;else break}}finally{t.deleteShader(e)}return s}let xt=null;function $e(){var t;if(xt)return xt;const s=Jr();return xt=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),xt=Ls(xt,s),(t=s.getExtension("WEBGL_lose_context"))==null||t.loseContext(),xt}const oi={};function Hs(s,t){let e=2166136261;for(let r=0;r<t;r++)e^=s[r].uid,e=Math.imul(e,16777619),e>>>=0;return oi[e]||Vs(s,t,e)}let _e=0;function Vs(s,t,e){const r={};let i=0;_e||(_e=$e());for(let a=0;a<_e;a++){const o=a<t?s[a]:V.EMPTY.source;r[i++]=o.source,r[i++]=o.style}const n=new bt(r);return oi[e]=n,n}class yt{constructor(t){typeof t=="number"?this.rawBinaryData=new ArrayBuffer(t):t instanceof Uint8Array?this.rawBinaryData=t.buffer:this.rawBinaryData=t,this.uint32View=new Uint32Array(this.rawBinaryData),this.float32View=new Float32Array(this.rawBinaryData),this.size=this.rawBinaryData.byteLength}get int8View(){return this._int8View||(this._int8View=new Int8Array(this.rawBinaryData)),this._int8View}get uint8View(){return this._uint8View||(this._uint8View=new Uint8Array(this.rawBinaryData)),this._uint8View}get int16View(){return this._int16View||(this._int16View=new Int16Array(this.rawBinaryData)),this._int16View}get int32View(){return this._int32View||(this._int32View=new Int32Array(this.rawBinaryData)),this._int32View}get float64View(){return this._float64Array||(this._float64Array=new Float64Array(this.rawBinaryData)),this._float64Array}get bigUint64View(){return this._bigUint64Array||(this._bigUint64Array=new BigUint64Array(this.rawBinaryData)),this._bigUint64Array}view(t){return this[`${t}View`]}destroy(){this.rawBinaryData=null,this._int8View=null,this._uint8View=null,this._int16View=null,this.uint16View=null,this._int32View=null,this.uint32View=null,this.float32View=null}static sizeOf(t){switch(t){case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;default:throw new Error(`${t} isn't a valid view type`)}}}function gr(s,t){const e=s.byteLength/8|0,r=new Float64Array(s,0,e);new Float64Array(t,0,e).set(r);const n=s.byteLength-e*8;if(n>0){const a=new Uint8Array(s,e*8,n);new Uint8Array(t,e*8,n).set(a)}}const Os={normal:"normal-npm",add:"add-npm",screen:"screen-npm"};function It(s,t){return t.alphaMode==="no-premultiply-alpha"&&Os[s]||s}class $s{constructor(){this.ids=Object.create(null),this.textures=[],this.count=0}clear(){for(let t=0;t<this.count;t++){const e=this.textures[t];this.textures[t]=null,this.ids[e.uid]=null}this.count=0}}class Ns{constructor(){this.renderPipeId="batch",this.action="startBatch",this.start=0,this.size=0,this.textures=new $s,this.blendMode="normal",this.topology="triangle-strip",this.canBundle=!0}destroy(){this.textures=null,this.gpuBindGroup=null,this.bindGroup=null,this.batcher=null}}const li=[];let ze=0;function mr(){return ze>0?li[--ze]:new Ns}function xr(s){li[ze++]=s}let Bt=0;const ci=class Yt{constructor(t={}){this.uid=N("batcher"),this.dirty=!0,this.batchIndex=0,this.batches=[],this._elements=[],Yt.defaultOptions.maxTextures=Yt.defaultOptions.maxTextures??$e(),t={...Yt.defaultOptions,...t};const{maxTextures:e,attributesInitialSize:r,indicesInitialSize:i}=t;this.attributeBuffer=new yt(r*4),this.indexBuffer=new Uint16Array(i),this.maxTextures=e}begin(){this.elementSize=0,this.elementStart=0,this.indexSize=0,this.attributeSize=0;for(let t=0;t<this.batchIndex;t++)xr(this.batches[t]);this.batchIndex=0,this._batchIndexStart=0,this._batchIndexSize=0,this.dirty=!0}add(t){this._elements[this.elementSize++]=t,t._indexStart=this.indexSize,t._attributeStart=this.attributeSize,t._batcher=this,this.indexSize+=t.indexSize,this.attributeSize+=t.attributeSize*this.vertexSize}checkAndUpdateTexture(t,e){const r=t._batch.textures.ids[e._source.uid];return!r&&r!==0?!1:(t._textureId=r,t.texture=e,!0)}updateElement(t){this.dirty=!0;const e=this.attributeBuffer;t.packAsQuad?this.packQuadAttributes(t,e.float32View,e.uint32View,t._attributeStart,t._textureId):this.packAttributes(t,e.float32View,e.uint32View,t._attributeStart,t._textureId)}break(t){const e=this._elements;if(!e[this.elementStart])return;let r=mr(),i=r.textures;i.clear();const n=e[this.elementStart];let a=It(n.blendMode,n.texture._source),o=n.topology;this.attributeSize*4>this.attributeBuffer.size&&this._resizeAttributeBuffer(this.attributeSize*4),this.indexSize>this.indexBuffer.length&&this._resizeIndexBuffer(this.indexSize);const l=this.attributeBuffer.float32View,h=this.attributeBuffer.uint32View,c=this.indexBuffer;let u=this._batchIndexSize,f=this._batchIndexStart,d="startBatch";const g=this.maxTextures;for(let p=this.elementStart;p<this.elementSize;++p){const m=e[p];e[p]=null;const _=m.texture._source,b=It(m.blendMode,_),y=a!==b||o!==m.topology;if(_._batchTick===Bt&&!y){m._textureId=_._textureBindLocation,u+=m.indexSize,m.packAsQuad?(this.packQuadAttributes(m,l,h,m._attributeStart,m._textureId),this.packQuadIndex(c,m._indexStart,m._attributeStart/this.vertexSize)):(this.packAttributes(m,l,h,m._attributeStart,m._textureId),this.packIndex(m,c,m._indexStart,m._attributeStart/this.vertexSize)),m._batch=r;continue}_._batchTick=Bt,(i.count>=g||y)&&(this._finishBatch(r,f,u-f,i,a,o,t,d),d="renderBatch",f=u,a=b,o=m.topology,r=mr(),i=r.textures,i.clear(),++Bt),m._textureId=_._textureBindLocation=i.count,i.ids[_.uid]=i.count,i.textures[i.count++]=_,m._batch=r,u+=m.indexSize,m.packAsQuad?(this.packQuadAttributes(m,l,h,m._attributeStart,m._textureId),this.packQuadIndex(c,m._indexStart,m._attributeStart/this.vertexSize)):(this.packAttributes(m,l,h,m._attributeStart,m._textureId),this.packIndex(m,c,m._indexStart,m._attributeStart/this.vertexSize))}i.count>0&&(this._finishBatch(r,f,u-f,i,a,o,t,d),f=u,++Bt),this.elementStart=this.elementSize,this._batchIndexStart=f,this._batchIndexSize=u}_finishBatch(t,e,r,i,n,a,o,l){t.gpuBindGroup=null,t.bindGroup=null,t.action=l,t.batcher=this,t.textures=i,t.blendMode=n,t.topology=a,t.start=e,t.size=r,++Bt,this.batches[this.batchIndex++]=t,o.add(t)}finish(t){this.break(t)}ensureAttributeBuffer(t){t*4<=this.attributeBuffer.size||this._resizeAttributeBuffer(t*4)}ensureIndexBuffer(t){t<=this.indexBuffer.length||this._resizeIndexBuffer(t)}_resizeAttributeBuffer(t){const e=Math.max(t,this.attributeBuffer.size*2),r=new yt(e);gr(this.attributeBuffer.rawBinaryData,r.rawBinaryData),this.attributeBuffer=r}_resizeIndexBuffer(t){const e=this.indexBuffer;let r=Math.max(t,e.length*1.5);r+=r%2;const i=r>65535?new Uint32Array(r):new Uint16Array(r);if(i.BYTES_PER_ELEMENT!==e.BYTES_PER_ELEMENT)for(let n=0;n<e.length;n++)i[n]=e[n];else gr(e.buffer,i.buffer);this.indexBuffer=i}packQuadIndex(t,e,r){t[e]=r+0,t[e+1]=r+1,t[e+2]=r+2,t[e+3]=r+0,t[e+4]=r+2,t[e+5]=r+3}packIndex(t,e,r,i){const n=t.indices,a=t.indexSize,o=t.indexOffset,l=t.attributeOffset;for(let h=0;h<a;h++)e[r++]=i+n[h+o]-l}destroy(){for(let t=0;t<this.batches.length;t++)xr(this.batches[t]);this.batches=null;for(let t=0;t<this._elements.length;t++)this._elements[t]._batch=null;this._elements=null,this.indexBuffer=null,this.attributeBuffer.destroy(),this.attributeBuffer=null}};ci.defaultOptions={maxTextures:null,attributesInitialSize:4,indicesInitialSize:6};let js=ci;var U=(s=>(s[s.MAP_READ=1]="MAP_READ",s[s.MAP_WRITE=2]="MAP_WRITE",s[s.COPY_SRC=4]="COPY_SRC",s[s.COPY_DST=8]="COPY_DST",s[s.INDEX=16]="INDEX",s[s.VERTEX=32]="VERTEX",s[s.UNIFORM=64]="UNIFORM",s[s.STORAGE=128]="STORAGE",s[s.INDIRECT=256]="INDIRECT",s[s.QUERY_RESOLVE=512]="QUERY_RESOLVE",s[s.STATIC=1024]="STATIC",s))(U||{});class J extends Tt{constructor(t){let{data:e,size:r}=t;const{usage:i,label:n,shrinkToFit:a}=t;super(),this.uid=N("buffer"),this._resourceType="buffer",this._resourceId=N("resource"),this._touched=0,this._updateID=1,this._dataInt32=null,this.shrinkToFit=!0,this.destroyed=!1,e instanceof Array&&(e=new Float32Array(e)),this._data=e,r??(r=e==null?void 0:e.byteLength);const o=!!e;this.descriptor={size:r,usage:i,mappedAtCreation:o,label:n},this.shrinkToFit=a??!0}get data(){return this._data}set data(t){this.setDataWithSize(t,t.length,!0)}get dataInt32(){return this._dataInt32||(this._dataInt32=new Int32Array(this.data.buffer)),this._dataInt32}get static(){return!!(this.descriptor.usage&U.STATIC)}set static(t){t?this.descriptor.usage|=U.STATIC:this.descriptor.usage&=~U.STATIC}setDataWithSize(t,e,r){if(this._updateID++,this._updateSize=e*t.BYTES_PER_ELEMENT,this._data===t){r&&this.emit("update",this);return}const i=this._data;if(this._data=t,this._dataInt32=null,!i||i.length!==t.length){!this.shrinkToFit&&i&&t.byteLength<i.byteLength?r&&this.emit("update",this):(this.descriptor.size=t.byteLength,this._resourceId=N("resource"),this.emit("change",this));return}r&&this.emit("update",this)}update(t){this._updateSize=t??this._updateSize,this._updateID++,this.emit("update",this)}destroy(){this.destroyed=!0,this.emit("destroy",this),this.emit("change",this),this._data=null,this.descriptor=null,this.removeAllListeners()}}function hi(s,t){if(!(s instanceof J)){let e=t?U.INDEX:U.VERTEX;s instanceof Array&&(t?(s=new Uint32Array(s),e=U.INDEX|U.COPY_DST):(s=new Float32Array(s),e=U.VERTEX|U.COPY_DST)),s=new J({data:s,label:t?"index-mesh-buffer":"vertex-mesh-buffer",usage:e})}return s}function Ys(s,t,e){const r=s.getAttribute(t);if(!r)return e.minX=0,e.minY=0,e.maxX=0,e.maxY=0,e;const i=r.buffer.data;let n=1/0,a=1/0,o=-1/0,l=-1/0;const h=i.BYTES_PER_ELEMENT,c=(r.offset||0)/h,u=(r.stride||2*4)/h;for(let f=c;f<i.length;f+=u){const d=i[f],g=i[f+1];d>o&&(o=d),g>l&&(l=g),d<n&&(n=d),g<a&&(a=g)}return e.minX=n,e.minY=a,e.maxX=o,e.maxY=l,e}function Xs(s){return(s instanceof J||Array.isArray(s)||s.BYTES_PER_ELEMENT)&&(s={buffer:s}),s.buffer=hi(s.buffer,!1),s}class ie extends Tt{constructor(t={}){super(),this.uid=N("geometry"),this._layoutKey=0,this.instanceCount=1,this._bounds=new Ut,this._boundsDirty=!0;const{attributes:e,indexBuffer:r,topology:i}=t;if(this.buffers=[],this.attributes={},e)for(const n in e)this.addAttribute(n,e[n]);this.instanceCount=t.instanceCount??1,r&&this.addIndex(r),this.topology=i||"triangle-list"}onBufferUpdate(){this._boundsDirty=!0,this.emit("update",this)}getAttribute(t){return this.attributes[t]}getIndex(){return this.indexBuffer}getBuffer(t){return this.getAttribute(t).buffer}getSize(){for(const t in this.attributes){const e=this.attributes[t];return e.buffer.data.length/(e.stride/4||e.size)}return 0}addAttribute(t,e){const r=Xs(e);this.buffers.indexOf(r.buffer)===-1&&(this.buffers.push(r.buffer),r.buffer.on("update",this.onBufferUpdate,this),r.buffer.on("change",this.onBufferUpdate,this)),this.attributes[t]=r}addIndex(t){this.indexBuffer=hi(t,!0),this.buffers.push(this.indexBuffer)}get bounds(){return this._boundsDirty?(this._boundsDirty=!1,Ys(this,"aPosition",this._bounds)):this._bounds}destroy(t=!1){this.emit("destroy",this),this.removeAllListeners(),t&&this.buffers.forEach(e=>e.destroy()),this.attributes=null,this.buffers=null,this.indexBuffer=null,this._bounds=null}}const qs=new Float32Array(1),Ks=new Uint32Array(1);class Qs extends ie{constructor(){const e=new J({data:qs,label:"attribute-batch-buffer",usage:U.VERTEX|U.COPY_DST,shrinkToFit:!1}),r=new J({data:Ks,label:"index-batch-buffer",usage:U.INDEX|U.COPY_DST,shrinkToFit:!1}),i=6*4;super({attributes:{aPosition:{buffer:e,format:"float32x2",stride:i,offset:0},aUV:{buffer:e,format:"float32x2",stride:i,offset:2*4},aColor:{buffer:e,format:"unorm8x4",stride:i,offset:4*4},aTextureIdAndRound:{buffer:e,format:"uint16x2",stride:i,offset:5*4}},indexBuffer:r})}}function _r(s,t,e){if(s)for(const r in s){const i=r.toLocaleLowerCase(),n=t[i];if(n){let a=s[r];r==="header"&&(a=a.replace(/@in\s+[^;]+;\s*/g,"").replace(/@out\s+[^;]+;\s*/g,"")),e&&n.push(`//----${e}----//`),n.push(a)}else j(`${r} placement hook does not exist in shader`)}}const Zs=/\{\{(.*?)\}\}/g;function yr(s){var r;const t={};return(((r=s.match(Zs))==null?void 0:r.map(i=>i.replace(/[{()}]/g,"")))??[]).forEach(i=>{t[i]=[]}),t}function br(s,t){let e;const r=/@in\s+([^;]+);/g;for(;(e=r.exec(s))!==null;)t.push(e[1])}function Sr(s,t,e=!1){const r=[];br(t,r),s.forEach(o=>{o.header&&br(o.header,r)});const i=r;e&&i.sort();const n=i.map((o,l)=>`       @location(${l}) ${o},`).join(`
`);let a=t.replace(/@in\s+[^;]+;\s*/g,"");return a=a.replace("{{in}}",`
${n}
`),a}function wr(s,t){let e;const r=/@out\s+([^;]+);/g;for(;(e=r.exec(s))!==null;)t.push(e[1])}function Js(s){const e=/\b(\w+)\s*:/g.exec(s);return e?e[1]:""}function tn(s){const t=/@.*?\s+/g;return s.replace(t,"")}function en(s,t){const e=[];wr(t,e),s.forEach(l=>{l.header&&wr(l.header,e)});let r=0;const i=e.sort().map(l=>l.indexOf("builtin")>-1?l:`@location(${r++}) ${l}`).join(`,
`),n=e.sort().map(l=>`       var ${tn(l)};`).join(`
`),a=`return VSOutput(
            ${e.sort().map(l=>` ${Js(l)}`).join(`,
`)});`;let o=t.replace(/@out\s+[^;]+;\s*/g,"");return o=o.replace("{{struct}}",`
${i}
`),o=o.replace("{{start}}",`
${n}
`),o=o.replace("{{return}}",`
${a}
`),o}function Tr(s,t){let e=s;for(const r in t){const i=t[r];i.join(`
`).length?e=e.replace(`{{${r}}}`,`//-----${r} START-----//
${i.join(`
`)}
//----${r} FINISH----//`):e=e.replace(`{{${r}}}`,"")}return e}const it=Object.create(null),ye=new Map;let rn=0;function sn({template:s,bits:t}){const e=ui(s,t);if(it[e])return it[e];const{vertex:r,fragment:i}=an(s,t);return it[e]=di(r,i,t),it[e]}function nn({template:s,bits:t}){const e=ui(s,t);return it[e]||(it[e]=di(s.vertex,s.fragment,t)),it[e]}function an(s,t){const e=t.map(a=>a.vertex).filter(a=>!!a),r=t.map(a=>a.fragment).filter(a=>!!a);let i=Sr(e,s.vertex,!0);i=en(e,i);const n=Sr(r,s.fragment,!0);return{vertex:i,fragment:n}}function ui(s,t){return t.map(e=>(ye.has(e)||ye.set(e,rn++),ye.get(e))).sort((e,r)=>e-r).join("-")+s.vertex+s.fragment}function di(s,t,e){const r=yr(s),i=yr(t);return e.forEach(n=>{_r(n.vertex,r,n.name),_r(n.fragment,i,n.name)}),{vertex:Tr(s,r),fragment:Tr(t,i)}}const on=`
    @in aPosition: vec2<f32>;
    @in aUV: vec2<f32>;

    @out @builtin(position) vPosition: vec4<f32>;
    @out vUV : vec2<f32>;
    @out vColor : vec4<f32>;

    {{header}}

    struct VSOutput {
        {{struct}}
    };

    @vertex
    fn main( {{in}} ) -> VSOutput {

        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;
        var modelMatrix = mat3x3<f32>(
            1.0, 0.0, 0.0,
            0.0, 1.0, 0.0,
            0.0, 0.0, 1.0
          );
        var position = aPosition;
        var uv = aUV;

        {{start}}
        
        vColor = vec4<f32>(1., 1., 1., 1.);

        {{main}}

        vUV = uv;

        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;

        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);
       
        vColor *= globalUniforms.uWorldColorAlpha;

        {{end}}

        {{return}}
    };
`,ln=`
    @in vUV : vec2<f32>;
    @in vColor : vec4<f32>;
   
    {{header}}

    @fragment
    fn main(
        {{in}}
      ) -> @location(0) vec4<f32> {
        
        {{start}}

        var outColor:vec4<f32>;
      
        {{main}}
        
        var finalColor:vec4<f32> = outColor * vColor;

        {{end}}

        return finalColor;
      };
`,cn=`
    in vec2 aPosition;
    in vec2 aUV;

    out vec4 vColor;
    out vec2 vUV;

    {{header}}

    void main(void){

        mat3 worldTransformMatrix = uWorldTransformMatrix;
        mat3 modelMatrix = mat3(
            1.0, 0.0, 0.0,
            0.0, 1.0, 0.0,
            0.0, 0.0, 1.0
          );
        vec2 position = aPosition;
        vec2 uv = aUV;
        
        {{start}}
        
        vColor = vec4(1.);
        
        {{main}}
        
        vUV = uv;
        
        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;

        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);

        vColor *= uWorldColorAlpha;

        {{end}}
    }
`,hn=`
   
    in vec4 vColor;
    in vec2 vUV;

    out vec4 finalColor;

    {{header}}

    void main(void) {
        
        {{start}}

        vec4 outColor;
      
        {{main}}
        
        finalColor = outColor * vColor;
        
        {{end}}
    }
`,un={name:"global-uniforms-bit",vertex:{header:`
        struct GlobalUniforms {
            uProjectionMatrix:mat3x3<f32>,
            uWorldTransformMatrix:mat3x3<f32>,
            uWorldColorAlpha: vec4<f32>,
            uResolution: vec2<f32>,
        }

        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;
        `}},dn={name:"global-uniforms-bit",vertex:{header:`
          uniform mat3 uProjectionMatrix;
          uniform mat3 uWorldTransformMatrix;
          uniform vec4 uWorldColorAlpha;
          uniform vec2 uResolution;
        `}};function Ne({bits:s,name:t}){const e=sn({template:{fragment:ln,vertex:on},bits:[un,...s]});return Et.from({name:t,vertex:{source:e.vertex,entryPoint:"main"},fragment:{source:e.fragment,entryPoint:"main"}})}function je({bits:s,name:t}){return new We({name:t,...nn({template:{vertex:cn,fragment:hn},bits:[dn,...s]})})}const fi={name:"color-bit",vertex:{header:`
            @in aColor: vec4<f32>;
        `,main:`
            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);
        `}},pi={name:"color-bit",vertex:{header:`
            in vec4 aColor;
        `,main:`
            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);
        `}},be={};function fn(s){const t=[];if(s===1)t.push("@group(1) @binding(0) var textureSource1: texture_2d<f32>;"),t.push("@group(1) @binding(1) var textureSampler1: sampler;");else{let e=0;for(let r=0;r<s;r++)t.push(`@group(1) @binding(${e++}) var textureSource${r+1}: texture_2d<f32>;`),t.push(`@group(1) @binding(${e++}) var textureSampler${r+1}: sampler;`)}return t.join(`
`)}function pn(s){const t=[];if(s===1)t.push("outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);");else{t.push("switch vTextureId {");for(let e=0;e<s;e++)e===s-1?t.push("  default:{"):t.push(`  case ${e}:{`),t.push(`      outColor = textureSampleGrad(textureSource${e+1}, textureSampler${e+1}, vUV, uvDx, uvDy);`),t.push("      break;}");t.push("}")}return t.join(`
`)}function gi(s){return be[s]||(be[s]={name:"texture-batch-bit",vertex:{header:`
                @in aTextureIdAndRound: vec2<u32>;
                @out @interpolate(flat) vTextureId : u32;
            `,main:`
                vTextureId = aTextureIdAndRound.y;
            `,end:`
                if(aTextureIdAndRound.x == 1)
                {
                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
                }
            `},fragment:{header:`
                @in @interpolate(flat) vTextureId: u32;

                ${fn(s)}
            `,main:`
                var uvDx = dpdx(vUV);
                var uvDy = dpdy(vUV);

                ${pn(s)}
            `}}),be[s]}const Se={};function gn(s){const t=[];for(let e=0;e<s;e++)e>0&&t.push("else"),e<s-1&&t.push(`if(vTextureId < ${e}.5)`),t.push("{"),t.push(`	outColor = texture(uTextures[${e}], vUV);`),t.push("}");return t.join(`
`)}function mi(s){return Se[s]||(Se[s]={name:"texture-batch-bit",vertex:{header:`
                in vec2 aTextureIdAndRound;
                out float vTextureId;

            `,main:`
                vTextureId = aTextureIdAndRound.y;
            `,end:`
                if(aTextureIdAndRound.x == 1.)
                {
                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
                }
            `},fragment:{header:`
                in float vTextureId;

                uniform sampler2D uTextures[${s}];

            `,main:`

                ${gn(s)}
            `}}),Se[s]}const Ye={name:"round-pixels-bit",vertex:{header:`
            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> 
            {
                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
            }
        `}},Xe={name:"round-pixels-bit",vertex:{header:`   
            vec2 roundPixels(vec2 position, vec2 targetSize)
            {       
                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
            }
        `}},vr={};function xi(s){let t=vr[s];if(t)return t;const e=new Int32Array(s);for(let r=0;r<s;r++)e[r]=r;return t=vr[s]=new nt({uTextures:{value:e,type:"i32",size:s}},{isStatic:!0}),t}class mn extends vt{constructor(t){const e=je({name:"batch",bits:[pi,mi(t),Xe]}),r=Ne({name:"batch",bits:[fi,gi(t),Ye]});super({glProgram:e,gpuProgram:r,resources:{batchSamplers:xi(t)}})}}let Pr=null;const _i=class yi extends js{constructor(){super(...arguments),this.geometry=new Qs,this.shader=Pr||(Pr=new mn(this.maxTextures)),this.name=yi.extension.name,this.vertexSize=6}packAttributes(t,e,r,i,n){const a=n<<16|t.roundPixels&65535,o=t.transform,l=o.a,h=o.b,c=o.c,u=o.d,f=o.tx,d=o.ty,{positions:g,uvs:p}=t,m=t.color,x=t.attributeOffset,_=x+t.attributeSize;for(let b=x;b<_;b++){const y=b*2,T=g[y],S=g[y+1];e[i++]=l*T+c*S+f,e[i++]=u*S+h*T+d,e[i++]=p[y],e[i++]=p[y+1],r[i++]=m,r[i++]=a}}packQuadAttributes(t,e,r,i,n){const a=t.texture,o=t.transform,l=o.a,h=o.b,c=o.c,u=o.d,f=o.tx,d=o.ty,g=t.bounds,p=g.maxX,m=g.minX,x=g.maxY,_=g.minY,b=a.uvs,y=t.color,T=n<<16|t.roundPixels&65535;e[i+0]=l*m+c*_+f,e[i+1]=u*_+h*m+d,e[i+2]=b.x0,e[i+3]=b.y0,r[i+4]=y,r[i+5]=T,e[i+6]=l*p+c*_+f,e[i+7]=u*_+h*p+d,e[i+8]=b.x1,e[i+9]=b.y1,r[i+10]=y,r[i+11]=T,e[i+12]=l*p+c*x+f,e[i+13]=u*x+h*p+d,e[i+14]=b.x2,e[i+15]=b.y2,r[i+16]=y,r[i+17]=T,e[i+18]=l*m+c*x+f,e[i+19]=u*x+h*m+d,e[i+20]=b.x3,e[i+21]=b.y3,r[i+22]=y,r[i+23]=T}};_i.extension={type:[B.Batcher],name:"default"};let xn=_i;function _n(s,t,e,r,i,n,a,o=null){let l=0;e*=t,i*=n;const h=o.a,c=o.b,u=o.c,f=o.d,d=o.tx,g=o.ty;for(;l<a;){const p=s[e],m=s[e+1];r[i]=h*p+u*m+d,r[i+1]=c*p+f*m+g,i+=n,e+=t,l++}}function yn(s,t,e,r){let i=0;for(t*=e;i<r;)s[t]=0,s[t+1]=0,t+=e,i++}function bi(s,t,e,r,i){const n=t.a,a=t.b,o=t.c,l=t.d,h=t.tx,c=t.ty;e||(e=0),r||(r=2),i||(i=s.length/r-e);let u=e*r;for(let f=0;f<i;f++){const d=s[u],g=s[u+1];s[u]=n*d+o*g+h,s[u+1]=a*d+l*g+c,u+=r}}const bn=new H;class qe{constructor(){this.packAsQuad=!1,this.batcherName="default",this.topology="triangle-list",this.applyTransform=!0,this.roundPixels=0,this._batcher=null,this._batch=null}get uvs(){return this.geometryData.uvs}get positions(){return this.geometryData.vertices}get indices(){return this.geometryData.indices}get blendMode(){return this.applyTransform?this.renderable.groupBlendMode:"normal"}get color(){const t=this.baseColor,e=t>>16|t&65280|(t&255)<<16,r=this.renderable;return r?ls(e,r.groupColor)+(this.alpha*r.groupAlpha*255<<24):e+(this.alpha*255<<24)}get transform(){var t;return((t=this.renderable)==null?void 0:t.groupTransform)||bn}copyTo(t){t.indexOffset=this.indexOffset,t.indexSize=this.indexSize,t.attributeOffset=this.attributeOffset,t.attributeSize=this.attributeSize,t.baseColor=this.baseColor,t.alpha=this.alpha,t.texture=this.texture,t.geometryData=this.geometryData,t.topology=this.topology}reset(){this.applyTransform=!0,this.renderable=null,this.topology="triangle-list"}}const Gt={extension:{type:B.ShapeBuilder,name:"circle"},build(s,t){let e,r,i,n,a,o;if(s.type==="circle"){const y=s;e=y.x,r=y.y,a=o=y.radius,i=n=0}else if(s.type==="ellipse"){const y=s;e=y.x,r=y.y,a=y.halfWidth,o=y.halfHeight,i=n=0}else{const y=s,T=y.width/2,S=y.height/2;e=y.x+T,r=y.y+S,a=o=Math.max(0,Math.min(y.radius,Math.min(T,S))),i=T-a,n=S-o}if(!(a>=0&&o>=0&&i>=0&&n>=0))return t;const l=Math.ceil(2.3*Math.sqrt(a+o)),h=l*8+(i?4:0)+(n?4:0);if(h===0)return t;if(l===0)return t[0]=t[6]=e+i,t[1]=t[3]=r+n,t[2]=t[4]=e-i,t[5]=t[7]=r-n,t;let c=0,u=l*4+(i?2:0)+2,f=u,d=h,g=i+a,p=n,m=e+g,x=e-g,_=r+p;if(t[c++]=m,t[c++]=_,t[--u]=_,t[--u]=x,n){const y=r-p;t[f++]=x,t[f++]=y,t[--d]=y,t[--d]=m}for(let y=1;y<l;y++){const T=Math.PI/2*(y/l),S=i+Math.cos(T)*a,w=n+Math.sin(T)*o,k=e+S,R=e-S,P=r+w,v=r-w;t[c++]=k,t[c++]=P,t[--u]=P,t[--u]=R,t[f++]=R,t[f++]=v,t[--d]=v,t[--d]=k}g=i,p=n+o,m=e+g,x=e-g,_=r+p;const b=r-p;return t[c++]=m,t[c++]=_,t[--d]=b,t[--d]=m,i&&(t[c++]=x,t[c++]=_,t[--d]=b,t[--d]=x),t},triangulate(s,t,e,r,i,n){if(s.length===0)return;let a=0,o=0;for(let c=0;c<s.length;c+=2)a+=s[c],o+=s[c+1];a/=s.length/2,o/=s.length/2;let l=r;t[l*e]=a,t[l*e+1]=o;const h=l++;for(let c=0;c<s.length;c+=2)t[l*e]=s[c],t[l*e+1]=s[c+1],c>0&&(i[n++]=l,i[n++]=h,i[n++]=l-1),l++;i[n++]=h+1,i[n++]=h,i[n++]=l-1}},Sn={...Gt,extension:{...Gt.extension,name:"ellipse"}},wn={...Gt,extension:{...Gt.extension,name:"roundedRectangle"}},Si=1e-4,Cr=1e-4;function Tn(s){const t=s.length;if(t<6)return 1;let e=0;for(let r=0,i=s[t-2],n=s[t-1];r<t;r+=2){const a=s[r],o=s[r+1];e+=(a-i)*(o+n),i=a,n=o}return e<0?-1:1}function Mr(s,t,e,r,i,n,a,o){const l=s-e*i,h=t-r*i,c=s+e*n,u=t+r*n;let f,d;a?(f=r,d=-e):(f=-r,d=e);const g=l+f,p=h+d,m=c+f,x=u+d;return o.push(g,p),o.push(m,x),2}function dt(s,t,e,r,i,n,a,o){const l=e-s,h=r-t;let c=Math.atan2(l,h),u=Math.atan2(i-s,n-t);o&&c<u?c+=Math.PI*2:!o&&c>u&&(u+=Math.PI*2);let f=c;const d=u-c,g=Math.abs(d),p=Math.sqrt(l*l+h*h),m=(15*g*Math.sqrt(p)/Math.PI>>0)+1,x=d/m;if(f+=x,o){a.push(s,t),a.push(e,r);for(let _=1,b=f;_<m;_++,b+=x)a.push(s,t),a.push(s+Math.sin(b)*p,t+Math.cos(b)*p);a.push(s,t),a.push(i,n)}else{a.push(e,r),a.push(s,t);for(let _=1,b=f;_<m;_++,b+=x)a.push(s+Math.sin(b)*p,t+Math.cos(b)*p),a.push(s,t);a.push(i,n),a.push(s,t)}return m*2}function vn(s,t,e,r,i,n){const a=Si;if(s.length===0)return;const o=t;let l=o.alignment;if(t.alignment!==.5){let I=Tn(s);l=(l-.5)*I+.5}const h=new gt(s[0],s[1]),c=new gt(s[s.length-2],s[s.length-1]),u=r,f=Math.abs(h.x-c.x)<a&&Math.abs(h.y-c.y)<a;if(u){s=s.slice(),f&&(s.pop(),s.pop(),c.set(s[s.length-2],s[s.length-1]));const I=(h.x+c.x)*.5,et=(c.y+h.y)*.5;s.unshift(I,et),s.push(I,et)}const d=i,g=s.length/2;let p=s.length;const m=d.length/2,x=o.width/2,_=x*x,b=o.miterLimit*o.miterLimit;let y=s[0],T=s[1],S=s[2],w=s[3],k=0,R=0,P=-(T-w),v=y-S,A=0,z=0,$=Math.sqrt(P*P+v*v);P/=$,v/=$,P*=x,v*=x;const ot=l,M=(1-ot)*2,F=ot*2;u||(o.cap==="round"?p+=dt(y-P*(M-F)*.5,T-v*(M-F)*.5,y-P*M,T-v*M,y+P*F,T+v*F,d,!0)+2:o.cap==="square"&&(p+=Mr(y,T,P,v,M,F,!0,d))),d.push(y-P*M,T-v*M),d.push(y+P*F,T+v*F);for(let I=1;I<g-1;++I){y=s[(I-1)*2],T=s[(I-1)*2+1],S=s[I*2],w=s[I*2+1],k=s[(I+1)*2],R=s[(I+1)*2+1],P=-(T-w),v=y-S,$=Math.sqrt(P*P+v*v),P/=$,v/=$,P*=x,v*=x,A=-(w-R),z=S-k,$=Math.sqrt(A*A+z*z),A/=$,z/=$,A*=x,z*=x;const et=S-y,Pt=T-w,Ct=S-k,Mt=R-w,sr=et*Ct+Pt*Mt,Dt=Pt*Ct-Mt*et,kt=Dt<0;if(Math.abs(Dt)<.001*Math.abs(sr)){d.push(S-P*M,w-v*M),d.push(S+P*F,w+v*F),sr>=0&&(o.join==="round"?p+=dt(S,w,S-P*M,w-v*M,S-A*M,w-z*M,d,!1)+4:p+=2,d.push(S-A*F,w-z*F),d.push(S+A*M,w+z*M));continue}const nr=(-P+y)*(-v+w)-(-P+S)*(-v+T),ar=(-A+k)*(-z+w)-(-A+S)*(-z+R),Wt=(et*ar-Ct*nr)/Dt,Lt=(Mt*nr-Pt*ar)/Dt,ae=(Wt-S)*(Wt-S)+(Lt-w)*(Lt-w),lt=S+(Wt-S)*M,ct=w+(Lt-w)*M,ht=S-(Wt-S)*F,ut=w-(Lt-w)*F,ss=Math.min(et*et+Pt*Pt,Ct*Ct+Mt*Mt),or=kt?M:F,ns=ss+or*or*_;ae<=ns?o.join==="bevel"||ae/_>b?(kt?(d.push(lt,ct),d.push(S+P*F,w+v*F),d.push(lt,ct),d.push(S+A*F,w+z*F)):(d.push(S-P*M,w-v*M),d.push(ht,ut),d.push(S-A*M,w-z*M),d.push(ht,ut)),p+=2):o.join==="round"?kt?(d.push(lt,ct),d.push(S+P*F,w+v*F),p+=dt(S,w,S+P*F,w+v*F,S+A*F,w+z*F,d,!0)+4,d.push(lt,ct),d.push(S+A*F,w+z*F)):(d.push(S-P*M,w-v*M),d.push(ht,ut),p+=dt(S,w,S-P*M,w-v*M,S-A*M,w-z*M,d,!1)+4,d.push(S-A*M,w-z*M),d.push(ht,ut)):(d.push(lt,ct),d.push(ht,ut)):(d.push(S-P*M,w-v*M),d.push(S+P*F,w+v*F),o.join==="round"?kt?p+=dt(S,w,S+P*F,w+v*F,S+A*F,w+z*F,d,!0)+2:p+=dt(S,w,S-P*M,w-v*M,S-A*M,w-z*M,d,!1)+2:o.join==="miter"&&ae/_<=b&&(kt?(d.push(ht,ut),d.push(ht,ut)):(d.push(lt,ct),d.push(lt,ct)),p+=2),d.push(S-A*M,w-z*M),d.push(S+A*F,w+z*F),p+=2)}y=s[(g-2)*2],T=s[(g-2)*2+1],S=s[(g-1)*2],w=s[(g-1)*2+1],P=-(T-w),v=y-S,$=Math.sqrt(P*P+v*v),P/=$,v/=$,P*=x,v*=x,d.push(S-P*M,w-v*M),d.push(S+P*F,w+v*F),u||(o.cap==="round"?p+=dt(S-P*(M-F)*.5,w-v*(M-F)*.5,S-P*M,w-v*M,S+P*F,w+v*F,d,!1)+2:o.cap==="square"&&(p+=Mr(S,w,P,v,M,F,!1,d)));const is=Cr*Cr;for(let I=m;I<p+m-2;++I)y=d[I*2],T=d[I*2+1],S=d[(I+1)*2],w=d[(I+1)*2+1],k=d[(I+2)*2],R=d[(I+2)*2+1],!(Math.abs(y*(w-R)+S*(R-T)+k*(T-w))<is)&&n.push(I,I+1,I+2)}function Pn(s,t,e,r){const i=Si;if(s.length===0)return;const n=s[0],a=s[1],o=s[s.length-2],l=s[s.length-1],h=t||Math.abs(n-o)<i&&Math.abs(a-l)<i,c=e,u=s.length/2,f=c.length/2;for(let d=0;d<u;d++)c.push(s[d*2]),c.push(s[d*2+1]);for(let d=0;d<u-1;d++)r.push(f+d,f+d+1);h&&r.push(f+u-1,f)}function wi(s,t,e,r,i,n,a){const o=gs(s,t,2);if(!o)return;for(let h=0;h<o.length;h+=3)n[a++]=o[h]+i,n[a++]=o[h+1]+i,n[a++]=o[h+2]+i;let l=i*r;for(let h=0;h<s.length;h+=2)e[l]=s[h],e[l+1]=s[h+1],l+=r}const Cn=[],Mn={extension:{type:B.ShapeBuilder,name:"polygon"},build(s,t){for(let e=0;e<s.points.length;e++)t[e]=s.points[e];return t},triangulate(s,t,e,r,i,n){wi(s,Cn,t,e,r,i,n)}},kn={extension:{type:B.ShapeBuilder,name:"rectangle"},build(s,t){const e=s,r=e.x,i=e.y,n=e.width,a=e.height;return n>=0&&a>=0&&(t[0]=r,t[1]=i,t[2]=r+n,t[3]=i,t[4]=r+n,t[5]=i+a,t[6]=r,t[7]=i+a),t},triangulate(s,t,e,r,i,n){let a=0;r*=e,t[r+a]=s[0],t[r+a+1]=s[1],a+=e,t[r+a]=s[2],t[r+a+1]=s[3],a+=e,t[r+a]=s[6],t[r+a+1]=s[7],a+=e,t[r+a]=s[4],t[r+a+1]=s[5],a+=e;const o=r/e;i[n++]=o,i[n++]=o+1,i[n++]=o+2,i[n++]=o+1,i[n++]=o+3,i[n++]=o+2}},Bn={extension:{type:B.ShapeBuilder,name:"triangle"},build(s,t){return t[0]=s.x,t[1]=s.y,t[2]=s.x2,t[3]=s.y2,t[4]=s.x3,t[5]=s.y3,t},triangulate(s,t,e,r,i,n){let a=0;r*=e,t[r+a]=s[0],t[r+a+1]=s[1],a+=e,t[r+a]=s[2],t[r+a+1]=s[3],a+=e,t[r+a]=s[4],t[r+a+1]=s[5];const o=r/e;i[n++]=o,i[n++]=o+1,i[n++]=o+2}},Rn=new H,An=new X;function Fn(s,t,e,r){const i=t.matrix?s.copyFrom(t.matrix).invert():s.identity();if(t.textureSpace==="local"){const a=e.getBounds(An);t.width&&a.pad(t.width);const{x:o,y:l}=a,h=1/a.width,c=1/a.height,u=-o*h,f=-l*c,d=i.a,g=i.b,p=i.c,m=i.d;i.a*=h,i.b*=h,i.c*=c,i.d*=c,i.tx=u*d+f*p+i.tx,i.ty=u*g+f*m+i.ty}else i.translate(t.texture.frame.x,t.texture.frame.y),i.scale(1/t.texture.source.width,1/t.texture.source.height);const n=t.texture.source.style;return!(t.fill instanceof tt)&&n.addressMode==="clamp-to-edge"&&(n.addressMode="repeat",n.update()),r&&i.append(Rn.copyFrom(r).invert()),i}const se={};O.handleByMap(B.ShapeBuilder,se);O.add(kn,Mn,Bn,Gt,Sn,wn);const zn=new X,In=new H;function Gn(s,t){const{geometryData:e,batches:r}=t;r.length=0,e.indices.length=0,e.vertices.length=0,e.uvs.length=0;for(let i=0;i<s.instructions.length;i++){const n=s.instructions[i];if(n.action==="texture")Un(n.data,r,e);else if(n.action==="fill"||n.action==="stroke"){const a=n.action==="stroke",o=n.data.path.shapePath,l=n.data.style,h=n.data.hole;a&&h&&kr(h.shapePath,l,!0,r,e),h&&(o.shapePrimitives[o.shapePrimitives.length-1].holes=h.shapePath.shapePrimitives),kr(o,l,a,r,e)}}}function Un(s,t,e){const{vertices:r,uvs:i,indices:n}=e,a=n.length,o=r.length/2,l=[],h=se.rectangle,c=zn,u=s.image;c.x=s.dx,c.y=s.dy,c.width=s.dw,c.height=s.dh;const f=s.transform;h.build(c,l),f&&bi(l,f),h.triangulate(l,r,2,o,n,a);const d=u.uvs;i.push(d.x0,d.y0,d.x1,d.y1,d.x3,d.y3,d.x2,d.y2);const g=E.get(qe);g.indexOffset=a,g.indexSize=n.length-a,g.attributeOffset=o,g.attributeSize=r.length/2-o,g.baseColor=s.style,g.alpha=s.alpha,g.texture=u,g.geometryData=e,t.push(g)}function kr(s,t,e,r,i){const{vertices:n,uvs:a,indices:o}=i;s.shapePrimitives.forEach(({shape:l,transform:h,holes:c})=>{const u=o.length,f=n.length/2,d=[],g=se[l.type];let p="triangle-list";if(g.build(l,d),h&&bi(d,h),e){const b=l.closePath??!0,y=t;y.pixelLine?(Pn(d,b,n,o),p="line-list"):vn(d,y,!1,b,n,o)}else if(c){const b=[],y=d.slice();En(c).forEach(S=>{b.push(y.length/2),y.push(...S)}),wi(y,b,n,2,f,o,u)}else g.triangulate(d,n,2,f,o,u);const m=a.length/2,x=t.texture;if(x!==V.WHITE){const b=Fn(In,t,l,h);_n(n,2,f,a,m,2,n.length/2-f,b)}else yn(a,m,2,n.length/2-f);const _=E.get(qe);_.indexOffset=u,_.indexSize=o.length-u,_.attributeOffset=f,_.attributeSize=n.length/2-f,_.baseColor=t.color,_.alpha=t.alpha,_.texture=x,_.geometryData=i,_.topology=p,r.push(_)})}function En(s){const t=[];for(let e=0;e<s.length;e++){const r=s[e].shape,i=[];se[r.type].build(r,i),t.push(i)}return t}class Dn{constructor(){this.batches=[],this.geometryData={vertices:[],uvs:[],indices:[]}}}class Wn{constructor(){this.batcher=new xn,this.instructions=new cs}init(){this.instructions.reset()}get geometry(){return G(hs,"GraphicsContextRenderData#geometry is deprecated, please use batcher.geometry instead."),this.batcher.geometry}}const Ke=class Ie{constructor(t){this._gpuContextHash={},this._graphicsDataContextHash=Object.create(null),t.renderableGC.addManagedHash(this,"_gpuContextHash"),t.renderableGC.addManagedHash(this,"_graphicsDataContextHash")}init(t){Ie.defaultOptions.bezierSmoothness=(t==null?void 0:t.bezierSmoothness)??Ie.defaultOptions.bezierSmoothness}getContextRenderData(t){return this._graphicsDataContextHash[t.uid]||this._initContextRenderData(t)}updateGpuContext(t){let e=this._gpuContextHash[t.uid]||this._initContext(t);if(t.dirty){e?this._cleanGraphicsContextData(t):e=this._initContext(t),Gn(t,e);const r=t.batchMode;t.customShader||r==="no-batch"?e.isBatchable=!1:r==="auto"&&(e.isBatchable=e.geometryData.vertices.length<400),t.dirty=!1}return e}getGpuContext(t){return this._gpuContextHash[t.uid]||this._initContext(t)}_initContextRenderData(t){const e=E.get(Wn),{batches:r,geometryData:i}=this._gpuContextHash[t.uid],n=i.vertices.length,a=i.indices.length;for(let c=0;c<r.length;c++)r[c].applyTransform=!1;const o=e.batcher;o.ensureAttributeBuffer(n),o.ensureIndexBuffer(a),o.begin();for(let c=0;c<r.length;c++){const u=r[c];o.add(u)}o.finish(e.instructions);const l=o.geometry;l.indexBuffer.setDataWithSize(o.indexBuffer,o.indexSize,!0),l.buffers[0].setDataWithSize(o.attributeBuffer.float32View,o.attributeSize,!0);const h=o.batches;for(let c=0;c<h.length;c++){const u=h[c];u.bindGroup=Hs(u.textures.textures,u.textures.count)}return this._graphicsDataContextHash[t.uid]=e,e}_initContext(t){const e=new Dn;return e.context=t,this._gpuContextHash[t.uid]=e,t.on("destroy",this.onGraphicsContextDestroy,this),this._gpuContextHash[t.uid]}onGraphicsContextDestroy(t){this._cleanGraphicsContextData(t),t.off("destroy",this.onGraphicsContextDestroy,this),this._gpuContextHash[t.uid]=null}_cleanGraphicsContextData(t){const e=this._gpuContextHash[t.uid];e.isBatchable||this._graphicsDataContextHash[t.uid]&&(E.return(this.getContextRenderData(t)),this._graphicsDataContextHash[t.uid]=null),e.batches&&e.batches.forEach(r=>{E.return(r)})}destroy(){for(const t in this._gpuContextHash)this._gpuContextHash[t]&&this.onGraphicsContextDestroy(this._gpuContextHash[t].context)}};Ke.extension={type:[B.WebGLSystem,B.WebGPUSystem,B.CanvasSystem],name:"graphicsContext"};Ke.defaultOptions={bezierSmoothness:.5};let Qe=Ke;const Ln=8,Ot=11920929e-14,Hn=1;function Ti(s,t,e,r,i,n,a,o,l,h){const u=Math.min(.99,Math.max(0,h??Qe.defaultOptions.bezierSmoothness));let f=(Hn-u)/1;return f*=f,Vn(t,e,r,i,n,a,o,l,s,f),s}function Vn(s,t,e,r,i,n,a,o,l,h){Ge(s,t,e,r,i,n,a,o,l,h,0),l.push(a,o)}function Ge(s,t,e,r,i,n,a,o,l,h,c){if(c>Ln)return;const u=(s+e)/2,f=(t+r)/2,d=(e+i)/2,g=(r+n)/2,p=(i+a)/2,m=(n+o)/2,x=(u+d)/2,_=(f+g)/2,b=(d+p)/2,y=(g+m)/2,T=(x+b)/2,S=(_+y)/2;if(c>0){let w=a-s,k=o-t;const R=Math.abs((e-a)*k-(r-o)*w),P=Math.abs((i-a)*k-(n-o)*w);if(R>Ot&&P>Ot){if((R+P)*(R+P)<=h*(w*w+k*k)){l.push(T,S);return}}else if(R>Ot){if(R*R<=h*(w*w+k*k)){l.push(T,S);return}}else if(P>Ot){if(P*P<=h*(w*w+k*k)){l.push(T,S);return}}else if(w=T-(s+a)/2,k=S-(t+o)/2,w*w+k*k<=h){l.push(T,S);return}}Ge(s,t,u,f,x,_,T,S,l,h,c+1),Ge(T,S,b,y,p,m,a,o,l,h,c+1)}const On=8,$n=11920929e-14,Nn=1;function jn(s,t,e,r,i,n,a,o){const h=Math.min(.99,Math.max(0,o??Qe.defaultOptions.bezierSmoothness));let c=(Nn-h)/1;return c*=c,Yn(t,e,r,i,n,a,s,c),s}function Yn(s,t,e,r,i,n,a,o){Ue(a,s,t,e,r,i,n,o,0),a.push(i,n)}function Ue(s,t,e,r,i,n,a,o,l){if(l>On)return;const h=(t+r)/2,c=(e+i)/2,u=(r+n)/2,f=(i+a)/2,d=(h+u)/2,g=(c+f)/2;let p=n-t,m=a-e;const x=Math.abs((r-n)*m-(i-a)*p);if(x>$n){if(x*x<=o*(p*p+m*m)){s.push(d,g);return}}else if(p=d-(t+n)/2,m=g-(e+a)/2,p*p+m*m<=o){s.push(d,g);return}Ue(s,t,e,h,c,d,g,o,l+1),Ue(s,d,g,u,f,n,a,o,l+1)}function vi(s,t,e,r,i,n,a,o){let l=Math.abs(i-n);(!a&&i>n||a&&n>i)&&(l=2*Math.PI-l),o||(o=Math.max(6,Math.floor(6*Math.pow(r,1/3)*(l/Math.PI)))),o=Math.max(o,3);let h=l/o,c=i;h*=a?-1:1;for(let u=0;u<o+1;u++){const f=Math.cos(c),d=Math.sin(c),g=t+f*r,p=e+d*r;s.push(g,p),c+=h}}function Xn(s,t,e,r,i,n){const a=s[s.length-2],l=s[s.length-1]-e,h=a-t,c=i-e,u=r-t,f=Math.abs(l*u-h*c);if(f<1e-8||n===0){(s[s.length-2]!==t||s[s.length-1]!==e)&&s.push(t,e);return}const d=l*l+h*h,g=c*c+u*u,p=l*c+h*u,m=n*Math.sqrt(d)/f,x=n*Math.sqrt(g)/f,_=m*p/d,b=x*p/g,y=m*u+x*h,T=m*c+x*l,S=h*(x+_),w=l*(x+_),k=u*(m+b),R=c*(m+b),P=Math.atan2(w-T,S-y),v=Math.atan2(R-T,k-y);vi(s,y+t,T+e,n,P,v,h*c>u*l)}const zt=Math.PI*2,we={centerX:0,centerY:0,ang1:0,ang2:0},Te=({x:s,y:t},e,r,i,n,a,o,l)=>{s*=e,t*=r;const h=i*s-n*t,c=n*s+i*t;return l.x=h+a,l.y=c+o,l};function qn(s,t){const e=t===-1.5707963267948966?-.551915024494:1.3333333333333333*Math.tan(t/4),r=t===1.5707963267948966?.551915024494:e,i=Math.cos(s),n=Math.sin(s),a=Math.cos(s+t),o=Math.sin(s+t);return[{x:i-n*r,y:n+i*r},{x:a+o*r,y:o-a*r},{x:a,y:o}]}const Br=(s,t,e,r)=>{const i=s*r-t*e<0?-1:1;let n=s*e+t*r;return n>1&&(n=1),n<-1&&(n=-1),i*Math.acos(n)},Kn=(s,t,e,r,i,n,a,o,l,h,c,u,f)=>{const d=Math.pow(i,2),g=Math.pow(n,2),p=Math.pow(c,2),m=Math.pow(u,2);let x=d*g-d*m-g*p;x<0&&(x=0),x/=d*m+g*p,x=Math.sqrt(x)*(a===o?-1:1);const _=x*i/n*u,b=x*-n/i*c,y=h*_-l*b+(s+e)/2,T=l*_+h*b+(t+r)/2,S=(c-_)/i,w=(u-b)/n,k=(-c-_)/i,R=(-u-b)/n,P=Br(1,0,S,w);let v=Br(S,w,k,R);o===0&&v>0&&(v-=zt),o===1&&v<0&&(v+=zt),f.centerX=y,f.centerY=T,f.ang1=P,f.ang2=v};function Qn(s,t,e,r,i,n,a,o=0,l=0,h=0){if(n===0||a===0)return;const c=Math.sin(o*zt/360),u=Math.cos(o*zt/360),f=u*(t-r)/2+c*(e-i)/2,d=-c*(t-r)/2+u*(e-i)/2;if(f===0&&d===0)return;n=Math.abs(n),a=Math.abs(a);const g=Math.pow(f,2)/Math.pow(n,2)+Math.pow(d,2)/Math.pow(a,2);g>1&&(n*=Math.sqrt(g),a*=Math.sqrt(g)),Kn(t,e,r,i,n,a,l,h,c,u,f,d,we);let{ang1:p,ang2:m}=we;const{centerX:x,centerY:_}=we;let b=Math.abs(m)/(zt/4);Math.abs(1-b)<1e-7&&(b=1);const y=Math.max(Math.ceil(b),1);m/=y;let T=s[s.length-2],S=s[s.length-1];const w={x:0,y:0};for(let k=0;k<y;k++){const R=qn(p,m),{x:P,y:v}=Te(R[0],n,a,u,c,x,_,w),{x:A,y:z}=Te(R[1],n,a,u,c,x,_,w),{x:$,y:ot}=Te(R[2],n,a,u,c,x,_,w);Ti(s,T,S,P,v,A,z,$,ot),T=$,S=ot,p+=m}}function Zn(s,t,e){const r=(a,o)=>{const l=o.x-a.x,h=o.y-a.y,c=Math.sqrt(l*l+h*h),u=l/c,f=h/c;return{len:c,nx:u,ny:f}},i=(a,o)=>{a===0?s.moveTo(o.x,o.y):s.lineTo(o.x,o.y)};let n=t[t.length-1];for(let a=0;a<t.length;a++){const o=t[a%t.length],l=o.radius??e;if(l<=0){i(a,o),n=o;continue}const h=t[(a+1)%t.length],c=r(o,n),u=r(o,h);if(c.len<1e-4||u.len<1e-4){i(a,o),n=o;continue}let f=Math.asin(c.nx*u.ny-c.ny*u.nx),d=1,g=!1;c.nx*u.nx-c.ny*-u.ny<0?f<0?f=Math.PI+f:(f=Math.PI-f,d=-1,g=!0):f>0&&(d=-1,g=!0);const p=f/2;let m,x=Math.abs(Math.cos(p)*l/Math.sin(p));x>Math.min(c.len/2,u.len/2)?(x=Math.min(c.len/2,u.len/2),m=Math.abs(x*Math.sin(p)/Math.cos(p))):m=l;const _=o.x+u.nx*x+-u.ny*m*d,b=o.y+u.ny*x+u.nx*m*d,y=Math.atan2(c.ny,c.nx)+Math.PI/2*d,T=Math.atan2(u.ny,u.nx)-Math.PI/2*d;a===0&&s.moveTo(_+Math.cos(y)*m,b+Math.sin(y)*m),s.arc(_,b,m,y,T,g),n=o}}function Jn(s,t,e,r){const i=(o,l)=>Math.sqrt((o.x-l.x)**2+(o.y-l.y)**2),n=(o,l,h)=>({x:o.x+(l.x-o.x)*h,y:o.y+(l.y-o.y)*h}),a=t.length;for(let o=0;o<a;o++){const l=t[(o+1)%a],h=l.radius??e;if(h<=0){o===0?s.moveTo(l.x,l.y):s.lineTo(l.x,l.y);continue}const c=t[o],u=t[(o+2)%a],f=i(c,l);let d;if(f<1e-4)d=l;else{const m=Math.min(f/2,h);d=n(l,c,m/f)}const g=i(u,l);let p;if(g<1e-4)p=l;else{const m=Math.min(g/2,h);p=n(l,u,m/g)}o===0?s.moveTo(d.x,d.y):s.lineTo(d.x,d.y),s.quadraticCurveTo(l.x,l.y,p.x,p.y,r)}}const ta=new X;class ea{constructor(t){this.shapePrimitives=[],this._currentPoly=null,this._bounds=new Ut,this._graphicsPath2D=t,this.signed=t.checkForHoles}moveTo(t,e){return this.startPoly(t,e),this}lineTo(t,e){this._ensurePoly();const r=this._currentPoly.points,i=r[r.length-2],n=r[r.length-1];return(i!==t||n!==e)&&r.push(t,e),this}arc(t,e,r,i,n,a){this._ensurePoly(!1);const o=this._currentPoly.points;return vi(o,t,e,r,i,n,a),this}arcTo(t,e,r,i,n){this._ensurePoly();const a=this._currentPoly.points;return Xn(a,t,e,r,i,n),this}arcToSvg(t,e,r,i,n,a,o){const l=this._currentPoly.points;return Qn(l,this._currentPoly.lastX,this._currentPoly.lastY,a,o,t,e,r,i,n),this}bezierCurveTo(t,e,r,i,n,a,o){this._ensurePoly();const l=this._currentPoly;return Ti(this._currentPoly.points,l.lastX,l.lastY,t,e,r,i,n,a,o),this}quadraticCurveTo(t,e,r,i,n){this._ensurePoly();const a=this._currentPoly;return jn(this._currentPoly.points,a.lastX,a.lastY,t,e,r,i,n),this}closePath(){return this.endPoly(!0),this}addPath(t,e){this.endPoly(),e&&!e.isIdentity()&&(t=t.clone(!0),t.transform(e));const r=this.shapePrimitives,i=r.length;for(let n=0;n<t.instructions.length;n++){const a=t.instructions[n];this[a.action](...a.data)}if(t.checkForHoles&&r.length-i>1){let n=null;for(let a=i;a<r.length;a++){const o=r[a];if(o.shape.type==="polygon"){const l=o.shape,h=n==null?void 0:n.shape;h&&h.containsPolygon(l)?(n.holes||(n.holes=[]),n.holes.push(o),r.copyWithin(a,a+1),r.length--,a--):n=o}}}return this}finish(t=!1){this.endPoly(t)}rect(t,e,r,i,n){return this.drawShape(new X(t,e,r,i),n),this}circle(t,e,r,i){return this.drawShape(new He(t,e,r),i),this}poly(t,e,r){const i=new Ft(t);return i.closePath=e,this.drawShape(i,r),this}regularPoly(t,e,r,i,n=0,a){i=Math.max(i|0,3);const o=-1*Math.PI/2+n,l=Math.PI*2/i,h=[];for(let c=0;c<i;c++){const u=o-c*l;h.push(t+r*Math.cos(u),e+r*Math.sin(u))}return this.poly(h,!0,a),this}roundPoly(t,e,r,i,n,a=0,o){if(i=Math.max(i|0,3),n<=0)return this.regularPoly(t,e,r,i,a);const l=r*Math.sin(Math.PI/i)-.001;n=Math.min(n,l);const h=-1*Math.PI/2+a,c=Math.PI*2/i,u=(i-2)*Math.PI/i/2;for(let f=0;f<i;f++){const d=f*c+h,g=t+r*Math.cos(d),p=e+r*Math.sin(d),m=d+Math.PI+u,x=d-Math.PI-u,_=g+n*Math.cos(m),b=p+n*Math.sin(m),y=g+n*Math.cos(x),T=p+n*Math.sin(x);f===0?this.moveTo(_,b):this.lineTo(_,b),this.quadraticCurveTo(g,p,y,T,o)}return this.closePath()}roundShape(t,e,r=!1,i){return t.length<3?this:(r?Jn(this,t,e,i):Zn(this,t,e),this.closePath())}filletRect(t,e,r,i,n){if(n===0)return this.rect(t,e,r,i);const a=Math.min(r,i)/2,o=Math.min(a,Math.max(-a,n)),l=t+r,h=e+i,c=o<0?-o:0,u=Math.abs(o);return this.moveTo(t,e+u).arcTo(t+c,e+c,t+u,e,u).lineTo(l-u,e).arcTo(l-c,e+c,l,e+u,u).lineTo(l,h-u).arcTo(l-c,h-c,t+r-u,h,u).lineTo(t+u,h).arcTo(t+c,h-c,t,h-u,u).closePath()}chamferRect(t,e,r,i,n,a){if(n<=0)return this.rect(t,e,r,i);const o=Math.min(n,Math.min(r,i)/2),l=t+r,h=e+i,c=[t+o,e,l-o,e,l,e+o,l,h-o,l-o,h,t+o,h,t,h-o,t,e+o];for(let u=c.length-1;u>=2;u-=2)c[u]===c[u-2]&&c[u-1]===c[u-3]&&c.splice(u-1,2);return this.poly(c,!0,a)}ellipse(t,e,r,i,n){return this.drawShape(new Ve(t,e,r,i),n),this}roundRect(t,e,r,i,n,a){return this.drawShape(new Oe(t,e,r,i,n),a),this}drawShape(t,e){return this.endPoly(),this.shapePrimitives.push({shape:t,transform:e}),this}startPoly(t,e){let r=this._currentPoly;return r&&this.endPoly(),r=new Ft,r.points.push(t,e),this._currentPoly=r,this}endPoly(t=!1){const e=this._currentPoly;return e&&e.points.length>2&&(e.closePath=t,this.shapePrimitives.push({shape:e})),this._currentPoly=null,this}_ensurePoly(t=!0){if(!this._currentPoly&&(this._currentPoly=new Ft,t)){const e=this.shapePrimitives[this.shapePrimitives.length-1];if(e){let r=e.shape.x,i=e.shape.y;if(e.transform&&!e.transform.isIdentity()){const n=e.transform,a=r;r=n.a*r+n.c*i+n.tx,i=n.b*a+n.d*i+n.ty}this._currentPoly.points.push(r,i)}else this._currentPoly.points.push(0,0)}}buildPath(){const t=this._graphicsPath2D;this.shapePrimitives.length=0,this._currentPoly=null;for(let e=0;e<t.instructions.length;e++){const r=t.instructions[e];this[r.action](...r.data)}this.finish()}get bounds(){const t=this._bounds;t.clear();const e=this.shapePrimitives;for(let r=0;r<e.length;r++){const i=e[r],n=i.shape.getBounds(ta);i.transform?t.addRect(n,i.transform):t.addRect(n)}return t}}class wt{constructor(t,e=!1){this.instructions=[],this.uid=N("graphicsPath"),this._dirty=!0,this.checkForHoles=e,typeof t=="string"?Is(t,this):this.instructions=(t==null?void 0:t.slice())??[]}get shapePath(){return this._shapePath||(this._shapePath=new ea(this)),this._dirty&&(this._dirty=!1,this._shapePath.buildPath()),this._shapePath}addPath(t,e){return t=t.clone(),this.instructions.push({action:"addPath",data:[t,e]}),this._dirty=!0,this}arc(...t){return this.instructions.push({action:"arc",data:t}),this._dirty=!0,this}arcTo(...t){return this.instructions.push({action:"arcTo",data:t}),this._dirty=!0,this}arcToSvg(...t){return this.instructions.push({action:"arcToSvg",data:t}),this._dirty=!0,this}bezierCurveTo(...t){return this.instructions.push({action:"bezierCurveTo",data:t}),this._dirty=!0,this}bezierCurveToShort(t,e,r,i,n){const a=this.instructions[this.instructions.length-1],o=this.getLastPoint(gt.shared);let l=0,h=0;if(!a||a.action!=="bezierCurveTo")l=o.x,h=o.y;else{l=a.data[2],h=a.data[3];const c=o.x,u=o.y;l=c+(c-l),h=u+(u-h)}return this.instructions.push({action:"bezierCurveTo",data:[l,h,t,e,r,i,n]}),this._dirty=!0,this}closePath(){return this.instructions.push({action:"closePath",data:[]}),this._dirty=!0,this}ellipse(...t){return this.instructions.push({action:"ellipse",data:t}),this._dirty=!0,this}lineTo(...t){return this.instructions.push({action:"lineTo",data:t}),this._dirty=!0,this}moveTo(...t){return this.instructions.push({action:"moveTo",data:t}),this}quadraticCurveTo(...t){return this.instructions.push({action:"quadraticCurveTo",data:t}),this._dirty=!0,this}quadraticCurveToShort(t,e,r){const i=this.instructions[this.instructions.length-1],n=this.getLastPoint(gt.shared);let a=0,o=0;if(!i||i.action!=="quadraticCurveTo")a=n.x,o=n.y;else{a=i.data[0],o=i.data[1];const l=n.x,h=n.y;a=l+(l-a),o=h+(h-o)}return this.instructions.push({action:"quadraticCurveTo",data:[a,o,t,e,r]}),this._dirty=!0,this}rect(t,e,r,i,n){return this.instructions.push({action:"rect",data:[t,e,r,i,n]}),this._dirty=!0,this}circle(t,e,r,i){return this.instructions.push({action:"circle",data:[t,e,r,i]}),this._dirty=!0,this}roundRect(...t){return this.instructions.push({action:"roundRect",data:t}),this._dirty=!0,this}poly(...t){return this.instructions.push({action:"poly",data:t}),this._dirty=!0,this}regularPoly(...t){return this.instructions.push({action:"regularPoly",data:t}),this._dirty=!0,this}roundPoly(...t){return this.instructions.push({action:"roundPoly",data:t}),this._dirty=!0,this}roundShape(...t){return this.instructions.push({action:"roundShape",data:t}),this._dirty=!0,this}filletRect(...t){return this.instructions.push({action:"filletRect",data:t}),this._dirty=!0,this}chamferRect(...t){return this.instructions.push({action:"chamferRect",data:t}),this._dirty=!0,this}star(t,e,r,i,n,a,o){n||(n=i/2);const l=-1*Math.PI/2+a,h=r*2,c=Math.PI*2/h,u=[];for(let f=0;f<h;f++){const d=f%2?n:i,g=f*c+l;u.push(t+d*Math.cos(g),e+d*Math.sin(g))}return this.poly(u,!0,o),this}clone(t=!1){const e=new wt;if(e.checkForHoles=this.checkForHoles,!t)e.instructions=this.instructions.slice();else for(let r=0;r<this.instructions.length;r++){const i=this.instructions[r];e.instructions.push({action:i.action,data:i.data.slice()})}return e}clear(){return this.instructions.length=0,this._dirty=!0,this}transform(t){if(t.isIdentity())return this;const e=t.a,r=t.b,i=t.c,n=t.d,a=t.tx,o=t.ty;let l=0,h=0,c=0,u=0,f=0,d=0,g=0,p=0;for(let m=0;m<this.instructions.length;m++){const x=this.instructions[m],_=x.data;switch(x.action){case"moveTo":case"lineTo":l=_[0],h=_[1],_[0]=e*l+i*h+a,_[1]=r*l+n*h+o;break;case"bezierCurveTo":c=_[0],u=_[1],f=_[2],d=_[3],l=_[4],h=_[5],_[0]=e*c+i*u+a,_[1]=r*c+n*u+o,_[2]=e*f+i*d+a,_[3]=r*f+n*d+o,_[4]=e*l+i*h+a,_[5]=r*l+n*h+o;break;case"quadraticCurveTo":c=_[0],u=_[1],l=_[2],h=_[3],_[0]=e*c+i*u+a,_[1]=r*c+n*u+o,_[2]=e*l+i*h+a,_[3]=r*l+n*h+o;break;case"arcToSvg":l=_[5],h=_[6],g=_[0],p=_[1],_[0]=e*g+i*p,_[1]=r*g+n*p,_[5]=e*l+i*h+a,_[6]=r*l+n*h+o;break;case"circle":_[4]=Rt(_[3],t);break;case"rect":_[4]=Rt(_[4],t);break;case"ellipse":_[8]=Rt(_[8],t);break;case"roundRect":_[5]=Rt(_[5],t);break;case"addPath":_[0].transform(t);break;case"poly":_[2]=Rt(_[2],t);break;default:j("unknown transform action",x.action);break}}return this._dirty=!0,this}get bounds(){return this.shapePath.bounds}getLastPoint(t){let e=this.instructions.length-1,r=this.instructions[e];if(!r)return t.x=0,t.y=0,t;for(;r.action==="closePath";){if(e--,e<0)return t.x=0,t.y=0,t;r=this.instructions[e]}switch(r.action){case"moveTo":case"lineTo":t.x=r.data[0],t.y=r.data[1];break;case"quadraticCurveTo":t.x=r.data[2],t.y=r.data[3];break;case"bezierCurveTo":t.x=r.data[4],t.y=r.data[5];break;case"arc":case"arcToSvg":t.x=r.data[5],t.y=r.data[6];break;case"addPath":r.data[0].getLastPoint(t);break}return t}}function Rt(s,t){return s?s.prepend(t):t.clone()}function W(s,t,e){const r=s.getAttribute(t);return r?Number(r):e}function ra(s,t){const e=s.querySelectorAll("defs");for(let r=0;r<e.length;r++){const i=e[r];for(let n=0;n<i.children.length;n++){const a=i.children[n];switch(a.nodeName.toLowerCase()){case"lineargradient":t.defs[a.id]=ia(a);break;case"radialgradient":t.defs[a.id]=sa();break}}}}function ia(s){const t=W(s,"x1",0),e=W(s,"y1",0),r=W(s,"x2",1),i=W(s,"y2",0),n=s.getAttribute("gradientUnits")||"objectBoundingBox",a=new tt(t,e,r,i,n==="objectBoundingBox"?"local":"global");for(let o=0;o<s.children.length;o++){const l=s.children[o],h=W(l,"offset",0),c=D.shared.setValue(l.getAttribute("stop-color")).toNumber();a.addColorStop(h,c)}return a}function sa(s){return j("[SVG Parser] Radial gradients are not yet supported"),new tt(0,0,1,0)}function Rr(s){const t=s.match(/url\s*\(\s*['"]?\s*#([^'"\s)]+)\s*['"]?\s*\)/i);return t?t[1]:""}const Ar={fill:{type:"paint",default:0},"fill-opacity":{type:"number",default:1},stroke:{type:"paint",default:0},"stroke-width":{type:"number",default:1},"stroke-opacity":{type:"number",default:1},"stroke-linecap":{type:"string",default:"butt"},"stroke-linejoin":{type:"string",default:"miter"},"stroke-miterlimit":{type:"number",default:10},"stroke-dasharray":{type:"string",default:"none"},"stroke-dashoffset":{type:"number",default:0},opacity:{type:"number",default:1}};function Pi(s,t){const e=s.getAttribute("style"),r={},i={},n={strokeStyle:r,fillStyle:i,useFill:!1,useStroke:!1};for(const a in Ar){const o=s.getAttribute(a);o&&Fr(t,n,a,o.trim())}if(e){const a=e.split(";");for(let o=0;o<a.length;o++){const l=a[o].trim(),[h,c]=l.split(":");Ar[h]&&Fr(t,n,h,c.trim())}}return{strokeStyle:n.useStroke?r:null,fillStyle:n.useFill?i:null,useFill:n.useFill,useStroke:n.useStroke}}function Fr(s,t,e,r){switch(e){case"stroke":if(r!=="none"){if(r.startsWith("url(")){const i=Rr(r);t.strokeStyle.fill=s.defs[i]}else t.strokeStyle.color=D.shared.setValue(r).toNumber();t.useStroke=!0}break;case"stroke-width":t.strokeStyle.width=Number(r);break;case"fill":if(r!=="none"){if(r.startsWith("url(")){const i=Rr(r);t.fillStyle.fill=s.defs[i]}else t.fillStyle.color=D.shared.setValue(r).toNumber();t.useFill=!0}break;case"fill-opacity":t.fillStyle.alpha=Number(r);break;case"stroke-opacity":t.strokeStyle.alpha=Number(r);break;case"opacity":t.fillStyle.alpha=Number(r),t.strokeStyle.alpha=Number(r);break}}function na(s,t){if(typeof s=="string"){const a=document.createElement("div");a.innerHTML=s.trim(),s=a.querySelector("svg")}const e={context:t,defs:{},path:new wt};ra(s,e);const r=s.children,{fillStyle:i,strokeStyle:n}=Pi(s,e);for(let a=0;a<r.length;a++){const o=r[a];o.nodeName.toLowerCase()!=="defs"&&Ci(o,e,i,n)}return t}function Ci(s,t,e,r){const i=s.children,{fillStyle:n,strokeStyle:a}=Pi(s,t);n&&e?e={...e,...n}:n&&(e=n),a&&r?r={...r,...a}:a&&(r=a);const o=!e&&!r;o&&(e={color:0});let l,h,c,u,f,d,g,p,m,x,_,b,y,T,S,w,k;switch(s.nodeName.toLowerCase()){case"path":T=s.getAttribute("d"),s.getAttribute("fill-rule")==="evenodd"&&j("SVG Evenodd fill rule not supported, your svg may render incorrectly"),S=new wt(T,!0),t.context.path(S),e&&t.context.fill(e),r&&t.context.stroke(r);break;case"circle":g=W(s,"cx",0),p=W(s,"cy",0),m=W(s,"r",0),t.context.ellipse(g,p,m,m),e&&t.context.fill(e),r&&t.context.stroke(r);break;case"rect":l=W(s,"x",0),h=W(s,"y",0),w=W(s,"width",0),k=W(s,"height",0),x=W(s,"rx",0),_=W(s,"ry",0),x||_?t.context.roundRect(l,h,w,k,x||_):t.context.rect(l,h,w,k),e&&t.context.fill(e),r&&t.context.stroke(r);break;case"ellipse":g=W(s,"cx",0),p=W(s,"cy",0),x=W(s,"rx",0),_=W(s,"ry",0),t.context.beginPath(),t.context.ellipse(g,p,x,_),e&&t.context.fill(e),r&&t.context.stroke(r);break;case"line":c=W(s,"x1",0),u=W(s,"y1",0),f=W(s,"x2",0),d=W(s,"y2",0),t.context.beginPath(),t.context.moveTo(c,u),t.context.lineTo(f,d),r&&t.context.stroke(r);break;case"polygon":y=s.getAttribute("points"),b=y.match(/\d+/g).map(R=>parseInt(R,10)),t.context.poly(b,!0),e&&t.context.fill(e),r&&t.context.stroke(r);break;case"polyline":y=s.getAttribute("points"),b=y.match(/\d+/g).map(R=>parseInt(R,10)),t.context.poly(b,!1),r&&t.context.stroke(r);break;case"g":case"svg":break;default:{j(`[SVG parser] <${s.nodeName}> elements unsupported`);break}}o&&(e=null);for(let R=0;R<i.length;R++)Ci(i[R],t,e,r)}function aa(s){return D.isColorLike(s)}function zr(s){return s instanceof re}function Ir(s){return s instanceof tt}function oa(s){return s instanceof V}function la(s,t,e){const r=D.shared.setValue(t??0);return s.color=r.toNumber(),s.alpha=r.alpha===1?e.alpha:r.alpha,s.texture=V.WHITE,{...e,...s}}function ca(s,t,e){return s.texture=t,{...e,...s}}function Gr(s,t,e){return s.fill=t,s.color=16777215,s.texture=t.texture,s.matrix=t.transform,{...e,...s}}function Ur(s,t,e){return t.buildGradient(),s.fill=t,s.color=16777215,s.texture=t.texture,s.matrix=t.transform,s.textureSpace=t.textureSpace,{...e,...s}}function ha(s,t){const e={...t,...s},r=D.shared.setValue(e.color);return e.alpha*=r.alpha,e.color=r.toNumber(),e}function ft(s,t){if(s==null)return null;const e={},r=s;return aa(s)?la(e,s,t):oa(s)?ca(e,s,t):zr(s)?Gr(e,s,t):Ir(s)?Ur(e,s,t):r.fill&&zr(r.fill)?Gr(r,r.fill,t):r.fill&&Ir(r.fill)?Ur(r,r.fill,t):ha(r,t)}function Zt(s,t){const{width:e,alignment:r,miterLimit:i,cap:n,join:a,pixelLine:o,...l}=t,h=ft(s,l);return h?{width:e,alignment:r,miterLimit:i,cap:n,join:a,pixelLine:o,...h}:null}const ua=new gt,Er=new H,Ze=class K extends Tt{constructor(){super(...arguments),this.uid=N("graphicsContext"),this.dirty=!0,this.batchMode="auto",this.instructions=[],this._activePath=new wt,this._transform=new H,this._fillStyle={...K.defaultFillStyle},this._strokeStyle={...K.defaultStrokeStyle},this._stateStack=[],this._tick=0,this._bounds=new Ut,this._boundsDirty=!0}clone(){const t=new K;return t.batchMode=this.batchMode,t.instructions=this.instructions.slice(),t._activePath=this._activePath.clone(),t._transform=this._transform.clone(),t._fillStyle={...this._fillStyle},t._strokeStyle={...this._strokeStyle},t._stateStack=this._stateStack.slice(),t._bounds=this._bounds.clone(),t._boundsDirty=!0,t}get fillStyle(){return this._fillStyle}set fillStyle(t){this._fillStyle=ft(t,K.defaultFillStyle)}get strokeStyle(){return this._strokeStyle}set strokeStyle(t){this._strokeStyle=Zt(t,K.defaultStrokeStyle)}setFillStyle(t){return this._fillStyle=ft(t,K.defaultFillStyle),this}setStrokeStyle(t){return this._strokeStyle=ft(t,K.defaultStrokeStyle),this}texture(t,e,r,i,n,a){return this.instructions.push({action:"texture",data:{image:t,dx:r||0,dy:i||0,dw:n||t.frame.width,dh:a||t.frame.height,transform:this._transform.clone(),alpha:this._fillStyle.alpha,style:e?D.shared.setValue(e).toNumber():16777215}}),this.onUpdate(),this}beginPath(){return this._activePath=new wt,this}fill(t,e){let r;const i=this.instructions[this.instructions.length-1];return this._tick===0&&i&&i.action==="stroke"?r=i.data.path:r=this._activePath.clone(),r?(t!=null&&(e!==void 0&&typeof t=="number"&&(G(L,"GraphicsContext.fill(color, alpha) is deprecated, use GraphicsContext.fill({ color, alpha }) instead"),t={color:t,alpha:e}),this._fillStyle=ft(t,K.defaultFillStyle)),this.instructions.push({action:"fill",data:{style:this.fillStyle,path:r}}),this.onUpdate(),this._initNextPathLocation(),this._tick=0,this):this}_initNextPathLocation(){const{x:t,y:e}=this._activePath.getLastPoint(gt.shared);this._activePath.clear(),this._activePath.moveTo(t,e)}stroke(t){let e;const r=this.instructions[this.instructions.length-1];return this._tick===0&&r&&r.action==="fill"?e=r.data.path:e=this._activePath.clone(),e?(t!=null&&(this._strokeStyle=Zt(t,K.defaultStrokeStyle)),this.instructions.push({action:"stroke",data:{style:this.strokeStyle,path:e}}),this.onUpdate(),this._initNextPathLocation(),this._tick=0,this):this}cut(){for(let t=0;t<2;t++){const e=this.instructions[this.instructions.length-1-t],r=this._activePath.clone();if(e&&(e.action==="stroke"||e.action==="fill"))if(e.data.hole)e.data.hole.addPath(r);else{e.data.hole=r;break}}return this._initNextPathLocation(),this}arc(t,e,r,i,n,a){this._tick++;const o=this._transform;return this._activePath.arc(o.a*t+o.c*e+o.tx,o.b*t+o.d*e+o.ty,r,i,n,a),this}arcTo(t,e,r,i,n){this._tick++;const a=this._transform;return this._activePath.arcTo(a.a*t+a.c*e+a.tx,a.b*t+a.d*e+a.ty,a.a*r+a.c*i+a.tx,a.b*r+a.d*i+a.ty,n),this}arcToSvg(t,e,r,i,n,a,o){this._tick++;const l=this._transform;return this._activePath.arcToSvg(t,e,r,i,n,l.a*a+l.c*o+l.tx,l.b*a+l.d*o+l.ty),this}bezierCurveTo(t,e,r,i,n,a,o){this._tick++;const l=this._transform;return this._activePath.bezierCurveTo(l.a*t+l.c*e+l.tx,l.b*t+l.d*e+l.ty,l.a*r+l.c*i+l.tx,l.b*r+l.d*i+l.ty,l.a*n+l.c*a+l.tx,l.b*n+l.d*a+l.ty,o),this}closePath(){var t;return this._tick++,(t=this._activePath)==null||t.closePath(),this}ellipse(t,e,r,i){return this._tick++,this._activePath.ellipse(t,e,r,i,this._transform.clone()),this}circle(t,e,r){return this._tick++,this._activePath.circle(t,e,r,this._transform.clone()),this}path(t){return this._tick++,this._activePath.addPath(t,this._transform.clone()),this}lineTo(t,e){this._tick++;const r=this._transform;return this._activePath.lineTo(r.a*t+r.c*e+r.tx,r.b*t+r.d*e+r.ty),this}moveTo(t,e){this._tick++;const r=this._transform,i=this._activePath.instructions,n=r.a*t+r.c*e+r.tx,a=r.b*t+r.d*e+r.ty;return i.length===1&&i[0].action==="moveTo"?(i[0].data[0]=n,i[0].data[1]=a,this):(this._activePath.moveTo(n,a),this)}quadraticCurveTo(t,e,r,i,n){this._tick++;const a=this._transform;return this._activePath.quadraticCurveTo(a.a*t+a.c*e+a.tx,a.b*t+a.d*e+a.ty,a.a*r+a.c*i+a.tx,a.b*r+a.d*i+a.ty,n),this}rect(t,e,r,i){return this._tick++,this._activePath.rect(t,e,r,i,this._transform.clone()),this}roundRect(t,e,r,i,n){return this._tick++,this._activePath.roundRect(t,e,r,i,n,this._transform.clone()),this}poly(t,e){return this._tick++,this._activePath.poly(t,e,this._transform.clone()),this}regularPoly(t,e,r,i,n=0,a){return this._tick++,this._activePath.regularPoly(t,e,r,i,n,a),this}roundPoly(t,e,r,i,n,a){return this._tick++,this._activePath.roundPoly(t,e,r,i,n,a),this}roundShape(t,e,r,i){return this._tick++,this._activePath.roundShape(t,e,r,i),this}filletRect(t,e,r,i,n){return this._tick++,this._activePath.filletRect(t,e,r,i,n),this}chamferRect(t,e,r,i,n,a){return this._tick++,this._activePath.chamferRect(t,e,r,i,n,a),this}star(t,e,r,i,n=0,a=0){return this._tick++,this._activePath.star(t,e,r,i,n,a,this._transform.clone()),this}svg(t){return this._tick++,na(t,this),this}restore(){const t=this._stateStack.pop();return t&&(this._transform=t.transform,this._fillStyle=t.fillStyle,this._strokeStyle=t.strokeStyle),this}save(){return this._stateStack.push({transform:this._transform.clone(),fillStyle:{...this._fillStyle},strokeStyle:{...this._strokeStyle}}),this}getTransform(){return this._transform}resetTransform(){return this._transform.identity(),this}rotate(t){return this._transform.rotate(t),this}scale(t,e=t){return this._transform.scale(t,e),this}setTransform(t,e,r,i,n,a){return t instanceof H?(this._transform.set(t.a,t.b,t.c,t.d,t.tx,t.ty),this):(this._transform.set(t,e,r,i,n,a),this)}transform(t,e,r,i,n,a){return t instanceof H?(this._transform.append(t),this):(Er.set(t,e,r,i,n,a),this._transform.append(Er),this)}translate(t,e=t){return this._transform.translate(t,e),this}clear(){return this._activePath.clear(),this.instructions.length=0,this.resetTransform(),this.onUpdate(),this}onUpdate(){this.dirty||(this.emit("update",this,16),this.dirty=!0,this._boundsDirty=!0)}get bounds(){if(!this._boundsDirty)return this._bounds;const t=this._bounds;t.clear();for(let e=0;e<this.instructions.length;e++){const r=this.instructions[e],i=r.action;if(i==="fill"){const n=r.data;t.addBounds(n.path.bounds)}else if(i==="texture"){const n=r.data;t.addFrame(n.dx,n.dy,n.dx+n.dw,n.dy+n.dh,n.transform)}if(i==="stroke"){const n=r.data,a=n.style.alignment,o=n.style.width*(1-a),l=n.path.bounds;t.addFrame(l.minX-o,l.minY-o,l.maxX+o,l.maxY+o)}}return t}containsPoint(t){var i;if(!this.bounds.containsPoint(t.x,t.y))return!1;const e=this.instructions;let r=!1;for(let n=0;n<e.length;n++){const a=e[n],o=a.data,l=o.path;if(!a.action||!l)continue;const h=o.style,c=l.shapePath.shapePrimitives;for(let u=0;u<c.length;u++){const f=c[u].shape;if(!h||!f)continue;const d=c[u].transform,g=d?d.applyInverse(t,ua):t;if(a.action==="fill")r=f.contains(g.x,g.y);else{const m=h;r=f.strokeContains(g.x,g.y,m.width,m.alignment)}const p=o.hole;if(p){const m=(i=p.shapePath)==null?void 0:i.shapePrimitives;if(m)for(let x=0;x<m.length;x++)m[x].shape.contains(g.x,g.y)&&(r=!1)}if(r)return!0}}return r}destroy(t=!1){if(this._stateStack.length=0,this._transform=null,this.emit("destroy",this),this.removeAllListeners(),typeof t=="boolean"?t:t==null?void 0:t.texture){const r=typeof t=="boolean"?t:t==null?void 0:t.textureSource;this._fillStyle.texture&&this._fillStyle.texture.destroy(r),this._strokeStyle.texture&&this._strokeStyle.texture.destroy(r)}this._fillStyle=null,this._strokeStyle=null,this.instructions=null,this._activePath=null,this._bounds=null,this._stateStack=null,this.customShader=null,this._transform=null}};Ze.defaultFillStyle={color:16777215,alpha:1,texture:V.WHITE,matrix:null,fill:null,textureSpace:"local"};Ze.defaultStrokeStyle={width:1,color:16777215,alpha:1,alignment:.5,miterLimit:10,cap:"butt",join:"miter",texture:V.WHITE,matrix:null,fill:null,textureSpace:"local",pixelLine:!1};let Y=Ze;const Dr=["align","breakWords","cssOverrides","fontVariant","fontWeight","leading","letterSpacing","lineHeight","padding","textBaseline","trim","whiteSpace","wordWrap","wordWrapWidth","fontFamily","fontStyle","fontSize"];function Mi(s){const t=[];let e=0;for(let r=0;r<Dr.length;r++){const i=`_${Dr[r]}`;t[e++]=s[i]}return e=ki(s._fill,t,e),e=da(s._stroke,t,e),e=fa(s.dropShadow,t,e),t.join("-")}function ki(s,t,e){var r;return s&&(t[e++]=s.color,t[e++]=s.alpha,t[e++]=(r=s.fill)==null?void 0:r.styleKey),e}function da(s,t,e){return s&&(e=ki(s,t,e),t[e++]=s.width,t[e++]=s.alignment,t[e++]=s.cap,t[e++]=s.join,t[e++]=s.miterLimit),e}function fa(s,t,e){return s&&(t[e++]=s.alpha,t[e++]=s.angle,t[e++]=s.blur,t[e++]=s.distance,t[e++]=D.shared.setValue(s.color).toNumber()),e}const Je=class _t extends Tt{constructor(t={}){super(),pa(t);const e={..._t.defaultTextStyle,...t};for(const r in e){const i=r;this[i]=e[r]}this.update()}get align(){return this._align}set align(t){this._align=t,this.update()}get breakWords(){return this._breakWords}set breakWords(t){this._breakWords=t,this.update()}get dropShadow(){return this._dropShadow}set dropShadow(t){t!==null&&typeof t=="object"?this._dropShadow=this._createProxy({..._t.defaultDropShadow,...t}):this._dropShadow=t?this._createProxy({..._t.defaultDropShadow}):null,this.update()}get fontFamily(){return this._fontFamily}set fontFamily(t){this._fontFamily=t,this.update()}get fontSize(){return this._fontSize}set fontSize(t){typeof t=="string"?this._fontSize=parseInt(t,10):this._fontSize=t,this.update()}get fontStyle(){return this._fontStyle}set fontStyle(t){this._fontStyle=t.toLowerCase(),this.update()}get fontVariant(){return this._fontVariant}set fontVariant(t){this._fontVariant=t,this.update()}get fontWeight(){return this._fontWeight}set fontWeight(t){this._fontWeight=t,this.update()}get leading(){return this._leading}set leading(t){this._leading=t,this.update()}get letterSpacing(){return this._letterSpacing}set letterSpacing(t){this._letterSpacing=t,this.update()}get lineHeight(){return this._lineHeight}set lineHeight(t){this._lineHeight=t,this.update()}get padding(){return this._padding}set padding(t){this._padding=t,this.update()}get trim(){return this._trim}set trim(t){this._trim=t,this.update()}get textBaseline(){return this._textBaseline}set textBaseline(t){this._textBaseline=t,this.update()}get whiteSpace(){return this._whiteSpace}set whiteSpace(t){this._whiteSpace=t,this.update()}get wordWrap(){return this._wordWrap}set wordWrap(t){this._wordWrap=t,this.update()}get wordWrapWidth(){return this._wordWrapWidth}set wordWrapWidth(t){this._wordWrapWidth=t,this.update()}get fill(){return this._originalFill}set fill(t){t!==this._originalFill&&(this._originalFill=t,this._isFillStyle(t)&&(this._originalFill=this._createProxy({...Y.defaultFillStyle,...t},()=>{this._fill=ft({...this._originalFill},Y.defaultFillStyle)})),this._fill=ft(t===0?"black":t,Y.defaultFillStyle),this.update())}get stroke(){return this._originalStroke}set stroke(t){t!==this._originalStroke&&(this._originalStroke=t,this._isFillStyle(t)&&(this._originalStroke=this._createProxy({...Y.defaultStrokeStyle,...t},()=>{this._stroke=Zt({...this._originalStroke},Y.defaultStrokeStyle)})),this._stroke=Zt(t,Y.defaultStrokeStyle),this.update())}_generateKey(){return this._styleKey=Mi(this),this._styleKey}update(){this._styleKey=null,this.emit("update",this)}reset(){const t=_t.defaultTextStyle;for(const e in t)this[e]=t[e]}get styleKey(){return this._styleKey||this._generateKey()}clone(){return new _t({align:this.align,breakWords:this.breakWords,dropShadow:this._dropShadow?{...this._dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,leading:this.leading,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,textBaseline:this.textBaseline,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth})}destroy(t=!1){var r,i,n,a;if(this.removeAllListeners(),typeof t=="boolean"?t:t==null?void 0:t.texture){const o=typeof t=="boolean"?t:t==null?void 0:t.textureSource;(r=this._fill)!=null&&r.texture&&this._fill.texture.destroy(o),(i=this._originalFill)!=null&&i.texture&&this._originalFill.texture.destroy(o),(n=this._stroke)!=null&&n.texture&&this._stroke.texture.destroy(o),(a=this._originalStroke)!=null&&a.texture&&this._originalStroke.texture.destroy(o)}this._fill=null,this._stroke=null,this.dropShadow=null,this._originalStroke=null,this._originalFill=null}_createProxy(t,e){return new Proxy(t,{set:(r,i,n)=>(r[i]=n,e==null||e(i,n),this.update(),!0)})}_isFillStyle(t){return(t??null)!==null&&!(D.isColorLike(t)||t instanceof tt||t instanceof re)}};Je.defaultDropShadow={alpha:1,angle:Math.PI/6,blur:0,color:"black",distance:5};Je.defaultTextStyle={align:"left",breakWords:!1,dropShadow:null,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",leading:0,letterSpacing:0,lineHeight:0,padding:0,stroke:null,textBaseline:"alphabetic",trim:!1,whiteSpace:"pre",wordWrap:!1,wordWrapWidth:100};let at=Je;function pa(s){const t=s;if(typeof t.dropShadow=="boolean"&&t.dropShadow){const e=at.defaultDropShadow;s.dropShadow={alpha:t.dropShadowAlpha??e.alpha,angle:t.dropShadowAngle??e.angle,blur:t.dropShadowBlur??e.blur,color:t.dropShadowColor??e.color,distance:t.dropShadowDistance??e.distance}}if(t.strokeThickness!==void 0){G(L,"strokeThickness is now a part of stroke");const e=t.stroke;let r={};if(D.isColorLike(e))r.color=e;else if(e instanceof tt||e instanceof re)r.fill=e;else if(Object.hasOwnProperty.call(e,"color")||Object.hasOwnProperty.call(e,"fill"))r=e;else throw new Error("Invalid stroke value.");s.stroke={...r,width:t.strokeThickness}}if(Array.isArray(t.fillGradientStops)){G(L,"gradient fill is now a fill pattern: `new FillGradient(...)`");let e;s.fontSize==null?s.fontSize=at.defaultTextStyle.fontSize:typeof s.fontSize=="string"?e=parseInt(s.fontSize,10):e=s.fontSize;const r=new tt({start:{x:0,y:0},end:{x:0,y:(e||0)*1.7}}),i=t.fillGradientStops.map(n=>D.shared.setValue(n).toNumber());i.forEach((n,a)=>{const o=a/(i.length-1);r.addColorStop(o,n)}),s.fill={fill:r}}}class ga{constructor(t){this._canvasPool=Object.create(null),this.canvasOptions=t||{},this.enableFullScreen=!1}_createCanvasAndContext(t,e){const r=st.get().createCanvas();r.width=t,r.height=e;const i=r.getContext("2d");return{canvas:r,context:i}}getOptimalCanvasAndContext(t,e,r=1){t=Math.ceil(t*r-1e-6),e=Math.ceil(e*r-1e-6),t=qt(t),e=qt(e);const i=(t<<17)+(e<<1);this._canvasPool[i]||(this._canvasPool[i]=[]);let n=this._canvasPool[i].pop();return n||(n=this._createCanvasAndContext(t,e)),n}returnCanvasAndContext(t){const e=t.canvas,{width:r,height:i}=e,n=(r<<17)+(i<<1);t.context.clearRect(0,0,r,i),this._canvasPool[n].push(t)}clear(){this._canvasPool={}}}const pt=new ga,ma=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function Jt(s){const t=typeof s.fontSize=="number"?`${s.fontSize}px`:s.fontSize;let e=s.fontFamily;Array.isArray(s.fontFamily)||(e=s.fontFamily.split(","));for(let r=e.length-1;r>=0;r--){let i=e[r].trim();!/([\"\'])[^\'\"]+\1/.test(i)&&!ma.includes(i)&&(i=`"${i}"`),e[r]=i}return`${s.fontStyle} ${s.fontVariant} ${s.fontWeight} ${t} ${e.join(",")}`}const ve={willReadFrequently:!0},q=class C{static get experimentalLetterSpacingSupported(){let t=C._experimentalLetterSpacingSupported;if(t!==void 0){const e=st.get().getCanvasRenderingContext2D().prototype;t=C._experimentalLetterSpacingSupported="letterSpacing"in e||"textLetterSpacing"in e}return t}constructor(t,e,r,i,n,a,o,l,h){this.text=t,this.style=e,this.width=r,this.height=i,this.lines=n,this.lineWidths=a,this.lineHeight=o,this.maxLineWidth=l,this.fontProperties=h}static measureText(t=" ",e,r=C._canvas,i=e.wordWrap){var _;const n=`${t}:${e.styleKey}`;if(C._measurementCache[n])return C._measurementCache[n];const a=Jt(e),o=C.measureFont(a);o.fontSize===0&&(o.fontSize=e.fontSize,o.ascent=e.fontSize);const l=C.__context;l.font=a;const c=(i?C._wordWrap(t,e,r):t).split(/(?:\r\n|\r|\n)/),u=new Array(c.length);let f=0;for(let b=0;b<c.length;b++){const y=C._measureText(c[b],e.letterSpacing,l);u[b]=y,f=Math.max(f,y)}const d=((_=e._stroke)==null?void 0:_.width)||0;let g=f+d;e.dropShadow&&(g+=e.dropShadow.distance);const p=e.lineHeight||o.fontSize;let m=Math.max(p,o.fontSize+d)+(c.length-1)*(p+e.leading);return e.dropShadow&&(m+=e.dropShadow.distance),new C(t,e,g,m,c,u,p+e.leading,f,o)}static _measureText(t,e,r){let i=!1;C.experimentalLetterSpacingSupported&&(C.experimentalLetterSpacing?(r.letterSpacing=`${e}px`,r.textLetterSpacing=`${e}px`,i=!0):(r.letterSpacing="0px",r.textLetterSpacing="0px"));const n=r.measureText(t);let a=n.width;const o=-n.actualBoundingBoxLeft;let h=n.actualBoundingBoxRight-o;if(a>0)if(i)a-=e,h-=e;else{const c=(C.graphemeSegmenter(t).length-1)*e;a+=c,h+=c}return Math.max(a,h)}static _wordWrap(t,e,r=C._canvas){const i=r.getContext("2d",ve);let n=0,a="",o="";const l=Object.create(null),{letterSpacing:h,whiteSpace:c}=e,u=C._collapseSpaces(c),f=C._collapseNewlines(c);let d=!u;const g=e.wordWrapWidth+h,p=C._tokenize(t);for(let m=0;m<p.length;m++){let x=p[m];if(C._isNewline(x)){if(!f){o+=C._addLine(a),d=!u,a="",n=0;continue}x=" "}if(u){const b=C.isBreakingSpace(x),y=C.isBreakingSpace(a[a.length-1]);if(b&&y)continue}const _=C._getFromCache(x,h,l,i);if(_>g)if(a!==""&&(o+=C._addLine(a),a="",n=0),C.canBreakWords(x,e.breakWords)){const b=C.wordWrapSplit(x);for(let y=0;y<b.length;y++){let T=b[y],S=T,w=1;for(;b[y+w];){const R=b[y+w];if(!C.canBreakChars(S,R,x,y,e.breakWords))T+=R;else break;S=R,w++}y+=w-1;const k=C._getFromCache(T,h,l,i);k+n>g&&(o+=C._addLine(a),d=!1,a="",n=0),a+=T,n+=k}}else{a.length>0&&(o+=C._addLine(a),a="",n=0);const b=m===p.length-1;o+=C._addLine(x,!b),d=!1,a="",n=0}else _+n>g&&(d=!1,o+=C._addLine(a),a="",n=0),(a.length>0||!C.isBreakingSpace(x)||d)&&(a+=x,n+=_)}return o+=C._addLine(a,!1),o}static _addLine(t,e=!0){return t=C._trimRight(t),t=e?`${t}
`:t,t}static _getFromCache(t,e,r,i){let n=r[t];return typeof n!="number"&&(n=C._measureText(t,e,i)+e,r[t]=n),n}static _collapseSpaces(t){return t==="normal"||t==="pre-line"}static _collapseNewlines(t){return t==="normal"}static _trimRight(t){if(typeof t!="string")return"";for(let e=t.length-1;e>=0;e--){const r=t[e];if(!C.isBreakingSpace(r))break;t=t.slice(0,-1)}return t}static _isNewline(t){return typeof t!="string"?!1:C._newlines.includes(t.charCodeAt(0))}static isBreakingSpace(t,e){return typeof t!="string"?!1:C._breakingSpaces.includes(t.charCodeAt(0))}static _tokenize(t){const e=[];let r="";if(typeof t!="string")return e;for(let i=0;i<t.length;i++){const n=t[i],a=t[i+1];if(C.isBreakingSpace(n,a)||C._isNewline(n)){r!==""&&(e.push(r),r=""),e.push(n);continue}r+=n}return r!==""&&e.push(r),e}static canBreakWords(t,e){return e}static canBreakChars(t,e,r,i,n){return!0}static wordWrapSplit(t){return C.graphemeSegmenter(t)}static measureFont(t){if(C._fonts[t])return C._fonts[t];const e=C._context;e.font=t;const r=e.measureText(C.METRICS_STRING+C.BASELINE_SYMBOL),i={ascent:r.actualBoundingBoxAscent,descent:r.actualBoundingBoxDescent,fontSize:r.actualBoundingBoxAscent+r.actualBoundingBoxDescent};return C._fonts[t]=i,i}static clearMetrics(t=""){t?delete C._fonts[t]:C._fonts={}}static get _canvas(){if(!C.__canvas){let t;try{const e=new OffscreenCanvas(0,0),r=e.getContext("2d",ve);if(r!=null&&r.measureText)return C.__canvas=e,e;t=st.get().createCanvas()}catch{t=st.get().createCanvas()}t.width=t.height=10,C.__canvas=t}return C.__canvas}static get _context(){return C.__context||(C.__context=C._canvas.getContext("2d",ve)),C.__context}};q.METRICS_STRING="|ÉqÅ";q.BASELINE_SYMBOL="M";q.BASELINE_MULTIPLIER=1.4;q.HEIGHT_MULTIPLIER=2;q.graphemeSegmenter=(()=>{if(typeof(Intl==null?void 0:Intl.Segmenter)=="function"){const s=new Intl.Segmenter;return t=>[...s.segment(t)].map(e=>e.segment)}return s=>[...s]})();q.experimentalLetterSpacing=!1;q._fonts={};q._newlines=[10,13];q._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];q._measurementCache={};let rt=q;const Wr=1e5;function te(s,t,e,r=0){if(s.texture===V.WHITE&&!s.fill)return D.shared.setValue(s.color).setAlpha(s.alpha??1).toHexa();if(s.fill){if(s.fill instanceof re){const i=s.fill,n=t.createPattern(i.texture.source.resource,"repeat"),a=i.transform.copyTo(H.shared);return a.scale(i.texture.frame.width,i.texture.frame.height),n.setTransform(a),n}else if(s.fill instanceof tt){const i=s.fill,n=i.type==="linear",a=i.textureSpace==="local";let o=1,l=1;a&&e&&(o=e.width+r,l=e.height+r);let h,c=!1;if(n){const{start:u,end:f}=i;h=t.createLinearGradient(u.x*o,u.y*l,f.x*o,f.y*l),c=Math.abs(f.x-u.x)<Math.abs((f.y-u.y)*.1)}else{const{center:u,innerRadius:f,outerCenter:d,outerRadius:g}=i;h=t.createRadialGradient(u.x*o,u.y*l,f*o,d.x*o,d.y*l,g*o)}if(c&&a&&e){const u=e.lineHeight/l;for(let f=0;f<e.lines.length;f++){const d=(f*e.lineHeight+r/2)/l;i.colorStops.forEach(g=>{const p=d+g.offset*u;h.addColorStop(Math.floor(p*Wr)/Wr,D.shared.setValue(g.color).toHex())})}}else i.colorStops.forEach(u=>{h.addColorStop(u.offset,D.shared.setValue(u.color).toHex())});return h}}else{const i=t.createPattern(s.texture.source.resource,"repeat"),n=s.matrix.copyTo(H.shared);return n.scale(s.texture.frame.width,s.texture.frame.height),i.setTransform(n),i}return j("FillStyle not recognised",s),"red"}function Bi(s){if(s==="")return[];typeof s=="string"&&(s=[s]);const t=[];for(let e=0,r=s.length;e<r;e++){const i=s[e];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const n=i[0].charCodeAt(0),a=i[1].charCodeAt(0);if(a<n)throw new Error("[BitmapFont]: Invalid character range.");for(let o=n,l=a;o<=l;o++)t.push(String.fromCharCode(o))}else t.push(...Array.from(i))}if(t.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return t}const Ri=class Ai extends Fs{constructor(t){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const e={...Ai.defaultOptions,...t};this._textureSize=e.textureSize,this._mipmap=e.mipmap;const r=e.style.clone();e.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=V.WHITE,r._fill.fill=null),this.applyFillAsTint=e.overrideFill;const i=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const n=Jt(r);e.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/i):r.fontSize=this.baseRenderedFontSize=i,this._style=r,this._skipKerning=e.skipKerning??!1,this.resolution=e.resolution??1,this._padding=e.padding??4,this.fontMetrics=rt.measureFont(n),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(t){var m,x;const e=Bi(t).filter(_=>!this._currentChars.includes(_)).filter((_,b,y)=>y.indexOf(_)===b);if(!e.length)return;this._currentChars=[...this._currentChars,...e];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:i,context:n}=r.canvasAndContext,a=r.texture.source;const o=this._style;let l=this._currentX,h=this._currentY;const c=this.baseRenderedFontSize/this.baseMeasurementFontSize,u=this._padding*c;let f=0,d=!1;const g=i.width/this.resolution,p=i.height/this.resolution;for(let _=0;_<e.length;_++){const b=e[_],y=rt.measureText(b,o,i,!1);y.lineHeight=y.height;const T=y.width*c,S=Math.ceil((o.fontStyle==="italic"?2:1)*T),w=y.height*c,k=S+u*2,R=w+u*2;if(d=!1,b!==`
`&&b!=="\r"&&b!=="	"&&b!==" "&&(d=!0,f=Math.ceil(Math.max(R,f))),l+k>g&&(h+=f,f=R,l=0,h+f>p)){a.update();const v=this._nextPage();i=v.canvasAndContext.canvas,n=v.canvasAndContext.context,a=v.texture.source,h=0}const P=T/c-(((m=o.dropShadow)==null?void 0:m.distance)??0)-(((x=o._stroke)==null?void 0:x.width)??0);if(this.chars[b]={id:b.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:P,kerning:{}},d){this._drawGlyph(n,y,l+u,h+u,c,o);const v=a.width*c,A=a.height*c,z=new X(l/v*a.width,h/A*a.height,k/v*a.width,R/A*a.height);this.chars[b].texture=new V({source:a,frame:z}),l+=Math.ceil(k)}}a.update(),this._currentX=l,this._currentY=h,this._skipKerning&&this._applyKerning(e,n)}get pageTextures(){return G(L,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(t,e){const r=this._measureCache;for(let i=0;i<t.length;i++){const n=t[i];for(let a=0;a<this._currentChars.length;a++){const o=this._currentChars[a];let l=r[n];l||(l=r[n]=e.measureText(n).width);let h=r[o];h||(h=r[o]=e.measureText(o).width);let c=e.measureText(n+o).width,u=c-(l+h);u&&(this.chars[n].kerning[o]=u),c=e.measureText(n+o).width,u=c-(l+h),u&&(this.chars[o].kerning[n]=u)}}}_nextPage(){this._currentPageIndex++;const t=this.resolution,e=pt.getOptimalCanvasAndContext(this._textureSize,this._textureSize,t);this._setupContext(e.context,this._style,t);const r=t*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new V({source:new Be({resource:e.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})}),n={canvasAndContext:e,texture:i};return this.pages[this._currentPageIndex]=n,n}_setupContext(t,e,r){e.fontSize=this.baseRenderedFontSize,t.scale(r,r),t.font=Jt(e),e.fontSize=this.baseMeasurementFontSize,t.textBaseline=e.textBaseline;const i=e._stroke,n=(i==null?void 0:i.width)??0;if(i&&(t.lineWidth=n,t.lineJoin=i.join,t.miterLimit=i.miterLimit,t.strokeStyle=te(i,t)),e._fill&&(t.fillStyle=te(e._fill,t)),e.dropShadow){const a=e.dropShadow,o=D.shared.setValue(a.color).toArray(),l=a.blur*r,h=a.distance*r;t.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${a.alpha})`,t.shadowBlur=l,t.shadowOffsetX=Math.cos(a.angle)*h,t.shadowOffsetY=Math.sin(a.angle)*h}else t.shadowColor="black",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0}_drawGlyph(t,e,r,i,n,a){const o=e.text,l=e.fontProperties,h=a._stroke,c=((h==null?void 0:h.width)??0)*n,u=r+c/2,f=i-c/2,d=l.descent*n,g=e.lineHeight*n;a.stroke&&c&&t.strokeText(o,u,f+g-d),a._fill&&t.fillText(o,u,f+g-d)}destroy(){super.destroy();for(let t=0;t<this.pages.length;t++){const{canvasAndContext:e,texture:r}=this.pages[t];pt.returnCanvasAndContext(e),r.destroy(!0)}this.pages=null}};Ri.defaultOptions={textureSize:512,style:new at,mipmap:!0};let Lr=Ri;function Fi(s,t,e,r){const i={width:0,height:0,offsetY:0,scale:t.fontSize/e.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};i.offsetY=e.baseLineOffset;let n=i.lines[0],a=null,o=!0;const l={width:0,start:0,index:0,positions:[],chars:[]},h=g=>{const p=n.width;for(let m=0;m<l.index;m++){const x=g.positions[m];n.chars.push(g.chars[m]),n.charPositions.push(x+p)}n.width+=g.width,o=!1,l.width=0,l.index=0,l.chars.length=0},c=()=>{let g=n.chars.length-1;if(r){let p=n.chars[g];for(;p===" ";)n.width-=e.chars[p].xAdvance,p=n.chars[--g]}i.width=Math.max(i.width,n.width),n={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},o=!0,i.lines.push(n),i.height+=e.lineHeight},u=e.baseMeasurementFontSize/t.fontSize,f=t.letterSpacing*u,d=t.wordWrapWidth*u;for(let g=0;g<s.length+1;g++){let p;const m=g===s.length;m||(p=s[g]);const x=e.chars[p]||e.chars[" "];if(/(?:\s)/.test(p)||p==="\r"||p===`
`||m){if(!o&&t.wordWrap&&n.width+l.width-f>d?(c(),h(l),m||n.charPositions.push(0)):(l.start=n.width,h(l),m||n.charPositions.push(0)),p==="\r"||p===`
`)n.width!==0&&c();else if(!m){const T=x.xAdvance+(x.kerning[a]||0)+f;n.width+=T,n.spaceWidth=T,n.spacesIndex.push(n.charPositions.length),n.chars.push(p)}}else{const y=x.kerning[a]||0,T=x.xAdvance+y+f;l.positions[l.index++]=l.width+y,l.chars.push(p),l.width+=T}a=p}return c(),t.align==="center"?xa(i):t.align==="right"?_a(i):t.align==="justify"&&ya(i),i}function xa(s){for(let t=0;t<s.lines.length;t++){const e=s.lines[t],r=s.width/2-e.width/2;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=r}}function _a(s){for(let t=0;t<s.lines.length;t++){const e=s.lines[t],r=s.width-e.width;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=r}}function ya(s){const t=s.width;for(let e=0;e<s.lines.length;e++){const r=s.lines[e];let i=0,n=r.spacesIndex[i++],a=0;const o=r.spacesIndex.length,h=(t-r.width)/o;for(let c=0;c<r.charPositions.length;c++)c===n&&(n=r.spacesIndex[i++],a+=h),r.charPositions[c]+=a}}let $t=0;class ba{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(t,e){var a;let r=`${e.fontFamily}-bitmap`,i=!0;if(e._fill.fill&&!e._stroke)r+=e._fill.fill.styleKey,i=!1;else if(e._stroke||e.dropShadow){let o=e.styleKey;o=o.substring(0,o.lastIndexOf("-")),r=`${o}-bitmap`,i=!1}if(!Q.has(r)){const o=new Lr({style:e,overrideFill:i,overrideSize:!0,...this.defaultOptions});$t++,$t>50&&j("BitmapText",`You have dynamically created ${$t} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),o.once("destroy",()=>{$t--,Q.remove(r)}),Q.set(r,o)}const n=Q.get(r);return(a=n.ensureCharacters)==null||a.call(n,t),n}getLayout(t,e,r=!0){const i=this.getFont(t,e);return Fi([...t],e,i,r)}measureText(t,e,r=!0){return this.getLayout(t,e,r)}install(...t){var h,c,u,f;let e=t[0];typeof e=="string"&&(e={name:e,style:t[1],chars:(h=t[2])==null?void 0:h.chars,resolution:(c=t[2])==null?void 0:c.resolution,padding:(u=t[2])==null?void 0:u.padding,skipKerning:(f=t[2])==null?void 0:f.skipKerning},G(L,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=e==null?void 0:e.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");e={...this.defaultOptions,...e};const i=e.style,n=i instanceof at?i:new at(i),a=n._fill.fill!==null&&n._fill.fill!==void 0,o=new Lr({style:n,overrideFill:a,skipKerning:e.skipKerning,padding:e.padding,resolution:e.resolution,overrideSize:!1}),l=Bi(e.chars);return o.ensureCharacters(l.join("")),Q.set(`${r}-bitmap`,o),o.once("destroy",()=>Q.remove(`${r}-bitmap`)),o}uninstall(t){const e=`${t}-bitmap`,r=Q.get(e);r&&r.destroy()}}const Sa=new ba;class zi{constructor(t){this._renderer=t}push(t,e,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:e,filterEffect:t})}pop(t,e,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(t){t.action==="pushFilter"?this._renderer.filter.push(t):t.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}zi.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"filter"};function wa(s,t){t.clear();const e=t.matrix;for(let r=0;r<s.length;r++){const i=s[r];i.globalDisplayStatus<7||(t.matrix=i.worldTransform,t.addBounds(i.bounds))}return t.matrix=e,t}const Ta=new ie({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class Ii{constructor(t){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new nt({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new bt({}),this.renderer=t}get activeBackTexture(){var t;return(t=this._activeFilterData)==null?void 0:t.backTexture}push(t){var d;const e=this.renderer,r=t.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const i=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){i.skip=!0;return}const n=i.bounds;if(t.renderables?wa(t.renderables,n):t.filterEffect.filterArea?(n.clear(),n.addRect(t.filterEffect.filterArea),n.applyMatrix(t.container.worldTransform)):t.container.getFastGlobalBounds(!0,n),t.container){const p=(t.container.renderGroup||t.container.parentRenderGroup).cacheToLocalTransform;p&&n.applyMatrix(p)}const a=e.renderTarget.renderTarget.colorTexture.source;let o=1/0,l=0,h=!0,c=!1,u=!1,f=!0;for(let g=0;g<r.length;g++){const p=r[g];if(o=Math.min(o,p.resolution==="inherit"?a._resolution:p.resolution),l+=p.padding,p.antialias==="off"?h=!1:p.antialias==="inherit"&&h&&(h=a.antialias),p.clipToViewport||(f=!1),!!!(p.compatibleRenderers&e.type)){u=!1;break}if(p.blendRequired&&!(((d=e.backBuffer)==null?void 0:d.useBackBuffer)??!0)){j("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),u=!1;break}u=p.enabled||u,c||(c=p.blendRequired)}if(!u){i.skip=!0;return}if(f){const g=e.renderTarget.rootViewPort,p=e.renderTarget.renderTarget.resolution;n.fitBounds(0,g.width/p,0,g.height/p)}if(n.scale(o).ceil().scale(1/o).pad(l|0),!n.isPositive){i.skip=!0;return}i.skip=!1,i.bounds=n,i.blendRequired=c,i.container=t.container,i.filterEffect=t.filterEffect,i.previousRenderSurface=e.renderTarget.renderSurface,i.inputTexture=Z.getOptimalTexture(n.width,n.height,o,h),e.renderTarget.bind(i.inputTexture,!0),e.globalUniforms.push({offset:n})}pop(){const t=this.renderer;this._filterStackIndex--;const e=this._filterStack[this._filterStackIndex];if(e.skip)return;this._activeFilterData=e;const r=e.inputTexture,i=e.bounds;let n=V.EMPTY;if(t.renderTarget.finishRenderPass(),e.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,l=t.renderTarget.getRenderTarget(e.previousRenderSurface);n=this.getBackTexture(l,i,o)}e.backTexture=n;const a=e.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(n.source,3),t.globalUniforms.pop(),a.length===1)a[0].apply(this,r,e.previousRenderSurface,!1),Z.returnTexture(r);else{let o=e.inputTexture,l=Z.getOptimalTexture(i.width,i.height,o.source._resolution,!1),h=0;for(h=0;h<a.length-1;++h){a[h].apply(this,o,l,!0);const u=o;o=l,l=u}a[h].apply(this,o,e.previousRenderSurface,!1),Z.returnTexture(o),Z.returnTexture(l)}e.blendRequired&&Z.returnTexture(n)}getBackTexture(t,e,r){const i=t.colorTexture.source._resolution,n=Z.getOptimalTexture(e.width,e.height,i,!1);let a=e.minX,o=e.minY;r&&(a-=r.minX,o-=r.minY),a=Math.floor(a*i),o=Math.floor(o*i);const l=Math.ceil(e.width*i),h=Math.ceil(e.height*i);return this.renderer.renderTarget.copyToTexture(t,n,{x:a,y:o},{width:l,height:h},{x:0,y:0}),n}applyFilter(t,e,r,i){const n=this.renderer,a=this._filterStack[this._filterStackIndex],o=a.bounds,l=gt.shared,c=a.previousRenderSurface===r;let u=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,f=this._filterStackIndex-1;for(;f>0&&this._filterStack[f].skip;)--f;f>0&&(u=this._filterStack[f].inputTexture.source._resolution);const d=this._filterGlobalUniforms,g=d.uniforms,p=g.uOutputFrame,m=g.uInputSize,x=g.uInputPixel,_=g.uInputClamp,b=g.uGlobalFrame,y=g.uOutputTexture;if(c){let w=this._filterStackIndex;for(;w>0;){w--;const k=this._filterStack[this._filterStackIndex-1];if(!k.skip){l.x=k.bounds.minX,l.y=k.bounds.minY;break}}p[0]=o.minX-l.x,p[1]=o.minY-l.y}else p[0]=0,p[1]=0;p[2]=e.frame.width,p[3]=e.frame.height,m[0]=e.source.width,m[1]=e.source.height,m[2]=1/m[0],m[3]=1/m[1],x[0]=e.source.pixelWidth,x[1]=e.source.pixelHeight,x[2]=1/x[0],x[3]=1/x[1],_[0]=.5*x[2],_[1]=.5*x[3],_[2]=e.frame.width*m[2]-.5*x[2],_[3]=e.frame.height*m[3]-.5*x[3];const T=this.renderer.renderTarget.rootRenderTarget.colorTexture;b[0]=l.x*u,b[1]=l.y*u,b[2]=T.source.width*u,b[3]=T.source.height*u;const S=this.renderer.renderTarget.getRenderTarget(r);if(n.renderTarget.bind(r,!!i),r instanceof V?(y[0]=r.frame.width,y[1]=r.frame.height):(y[0]=S.width,y[1]=S.height),y[2]=S.isRoot?-1:1,d.update(),n.renderPipes.uniformBatch){const w=n.renderPipes.uniformBatch.getUboResource(d);this._globalFilterBindGroup.setResource(w,0)}else this._globalFilterBindGroup.setResource(d,0);this._globalFilterBindGroup.setResource(e.source,1),this._globalFilterBindGroup.setResource(e.source.style,2),t.groups[0]=this._globalFilterBindGroup,n.encoder.draw({geometry:Ta,shader:t,state:t._state,topology:"triangle-list"}),n.type===St.WEBGL&&n.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new Ut,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(t,e){const r=this._activeFilterData,i=t.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),n=e.worldTransform.copyTo(H.shared),a=e.renderGroup||e.parentRenderGroup;return a&&a.cacheToLocalTransform&&n.prepend(a.cacheToLocalTransform),n.invert(),i.prepend(n),i.scale(1/e.texture.frame.width,1/e.texture.frame.height),i.translate(e.anchor.x,e.anchor.y),i}}Ii.extension={type:[B.WebGLSystem,B.WebGPUSystem],name:"filter"};class ee extends us{constructor(t){t instanceof Y&&(t={context:t});const{context:e,roundPixels:r,...i}=t||{};super({label:"Graphics",...i}),this.renderPipeId="graphics",e?this._context=e:this._context=this._ownedContext=new Y,this._context.on("update",this.onViewUpdate,this),this.allowChildren=!1,this.roundPixels=r??!1}set context(t){t!==this._context&&(this._context.off("update",this.onViewUpdate,this),this._context=t,this._context.on("update",this.onViewUpdate,this),this.onViewUpdate())}get context(){return this._context}get bounds(){return this._context.bounds}updateBounds(){}containsPoint(t){return this._context.containsPoint(t)}destroy(t){this._ownedContext&&!t?this._ownedContext.destroy(t):(t===!0||(t==null?void 0:t.context)===!0)&&this._context.destroy(t),this._ownedContext=null,this._context=null,super.destroy(t)}_callContextMethod(t,e){return this.context[t](...e),this}setFillStyle(...t){return this._callContextMethod("setFillStyle",t)}setStrokeStyle(...t){return this._callContextMethod("setStrokeStyle",t)}fill(...t){return this._callContextMethod("fill",t)}stroke(...t){return this._callContextMethod("stroke",t)}texture(...t){return this._callContextMethod("texture",t)}beginPath(){return this._callContextMethod("beginPath",[])}cut(){return this._callContextMethod("cut",[])}arc(...t){return this._callContextMethod("arc",t)}arcTo(...t){return this._callContextMethod("arcTo",t)}arcToSvg(...t){return this._callContextMethod("arcToSvg",t)}bezierCurveTo(...t){return this._callContextMethod("bezierCurveTo",t)}closePath(){return this._callContextMethod("closePath",[])}ellipse(...t){return this._callContextMethod("ellipse",t)}circle(...t){return this._callContextMethod("circle",t)}path(...t){return this._callContextMethod("path",t)}lineTo(...t){return this._callContextMethod("lineTo",t)}moveTo(...t){return this._callContextMethod("moveTo",t)}quadraticCurveTo(...t){return this._callContextMethod("quadraticCurveTo",t)}rect(...t){return this._callContextMethod("rect",t)}roundRect(...t){return this._callContextMethod("roundRect",t)}poly(...t){return this._callContextMethod("poly",t)}regularPoly(...t){return this._callContextMethod("regularPoly",t)}roundPoly(...t){return this._callContextMethod("roundPoly",t)}roundShape(...t){return this._callContextMethod("roundShape",t)}filletRect(...t){return this._callContextMethod("filletRect",t)}chamferRect(...t){return this._callContextMethod("chamferRect",t)}star(...t){return this._callContextMethod("star",t)}svg(...t){return this._callContextMethod("svg",t)}restore(...t){return this._callContextMethod("restore",t)}save(){return this._callContextMethod("save",[])}getTransform(){return this.context.getTransform()}resetTransform(){return this._callContextMethod("resetTransform",[])}rotateTransform(...t){return this._callContextMethod("rotate",t)}scaleTransform(...t){return this._callContextMethod("scale",t)}setTransform(...t){return this._callContextMethod("setTransform",t)}transform(...t){return this._callContextMethod("transform",t)}translateTransform(...t){return this._callContextMethod("translate",t)}clear(){return this._callContextMethod("clear",[])}get fillStyle(){return this._context.fillStyle}set fillStyle(t){this._context.fillStyle=t}get strokeStyle(){return this._context.strokeStyle}set strokeStyle(t){this._context.strokeStyle=t}clone(t=!1){return t?new ee(this._context.clone()):(this._ownedContext=null,new ee(this._context))}lineStyle(t,e,r){G(L,"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.");const i={};return t&&(i.width=t),e&&(i.color=e),r&&(i.alpha=r),this.context.strokeStyle=i,this}beginFill(t,e){G(L,"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.");const r={};return t!==void 0&&(r.color=t),e!==void 0&&(r.alpha=e),this.context.fillStyle=r,this}endFill(){G(L,"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style."),this.context.fill();const t=this.context.strokeStyle;return(t.width!==Y.defaultStrokeStyle.width||t.color!==Y.defaultStrokeStyle.color||t.alpha!==Y.defaultStrokeStyle.alpha)&&this.context.stroke(),this}drawCircle(...t){return G(L,"Graphics#drawCircle has been renamed to Graphics#circle"),this._callContextMethod("circle",t)}drawEllipse(...t){return G(L,"Graphics#drawEllipse has been renamed to Graphics#ellipse"),this._callContextMethod("ellipse",t)}drawPolygon(...t){return G(L,"Graphics#drawPolygon has been renamed to Graphics#poly"),this._callContextMethod("poly",t)}drawRect(...t){return G(L,"Graphics#drawRect has been renamed to Graphics#rect"),this._callContextMethod("rect",t)}drawRoundedRect(...t){return G(L,"Graphics#drawRoundedRect has been renamed to Graphics#roundRect"),this._callContextMethod("roundRect",t)}drawStar(...t){return G(L,"Graphics#drawStar has been renamed to Graphics#star"),this._callContextMethod("star",t)}}const Gi=class Ui extends ie{constructor(...t){let e=t[0]??{};e instanceof Float32Array&&(G(L,"use new MeshGeometry({ positions, uvs, indices }) instead"),e={positions:e,uvs:t[1],indices:t[2]}),e={...Ui.defaultOptions,...e};const r=e.positions||new Float32Array([0,0,1,0,1,1,0,1]);let i=e.uvs;i||(e.positions?i=new Float32Array(r.length):i=new Float32Array([0,0,1,0,1,1,0,1]));const n=e.indices||new Uint32Array([0,1,2,0,2,3]),a=e.shrinkBuffersToFit,o=new J({data:r,label:"attribute-mesh-positions",shrinkToFit:a,usage:U.VERTEX|U.COPY_DST}),l=new J({data:i,label:"attribute-mesh-uvs",shrinkToFit:a,usage:U.VERTEX|U.COPY_DST}),h=new J({data:n,label:"index-mesh-buffer",shrinkToFit:a,usage:U.INDEX|U.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:l,format:"float32x2",stride:2*4,offset:0}},indexBuffer:h,topology:e.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(t){this.attributes.aPosition.buffer.data=t}get uvs(){return this.attributes.aUV.buffer.data}set uvs(t){this.attributes.aUV.buffer.data=t}get indices(){return this.indexBuffer.data}set indices(t){this.indexBuffer.data=t}};Gi.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let tr=Gi;function va(s){const t=s._stroke,e=s._fill,i=[`div { ${[`color: ${D.shared.setValue(e.color).toHex()}`,`font-size: ${s.fontSize}px`,`font-family: ${s.fontFamily}`,`font-weight: ${s.fontWeight}`,`font-style: ${s.fontStyle}`,`font-variant: ${s.fontVariant}`,`letter-spacing: ${s.letterSpacing}px`,`text-align: ${s.align}`,`padding: ${s.padding}px`,`white-space: ${s.whiteSpace==="pre"&&s.wordWrap?"pre-wrap":s.whiteSpace}`,...s.lineHeight?[`line-height: ${s.lineHeight}px`]:[],...s.wordWrap?[`word-wrap: ${s.breakWords?"break-all":"break-word"}`,`max-width: ${s.wordWrapWidth}px`]:[],...t?[Di(t)]:[],...s.dropShadow?[Ei(s.dropShadow)]:[],...s.cssOverrides].join(";")} }`];return Pa(s.tagStyles,i),i.join(" ")}function Ei(s){const t=D.shared.setValue(s.color).setAlpha(s.alpha).toHexa(),e=Math.round(Math.cos(s.angle)*s.distance),r=Math.round(Math.sin(s.angle)*s.distance),i=`${e}px ${r}px`;return s.blur>0?`text-shadow: ${i} ${s.blur}px ${t}`:`text-shadow: ${i} ${t}`}function Di(s){return[`-webkit-text-stroke-width: ${s.width}px`,`-webkit-text-stroke-color: ${D.shared.setValue(s.color).toHex()}`,`text-stroke-width: ${s.width}px`,`text-stroke-color: ${D.shared.setValue(s.color).toHex()}`,"paint-order: stroke"].join(";")}const Hr={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},Vr={fill:s=>`color: ${D.shared.setValue(s).toHex()}`,breakWords:s=>`word-wrap: ${s?"break-all":"break-word"}`,stroke:Di,dropShadow:Ei};function Pa(s,t){for(const e in s){const r=s[e],i=[];for(const n in r)Vr[n]?i.push(Vr[n](r[n])):Hr[n]&&i.push(Hr[n].replace("{{VALUE}}",r[n]));t.push(`${e} { ${i.join(";")} }`)}}class er extends at{constructor(t={}){super(t),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=t.cssOverrides),this.tagStyles=t.tagStyles??{}}set cssOverrides(t){this._cssOverrides=t instanceof Array?t:[t],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=Mi(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new er({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=va(this)),this._cssStyle}addOverride(...t){const e=t.filter(r=>!this.cssOverrides.includes(r));e.length>0&&(this.cssOverrides.push(...e),this.update())}removeOverride(...t){const e=t.filter(r=>this.cssOverrides.includes(r));e.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!e.includes(r)),this.update())}set fill(t){typeof t!="string"&&typeof t!="number"&&j("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=t}set stroke(t){t&&typeof t!="string"&&typeof t!="number"&&j("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=t}}const Or="http://www.w3.org/2000/svg",$r="http://www.w3.org/1999/xhtml";class Wi{constructor(){this.svgRoot=document.createElementNS(Or,"svg"),this.foreignObject=document.createElementNS(Or,"foreignObject"),this.domElement=document.createElementNS($r,"div"),this.styleElement=document.createElementNS($r,"style"),this.image=new Image;const{foreignObject:t,svgRoot:e,styleElement:r,domElement:i}=this;t.setAttribute("width","10000"),t.setAttribute("height","10000"),t.style.overflow="hidden",e.appendChild(t),t.appendChild(r),t.appendChild(i)}}let Nr;function Ca(s,t,e,r){r||(r=Nr||(Nr=new Wi));const{domElement:i,styleElement:n,svgRoot:a}=r;i.innerHTML=`<style>${t.cssStyle};</style><div style='padding:0'>${s}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),e&&(n.textContent=e),document.body.appendChild(a);const o=i.getBoundingClientRect();a.remove();const l=t.padding*2;return{width:o.width-l,height:o.height-l}}const Xt={name:"local-uniform-bit",vertex:{header:`

            struct LocalUniforms {
                uTransformMatrix:mat3x3<f32>,
                uColor:vec4<f32>,
                uRound:f32,
            }

            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `}};({...Xt,vertex:{...Xt.vertex,header:Xt.vertex.header.replace("group(1)","group(2)")}});const Ma={name:"local-uniform-bit",vertex:{header:`

            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix = uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `}};class Li{constructor(){this.batcherName="default",this.topology="triangle-list",this.attributeSize=4,this.indexSize=6,this.packAsQuad=!0,this.roundPixels=0,this._attributeStart=0,this._batcher=null,this._batch=null}get blendMode(){return this.renderable.groupBlendMode}get color(){return this.renderable.groupColorAlpha}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.bounds=null}}function ne(s,t,e){const r=(s>>24&255)/255;t[e++]=(s&255)/255*r,t[e++]=(s>>8&255)/255*r,t[e++]=(s>>16&255)/255*r,t[e++]=r}class Hi{constructor(t,e){this.state=Qt.for2d(),this._graphicsBatchesHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=t,this._adaptor=e,this._adaptor.init(),this.renderer.renderableGC.addManagedHash(this,"_graphicsBatchesHash")}validateRenderable(t){const e=t.context,r=!!this._graphicsBatchesHash[t.uid],i=this.renderer.graphicsContext.updateGpuContext(e);return!!(i.isBatchable||r!==i.isBatchable)}addRenderable(t,e){const r=this.renderer.graphicsContext.updateGpuContext(t.context);t.didViewUpdate&&this._rebuild(t),r.isBatchable?this._addToBatcher(t,e):(this.renderer.renderPipes.batch.break(e),e.add(t))}updateRenderable(t){const e=this._graphicsBatchesHash[t.uid];if(e)for(let r=0;r<e.length;r++){const i=e[r];i._batcher.updateElement(i)}}destroyRenderable(t){this._graphicsBatchesHash[t.uid]&&this._removeBatchForRenderable(t.uid),t.off("destroyed",this._destroyRenderableBound)}execute(t){if(!t.isRenderable)return;const e=this.renderer,r=t.context;if(!e.graphicsContext.getGpuContext(r).batches.length)return;const n=r.customShader||this._adaptor.shader;this.state.blendMode=t.groupBlendMode;const a=n.resources.localUniforms.uniforms;a.uTransformMatrix=t.groupTransform,a.uRound=e._roundPixels|t._roundPixels,ne(t.groupColorAlpha,a.uColor,0),this._adaptor.execute(this,t)}_rebuild(t){const e=!!this._graphicsBatchesHash[t.uid],r=this.renderer.graphicsContext.updateGpuContext(t.context);e&&this._removeBatchForRenderable(t.uid),r.isBatchable&&this._initBatchesForRenderable(t),t.batched=r.isBatchable}_addToBatcher(t,e){const r=this.renderer.renderPipes.batch,i=this._getBatchesForRenderable(t);for(let n=0;n<i.length;n++){const a=i[n];r.addToBatch(a,e)}}_getBatchesForRenderable(t){return this._graphicsBatchesHash[t.uid]||this._initBatchesForRenderable(t)}_initBatchesForRenderable(t){const e=t.context,r=this.renderer.graphicsContext.getGpuContext(e),i=this.renderer._roundPixels|t._roundPixels,n=r.batches.map(a=>{const o=E.get(qe);return a.copyTo(o),o.renderable=t,o.roundPixels=i,o});return this._graphicsBatchesHash[t.uid]===void 0&&t.on("destroyed",this._destroyRenderableBound),this._graphicsBatchesHash[t.uid]=n,n}_removeBatchForRenderable(t){this._graphicsBatchesHash[t].forEach(e=>{E.return(e)}),this._graphicsBatchesHash[t]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const t in this._graphicsBatchesHash)this._removeBatchForRenderable(t);this._graphicsBatchesHash=null}}Hi.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"graphics"};const Vi=class Oi extends tr{constructor(...t){super({});let e=t[0]??{};typeof e=="number"&&(G(L,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),e={width:e,height:t[1],verticesX:t[2],verticesY:t[3]}),this.build(e)}build(t){t={...Oi.defaultOptions,...t},this.verticesX=this.verticesX??t.verticesX,this.verticesY=this.verticesY??t.verticesY,this.width=this.width??t.width,this.height=this.height??t.height;const e=this.verticesX*this.verticesY,r=[],i=[],n=[],a=this.verticesX-1,o=this.verticesY-1,l=this.width/a,h=this.height/o;for(let u=0;u<e;u++){const f=u%this.verticesX,d=u/this.verticesX|0;r.push(f*l,d*h),i.push(f/a,d/o)}const c=a*o;for(let u=0;u<c;u++){const f=u%a,d=u/a|0,g=d*this.verticesX+f,p=d*this.verticesX+f+1,m=(d+1)*this.verticesX+f,x=(d+1)*this.verticesX+f+1;n.push(g,p,m,p,x,m)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(n),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Vi.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let ka=Vi;class rr{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(t){this._topology=t}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(t){this.texture!==t&&(this.texture=t,this._textureMatrixUpdateId=-1)}get uvs(){const e=this.geometry.getBuffer("aUV"),r=e.data;let i=r;const n=this.texture.textureMatrix;return n.isSimple||(i=this._transformedUvs,(this._textureMatrixUpdateId!==n._updateID||this._uvUpdateId!==e._updateID)&&((!i||i.length<r.length)&&(i=this._transformedUvs=new Float32Array(r.length)),this._textureMatrixUpdateId=n._updateID,this._uvUpdateId=e._updateID,n.multiplyUvs(r,i))),i}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class $i{constructor(t,e){this.localUniforms=new nt({uTransformMatrix:{value:new H,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new bt({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=t,this._adaptor=e,this._adaptor.init(),t.renderableGC.addManagedHash(this,"_gpuBatchableMeshHash"),t.renderableGC.addManagedHash(this,"_meshDataHash")}validateRenderable(t){const e=this._getMeshData(t),r=e.batched,i=t.batched;if(e.batched=i,r!==i)return!0;if(i){const n=t._geometry;if(n.indices.length!==e.indexSize||n.positions.length!==e.vertexSize)return e.indexSize=n.indices.length,e.vertexSize=n.positions.length,!0;const a=this._getBatchableMesh(t);return a.texture.uid!==t._texture.uid&&(a._textureMatrixUpdateId=-1),!a._batcher.checkAndUpdateTexture(a,t._texture)}return!1}addRenderable(t,e){const r=this.renderer.renderPipes.batch,{batched:i}=this._getMeshData(t);if(i){const n=this._getBatchableMesh(t);n.setTexture(t._texture),n.geometry=t._geometry,r.addToBatch(n,e)}else r.break(e),e.add(t)}updateRenderable(t){if(t.batched){const e=this._gpuBatchableMeshHash[t.uid];e.setTexture(t._texture),e.geometry=t._geometry,e._batcher.updateElement(e)}}destroyRenderable(t){this._meshDataHash[t.uid]=null;const e=this._gpuBatchableMeshHash[t.uid];e&&(E.return(e),this._gpuBatchableMeshHash[t.uid]=null),t.off("destroyed",this._destroyRenderableBound)}execute(t){if(!t.isRenderable)return;t.state.blendMode=It(t.groupBlendMode,t.texture._source);const e=this.localUniforms;e.uniforms.uTransformMatrix=t.groupTransform,e.uniforms.uRound=this.renderer._roundPixels|t._roundPixels,e.update(),ne(t.groupColorAlpha,e.uniforms.uColor,0),this._adaptor.execute(this,t)}_getMeshData(t){return this._meshDataHash[t.uid]||this._initMeshData(t)}_initMeshData(t){var e,r;return this._meshDataHash[t.uid]={batched:t.batched,indexSize:(e=t._geometry.indices)==null?void 0:e.length,vertexSize:(r=t._geometry.positions)==null?void 0:r.length},t.on("destroyed",this._destroyRenderableBound),this._meshDataHash[t.uid]}_getBatchableMesh(t){return this._gpuBatchableMeshHash[t.uid]||this._initBatchableMesh(t)}_initBatchableMesh(t){const e=E.get(rr);return e.renderable=t,e.setTexture(t._texture),e.transform=t.groupTransform,e.roundPixels=this.renderer._roundPixels|t._roundPixels,this._gpuBatchableMeshHash[t.uid]=e,e}destroy(){for(const t in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[t]&&E.return(this._gpuBatchableMeshHash[t]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}$i.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"mesh"};class Ba{execute(t,e){const r=t.state,i=t.renderer,n=e.shader||t.defaultShader;n.resources.uTexture=e.texture._source,n.resources.uniforms=t.localUniforms;const a=i.gl,o=t.getBuffers(e);i.shader.bind(n),i.state.set(r),i.geometry.bind(o.geometry,n.glProgram);const h=o.geometry.indexBuffer.data.BYTES_PER_ELEMENT===2?a.UNSIGNED_SHORT:a.UNSIGNED_INT;a.drawElements(a.TRIANGLES,e.particleChildren.length*6,h,0)}}class Ra{execute(t,e){const r=t.renderer,i=e.shader||t.defaultShader;i.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(t.localUniforms,!0),i.groups[1]=r.texture.getTextureBindGroup(e.texture);const n=t.state,a=t.getBuffers(e);r.encoder.draw({geometry:a.geometry,shader:e.shader||t.defaultShader,state:n,size:e.particleChildren.length*6})}}function jr(s,t=null){const e=s*6;if(e>65535?t||(t=new Uint32Array(e)):t||(t=new Uint16Array(e)),t.length!==e)throw new Error(`Out buffer length is incorrect, got ${t.length} and expected ${e}`);for(let r=0,i=0;r<e;r+=6,i+=4)t[r+0]=i+0,t[r+1]=i+1,t[r+2]=i+2,t[r+3]=i+0,t[r+4]=i+2,t[r+5]=i+3;return t}function Aa(s){return{dynamicUpdate:Yr(s,!0),staticUpdate:Yr(s,!1)}}function Yr(s,t){const e=[];e.push(`
      
        var index = 0;

        for (let i = 0; i < ps.length; ++i)
        {
            const p = ps[i];

            `);let r=0;for(const n in s){const a=s[n];if(t!==a.dynamic)continue;e.push(`offset = index + ${r}`),e.push(a.code);const o=Kt(a.format);r+=o.stride/4}e.push(`
            index += stride * 4;
        }
    `),e.unshift(`
        var stride = ${r};
    `);const i=e.join(`
`);return new Function("ps","f32v","u32v",i)}class Fa{constructor(t){this._size=0,this._generateParticleUpdateCache={};const e=this._size=t.size??1e3,r=t.properties;let i=0,n=0;for(const c in r){const u=r[c],f=Kt(u.format);u.dynamic?n+=f.stride:i+=f.stride}this._dynamicStride=n/4,this._staticStride=i/4,this.staticAttributeBuffer=new yt(e*4*i),this.dynamicAttributeBuffer=new yt(e*4*n),this.indexBuffer=jr(e);const a=new ie;let o=0,l=0;this._staticBuffer=new J({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:U.VERTEX|U.COPY_DST}),this._dynamicBuffer=new J({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:U.VERTEX|U.COPY_DST});for(const c in r){const u=r[c],f=Kt(u.format);u.dynamic?(a.addAttribute(u.attributeName,{buffer:this._dynamicBuffer,stride:this._dynamicStride*4,offset:o*4,format:u.format}),o+=f.size):(a.addAttribute(u.attributeName,{buffer:this._staticBuffer,stride:this._staticStride*4,offset:l*4,format:u.format}),l+=f.size)}a.addIndex(this.indexBuffer);const h=this.getParticleUpdate(r);this._dynamicUpload=h.dynamicUpdate,this._staticUpload=h.staticUpdate,this.geometry=a}getParticleUpdate(t){const e=za(t);return this._generateParticleUpdateCache[e]?this._generateParticleUpdateCache[e]:(this._generateParticleUpdateCache[e]=this.generateParticleUpdate(t),this._generateParticleUpdateCache[e])}generateParticleUpdate(t){return Aa(t)}update(t,e){t.length>this._size&&(e=!0,this._size=Math.max(t.length,this._size*1.5|0),this.staticAttributeBuffer=new yt(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new yt(this._size*this._dynamicStride*4*4),this.indexBuffer=jr(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(t,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,t.length*this._dynamicStride*4,!0),e){const i=this.staticAttributeBuffer;this._staticUpload(t,i.float32View,i.uint32View),this._staticBuffer.setDataWithSize(i.float32View,t.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}function za(s){const t=[];for(const e in s){const r=s[e];t.push(e,r.code,r.dynamic?"d":"s")}return t.join("_")}var Ia=`varying vec2 vUV;
varying vec4 vColor;

uniform sampler2D uTexture;

void main(void){
    vec4 color = texture2D(uTexture, vUV) * vColor;
    gl_FragColor = color;
}`,Ga=`attribute vec2 aVertex;
attribute vec2 aUV;
attribute vec4 aColor;

attribute vec2 aPosition;
attribute float aRotation;

uniform mat3 uTranslationMatrix;
uniform float uRound;
uniform vec2 uResolution;
uniform vec4 uColor;

varying vec2 vUV;
varying vec4 vColor;

vec2 roundPixels(vec2 position, vec2 targetSize)
{       
    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

void main(void){
    float cosRotation = cos(aRotation);
    float sinRotation = sin(aRotation);
    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;
    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;

    vec2 v = vec2(x, y);
    v = v + aPosition;

    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    if(uRound == 1.0)
    {
        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
    }

    vUV = aUV;
    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;
}
`,Xr=`
struct ParticleUniforms {
  uProjectionMatrix:mat3x3<f32>,
  uColor:vec4<f32>,
  uResolution:vec2<f32>,
  uRoundPixels:f32,
};

@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;

@group(1) @binding(0) var uTexture: texture_2d<f32>;
@group(1) @binding(1) var uSampler : sampler;

struct VSOutput {
    @builtin(position) position: vec4<f32>,
    @location(0) uv : vec2<f32>,
    @location(1) color : vec4<f32>,
  };
@vertex
fn mainVertex(
  @location(0) aVertex: vec2<f32>,
  @location(1) aPosition: vec2<f32>,
  @location(2) aUV: vec2<f32>,
  @location(3) aColor: vec4<f32>,
  @location(4) aRotation: f32,
) -> VSOutput {
  
   let v = vec2(
       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),
       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)
   ) + aPosition;

   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;

  return VSOutput(
   position,
   aUV,
   vColor,
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
  @location(1) color: vec4<f32>,
  @builtin(position) position: vec4<f32>,
) -> @location(0) vec4<f32> {

    var sample = textureSample(uTexture, uSampler, uv) * color;
   
    return sample;
}`;class Ua extends vt{constructor(){const t=We.from({vertex:Ga,fragment:Ia}),e=Et.from({fragment:{source:Xr,entryPoint:"mainFragment"},vertex:{source:Xr,entryPoint:"mainVertex"}});super({glProgram:t,gpuProgram:e,resources:{uTexture:V.WHITE.source,uSampler:new ds({}),uniforms:{uTranslationMatrix:{value:new H,type:"mat3x3<f32>"},uColor:{value:new D(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class Ni{constructor(t,e){this.state=Qt.for2d(),this._gpuBufferHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.localUniforms=new nt({uTranslationMatrix:{value:new H,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=t,this.adaptor=e,this.defaultShader=new Ua,this.state=Qt.for2d()}validateRenderable(t){return!1}addRenderable(t,e){this.renderer.renderPipes.batch.break(e),e.add(t)}getBuffers(t){return this._gpuBufferHash[t.uid]||this._initBuffer(t)}_initBuffer(t){return this._gpuBufferHash[t.uid]=new Fa({size:t.particleChildren.length,properties:t._properties}),t.on("destroyed",this._destroyRenderableBound),this._gpuBufferHash[t.uid]}updateRenderable(t){}destroyRenderable(t){this._gpuBufferHash[t.uid].destroy(),this._gpuBufferHash[t.uid]=null,t.off("destroyed",this._destroyRenderableBound)}execute(t){const e=t.particleChildren;if(e.length===0)return;const r=this.renderer,i=this.getBuffers(t);t.texture||(t.texture=e[0].texture);const n=this.state;i.update(e,t._childrenDirty),t._childrenDirty=!1,n.blendMode=It(t.blendMode,t.texture._source);const a=this.localUniforms.uniforms,o=a.uTranslationMatrix;t.worldTransform.copyTo(o),o.prepend(r.globalUniforms.globalUniformData.projectionMatrix),a.uResolution=r.globalUniforms.globalUniformData.resolution,a.uRound=r._roundPixels|t._roundPixels,ne(t.groupColorAlpha,a.uColor,0),this.adaptor.execute(this,t)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class ji extends Ni{constructor(t){super(t,new Ba)}}ji.extension={type:[B.WebGLPipes],name:"particle"};class Yi extends Ni{constructor(t){super(t,new Ra)}}Yi.extension={type:[B.WebGPUPipes],name:"particle"};const Xi=class qi extends ka{constructor(t={}){t={...qi.defaultOptions,...t},super({width:t.width,height:t.height,verticesX:4,verticesY:4}),this.update(t)}update(t){var e,r;this.width=t.width??this.width,this.height=t.height??this.height,this._originalWidth=t.originalWidth??this._originalWidth,this._originalHeight=t.originalHeight??this._originalHeight,this._leftWidth=t.leftWidth??this._leftWidth,this._rightWidth=t.rightWidth??this._rightWidth,this._topHeight=t.topHeight??this._topHeight,this._bottomHeight=t.bottomHeight??this._bottomHeight,this._anchorX=(e=t.anchor)==null?void 0:e.x,this._anchorY=(r=t.anchor)==null?void 0:r.y,this.updateUvs(),this.updatePositions()}updatePositions(){const t=this.positions,{width:e,height:r,_leftWidth:i,_rightWidth:n,_topHeight:a,_bottomHeight:o,_anchorX:l,_anchorY:h}=this,c=i+n,u=e>c?1:e/c,f=a+o,d=r>f?1:r/f,g=Math.min(u,d),p=l*e,m=h*r;t[0]=t[8]=t[16]=t[24]=-p,t[2]=t[10]=t[18]=t[26]=i*g-p,t[4]=t[12]=t[20]=t[28]=e-n*g-p,t[6]=t[14]=t[22]=t[30]=e-p,t[1]=t[3]=t[5]=t[7]=-m,t[9]=t[11]=t[13]=t[15]=a*g-m,t[17]=t[19]=t[21]=t[23]=r-o*g-m,t[25]=t[27]=t[29]=t[31]=r-m,this.getBuffer("aPosition").update()}updateUvs(){const t=this.uvs;t[0]=t[8]=t[16]=t[24]=0,t[1]=t[3]=t[5]=t[7]=0,t[6]=t[14]=t[22]=t[30]=1,t[25]=t[27]=t[29]=t[31]=1;const e=1/this._originalWidth,r=1/this._originalHeight;t[2]=t[10]=t[18]=t[26]=e*this._leftWidth,t[9]=t[11]=t[13]=t[15]=r*this._topHeight,t[4]=t[12]=t[20]=t[28]=1-e*this._rightWidth,t[17]=t[19]=t[21]=t[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};Xi.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Ea=Xi;class Ki{constructor(t){this._gpuSpriteHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.renderableGC.addManagedHash(this,"_gpuSpriteHash")}addRenderable(t,e){const r=this._getGpuSprite(t);t.didViewUpdate&&this._updateBatchableSprite(t,r),this._renderer.renderPipes.batch.addToBatch(r,e)}updateRenderable(t){const e=this._gpuSpriteHash[t.uid];t.didViewUpdate&&this._updateBatchableSprite(t,e),e._batcher.updateElement(e)}validateRenderable(t){const e=this._getGpuSprite(t);return!e._batcher.checkAndUpdateTexture(e,t._texture)}destroyRenderable(t){const e=this._gpuSpriteHash[t.uid];E.return(e.geometry),E.return(e),this._gpuSpriteHash[t.uid]=null,t.off("destroyed",this._destroyRenderableBound)}_updateBatchableSprite(t,e){e.geometry.update(t),e.setTexture(t._texture)}_getGpuSprite(t){return this._gpuSpriteHash[t.uid]||this._initGPUSprite(t)}_initGPUSprite(t){const e=E.get(rr);return e.geometry=E.get(Ea),e.renderable=t,e.transform=t.groupTransform,e.texture=t._texture,e.roundPixels=this._renderer._roundPixels|t._roundPixels,this._gpuSpriteHash[t.uid]=e,t.didViewUpdate||this._updateBatchableSprite(t,e),t.on("destroyed",this._destroyRenderableBound),e}destroy(){for(const t in this._gpuSpriteHash)this._gpuSpriteHash[t].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}Ki.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"nineSliceSprite"};const Da={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},Wa={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let Pe,Ce;class La extends vt{constructor(){Pe??(Pe=Ne({name:"tiling-sprite-shader",bits:[Xt,Da,Ye]})),Ce??(Ce=je({name:"tiling-sprite-shader",bits:[Ma,Wa,Xe]}));const t=new nt({uMapCoord:{value:new H,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new H,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:Ce,gpuProgram:Pe,resources:{localUniforms:new nt({uTransformMatrix:{value:new H,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:t,uTexture:V.EMPTY.source,uSampler:V.EMPTY.source.style}})}updateUniforms(t,e,r,i,n,a){const o=this.resources.tilingUniforms,l=a.width,h=a.height,c=a.textureMatrix,u=o.uniforms.uTextureTransform;u.set(r.a*l/t,r.b*l/e,r.c*h/t,r.d*h/e,r.tx/t,r.ty/e),u.invert(),o.uniforms.uMapCoord=c.mapCoord,o.uniforms.uClampFrame=c.uClampFrame,o.uniforms.uClampOffset=c.uClampOffset,o.uniforms.uTextureTransform=u,o.uniforms.uSizeAnchor[0]=t,o.uniforms.uSizeAnchor[1]=e,o.uniforms.uSizeAnchor[2]=i,o.uniforms.uSizeAnchor[3]=n,a&&(this.resources.uTexture=a.source,this.resources.uSampler=a.source.style)}}class Ha extends tr{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Va(s,t){const e=s.anchor.x,r=s.anchor.y;t[0]=-e*s.width,t[1]=-r*s.height,t[2]=(1-e)*s.width,t[3]=-r*s.height,t[4]=(1-e)*s.width,t[5]=(1-r)*s.height,t[6]=-e*s.width,t[7]=(1-r)*s.height}function Oa(s,t,e,r){let i=0;const n=s.length/t,a=r.a,o=r.b,l=r.c,h=r.d,c=r.tx,u=r.ty;for(e*=t;i<n;){const f=s[e],d=s[e+1];s[e]=a*f+l*d+c,s[e+1]=o*f+h*d+u,e+=t,i++}}function $a(s,t){const e=s.texture,r=e.frame.width,i=e.frame.height;let n=0,a=0;s.applyAnchorToTexture&&(n=s.anchor.x,a=s.anchor.y),t[0]=t[6]=-n,t[2]=t[4]=1-n,t[1]=t[3]=-a,t[5]=t[7]=1-a;const o=H.shared;o.copyFrom(s._tileTransform.matrix),o.tx/=s.width,o.ty/=s.height,o.invert(),o.scale(s.width/r,s.height/i),Oa(t,2,0,o)}const Nt=new Ha;class Qi{constructor(t){this._state=Qt.default2d,this._tilingSpriteDataHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.renderableGC.addManagedHash(this,"_tilingSpriteDataHash")}validateRenderable(t){const e=this._getTilingSpriteData(t),r=e.canBatch;this._updateCanBatch(t);const i=e.canBatch;if(i&&i===r){const{batchableMesh:n}=e;return!n._batcher.checkAndUpdateTexture(n,t.texture)}return r!==i}addRenderable(t,e){const r=this._renderer.renderPipes.batch;this._updateCanBatch(t);const i=this._getTilingSpriteData(t),{geometry:n,canBatch:a}=i;if(a){i.batchableMesh||(i.batchableMesh=new rr);const o=i.batchableMesh;t.didViewUpdate&&(this._updateBatchableMesh(t),o.geometry=n,o.renderable=t,o.transform=t.groupTransform,o.setTexture(t._texture)),o.roundPixels=this._renderer._roundPixels|t._roundPixels,r.addToBatch(o,e)}else r.break(e),i.shader||(i.shader=new La),this.updateRenderable(t),e.add(t)}execute(t){const{shader:e}=this._tilingSpriteDataHash[t.uid];e.groups[0]=this._renderer.globalUniforms.bindGroup;const r=e.resources.localUniforms.uniforms;r.uTransformMatrix=t.groupTransform,r.uRound=this._renderer._roundPixels|t._roundPixels,ne(t.groupColorAlpha,r.uColor,0),this._state.blendMode=It(t.groupBlendMode,t.texture._source),this._renderer.encoder.draw({geometry:Nt,shader:e,state:this._state})}updateRenderable(t){const e=this._getTilingSpriteData(t),{canBatch:r}=e;if(r){const{batchableMesh:i}=e;t.didViewUpdate&&this._updateBatchableMesh(t),i._batcher.updateElement(i)}else if(t.didViewUpdate){const{shader:i}=e;i.updateUniforms(t.width,t.height,t._tileTransform.matrix,t.anchor.x,t.anchor.y,t.texture)}}destroyRenderable(t){var r;const e=this._getTilingSpriteData(t);e.batchableMesh=null,(r=e.shader)==null||r.destroy(),this._tilingSpriteDataHash[t.uid]=null,t.off("destroyed",this._destroyRenderableBound)}_getTilingSpriteData(t){return this._tilingSpriteDataHash[t.uid]||this._initTilingSpriteData(t)}_initTilingSpriteData(t){const e=new tr({indices:Nt.indices,positions:Nt.positions.slice(),uvs:Nt.uvs.slice()});return this._tilingSpriteDataHash[t.uid]={canBatch:!0,renderable:t,geometry:e},t.on("destroyed",this._destroyRenderableBound),this._tilingSpriteDataHash[t.uid]}_updateBatchableMesh(t){const e=this._getTilingSpriteData(t),{geometry:r}=e,i=t.texture.source.style;i.addressMode!=="repeat"&&(i.addressMode="repeat",i.update()),$a(t,r.uvs),Va(t,r.positions)}destroy(){for(const t in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[t].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(t){const e=this._getTilingSpriteData(t),r=t.texture;let i=!0;return this._renderer.type===St.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),e.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),e.canBatch}}Qi.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"tilingSprite"};const Na={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},ja={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},Ya={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;
             
            }
        `}},Xa={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);  
              
                return coverage;
            }
        `}};let Me,ke;class qa extends vt{constructor(){const t=new nt({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new H,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),e=$e();Me??(Me=Ne({name:"sdf-shader",bits:[fi,gi(e),Na,Ya,Ye]})),ke??(ke=je({name:"sdf-shader",bits:[pi,mi(e),ja,Xa,Xe]})),super({glProgram:ke,gpuProgram:Me,resources:{localUniforms:t,batchSamplers:xi(e)}})}}class Zi{constructor(t){this._gpuBitmapText={},this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}validateRenderable(t){const e=this._getGpuBitmapText(t);return t._didTextUpdate&&(t._didTextUpdate=!1,this._updateContext(t,e)),this._renderer.renderPipes.graphics.validateRenderable(e)}addRenderable(t,e){const r=this._getGpuBitmapText(t);qr(t,r),t._didTextUpdate&&(t._didTextUpdate=!1,this._updateContext(t,r)),this._renderer.renderPipes.graphics.addRenderable(r,e),r.context.customShader&&this._updateDistanceField(t)}destroyRenderable(t){t.off("destroyed",this._destroyRenderableBound),this._destroyRenderableByUid(t.uid)}_destroyRenderableByUid(t){const e=this._gpuBitmapText[t].context;e.customShader&&(E.return(e.customShader),e.customShader=null),E.return(this._gpuBitmapText[t]),this._gpuBitmapText[t]=null}updateRenderable(t){const e=this._getGpuBitmapText(t);qr(t,e),this._renderer.renderPipes.graphics.updateRenderable(e),e.context.customShader&&this._updateDistanceField(t)}_updateContext(t,e){const{context:r}=e,i=Sa.getFont(t.text,t._style);r.clear(),i.distanceField.type!=="none"&&(r.customShader||(r.customShader=E.get(qa)));const n=Array.from(t.text),a=t._style;let o=i.baseLineOffset;const l=Fi(n,a,i,!0);let h=0;const c=a.padding,u=l.scale;let f=l.width,d=l.height+l.offsetY;a._stroke&&(f+=a._stroke.width/u,d+=a._stroke.width/u),r.translate(-t._anchor._x*f-c,-t._anchor._y*d-c).scale(u,u);const g=i.applyFillAsTint?a._fill.color:16777215;for(let p=0;p<l.lines.length;p++){const m=l.lines[p];for(let x=0;x<m.charPositions.length;x++){const _=n[h++],b=i.chars[_];b!=null&&b.texture&&r.texture(b.texture,g||"black",Math.round(m.charPositions[x]+b.xOffset),Math.round(o+b.yOffset))}o+=i.lineHeight}}_getGpuBitmapText(t){return this._gpuBitmapText[t.uid]||this.initGpuText(t)}initGpuText(t){const e=E.get(ee);return this._gpuBitmapText[t.uid]=e,this._updateContext(t,e),t.on("destroyed",this._destroyRenderableBound),this._gpuBitmapText[t.uid]}_updateDistanceField(t){const e=this._getGpuBitmapText(t).context,r=t._style.fontFamily,i=Q.get(`${r}-bitmap`),{a:n,b:a,c:o,d:l}=t.groupTransform,h=Math.sqrt(n*n+a*a),c=Math.sqrt(o*o+l*l),u=(Math.abs(h)+Math.abs(c))/2,f=i.baseRenderedFontSize/t._style.fontSize,d=u*i.distanceField.range*(1/f);e.customShader.resources.localUniforms.uniforms.uDistance=d}destroy(){for(const t in this._gpuBitmapText)this._destroyRenderableByUid(t);this._gpuBitmapText=null,this._renderer=null}}Zi.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"bitmapText"};function qr(s,t){t.groupTransform=s.groupTransform,t.groupColorAlpha=s.groupColorAlpha,t.groupColor=s.groupColor,t.groupBlendMode=s.groupBlendMode,t.globalDisplayStatus=s.globalDisplayStatus,t.groupTransform=s.groupTransform,t.localDisplayStatus=s.localDisplayStatus,t.groupAlpha=s.groupAlpha,t._roundPixels=s._roundPixels}function Ee(s,t){const{texture:e,bounds:r}=s;fs(r,t._anchor,e);const i=t._style.padding;r.minX-=i,r.minY-=i,r.maxX-=i,r.maxY-=i}class Ji{constructor(t){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const t in this._gpuText){const e=this._gpuText[t];if(!e)continue;const r=e.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(t){const e=this._getGpuText(t),r=t._getKey();return e.textureNeedsUploading?(e.textureNeedsUploading=!1,!0):e.currentKey!==r}addRenderable(t,e){const i=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),this._renderer.renderPipes.batch.addToBatch(i,e)}updateRenderable(t){const r=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),r._batcher.updateElement(r)}destroyRenderable(t){t.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(t.uid)}_destroyRenderableById(t){const e=this._gpuText[t];this._renderer.htmlText.decreaseReferenceCount(e.currentKey),E.return(e.batchableSprite),this._gpuText[t]=null}_updateText(t){const e=t._getKey(),r=this._getGpuText(t),i=r.batchableSprite;r.currentKey!==e&&this._updateGpuText(t).catch(n=>{console.error(n)}),t._didTextUpdate=!1,Ee(i,t)}async _updateGpuText(t){t._didTextUpdate=!1;const e=this._getGpuText(t);if(e.generatingTexture)return;const r=t._getKey();this._renderer.htmlText.decreaseReferenceCount(e.currentKey),e.generatingTexture=!0,e.currentKey=r;const i=t.resolution??this._renderer.resolution,n=await this._renderer.htmlText.getManagedTexture(t.text,i,t._style,t._getKey()),a=e.batchableSprite;a.texture=e.texture=n,e.generatingTexture=!1,e.textureNeedsUploading=!0,t.onViewUpdate(),Ee(a,t)}_getGpuText(t){return this._gpuText[t.uid]||this.initGpuText(t)}initGpuText(t){const e={texture:V.EMPTY,currentKey:"--",batchableSprite:E.get(Li),textureNeedsUploading:!1,generatingTexture:!1},r=e.batchableSprite;return r.renderable=t,r.transform=t.groupTransform,r.texture=V.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|t._roundPixels,t._resolution=t._autoResolution?this._renderer.resolution:t.resolution,this._gpuText[t.uid]=e,t.on("destroyed",this._destroyRenderableBound),e}destroy(){for(const t in this._gpuText)this._destroyRenderableById(t);this._gpuText=null,this._renderer=null}}Ji.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"htmlText"};function Ka(){const{userAgent:s}=st.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(s)}const Qa=new Ut;function ts(s,t,e,r){const i=Qa;i.minX=0,i.minY=0,i.maxX=s.width/r|0,i.maxY=s.height/r|0;const n=Z.getOptimalTexture(i.width,i.height,r,!1);return n.source.uploadMethodId="image",n.source.resource=s,n.source.alphaMode="premultiply-alpha-on-upload",n.frame.width=t/r,n.frame.height=e/r,n.source.emit("update",n.source),n.updateUvs(),n}function Za(s,t){const e=t.fontFamily,r=[],i={},n=/font-family:([^;"\s]+)/g,a=s.match(n);function o(l){i[l]||(r.push(l),i[l]=!0)}if(Array.isArray(e))for(let l=0;l<e.length;l++)o(e[l]);else o(e);a&&a.forEach(l=>{const h=l.split(":")[1].trim();o(h)});for(const l in t.tagStyles){const h=t.tagStyles[l].fontFamily;o(h)}return r}async function Ja(s){const e=await(await st.get().fetch(s)).blob(),r=new FileReader;return await new Promise((n,a)=>{r.onloadend=()=>n(r.result),r.onerror=a,r.readAsDataURL(e)})}async function Kr(s,t){const e=await Ja(t);return`@font-face {
        font-family: "${s.fontFamily}";
        src: url('${e}');
        font-weight: ${s.fontWeight};
        font-style: ${s.fontStyle};
    }`}const jt=new Map;async function to(s,t,e){const r=s.filter(i=>Q.has(`${i}-and-url`)).map((i,n)=>{if(!jt.has(i)){const{url:a}=Q.get(`${i}-and-url`);n===0?jt.set(i,Kr({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:i},a)):jt.set(i,Kr({fontWeight:e.fontWeight,fontStyle:e.fontStyle,fontFamily:i},a))}return jt.get(i)});return(await Promise.all(r)).join(`
`)}function eo(s,t,e,r,i){const{domElement:n,styleElement:a,svgRoot:o}=i;n.innerHTML=`<style>${t.cssStyle}</style><div style='padding:0;'>${s}</div>`,n.setAttribute("style",`transform: scale(${e});transform-origin: top left; display: inline-block`),a.textContent=r;const{width:l,height:h}=i.image;return o.setAttribute("width",l.toString()),o.setAttribute("height",h.toString()),new XMLSerializer().serializeToString(o)}function ro(s,t){const e=pt.getOptimalCanvasAndContext(s.width,s.height,t),{context:r}=e;return r.clearRect(0,0,s.width,s.height),r.drawImage(s,0,0),e}function io(s,t,e){return new Promise(async r=>{e&&await new Promise(i=>setTimeout(i,100)),s.onload=()=>{r()},s.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(t)}`,s.crossOrigin="anonymous"})}class ir{constructor(t){this._activeTextures={},this._renderer=t,this._createCanvas=t.type===St.WEBGPU}getTexture(t){return this._buildTexturePromise(t.text,t.resolution,t.style)}getManagedTexture(t,e,r,i){if(this._activeTextures[i])return this._increaseReferenceCount(i),this._activeTextures[i].promise;const n=this._buildTexturePromise(t,e,r).then(a=>(this._activeTextures[i].texture=a,a));return this._activeTextures[i]={texture:null,promise:n,usageCount:1},n}async _buildTexturePromise(t,e,r){const i=E.get(Wi),n=Za(t,r),a=await to(n,r,er.defaultTextStyle),o=Ca(t,r,a,i),l=Math.ceil(Math.ceil(Math.max(1,o.width)+r.padding*2)*e),h=Math.ceil(Math.ceil(Math.max(1,o.height)+r.padding*2)*e),c=i.image,u=2;c.width=(l|0)+u,c.height=(h|0)+u;const f=eo(t,r,e,a,i);await io(c,f,Ka()&&n.length>0);const d=c;let g;this._createCanvas&&(g=ro(c,e));const p=ts(g?g.canvas:d,c.width-u,c.height-u,e);return this._createCanvas&&(this._renderer.texture.initSource(p.source),pt.returnCanvasAndContext(g)),E.return(i),p}_increaseReferenceCount(t){this._activeTextures[t].usageCount++}decreaseReferenceCount(t){const e=this._activeTextures[t];e&&(e.usageCount--,e.usageCount===0&&(e.texture?this._cleanUp(e):e.promise.then(r=>{e.texture=r,this._cleanUp(e)}).catch(()=>{j("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[t]=null))}_cleanUp(t){Z.returnTexture(t.texture),t.texture.source.resource=null,t.texture.source.uploadMethodId="unknown"}getReferenceCount(t){return this._activeTextures[t].usageCount}destroy(){this._activeTextures=null}}ir.extension={type:[B.WebGLSystem,B.WebGPUSystem,B.CanvasSystem],name:"htmlText"};ir.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class es{constructor(t){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const t in this._gpuText){const e=this._gpuText[t];if(!e)continue;const r=e.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(t){const e=this._getGpuText(t),r=t._getKey();return e.currentKey!==r}addRenderable(t,e){const i=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),this._renderer.renderPipes.batch.addToBatch(i,e)}updateRenderable(t){const r=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),r._batcher.updateElement(r)}destroyRenderable(t){t.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(t.uid)}_destroyRenderableById(t){const e=this._gpuText[t];this._renderer.canvasText.decreaseReferenceCount(e.currentKey),E.return(e.batchableSprite),this._gpuText[t]=null}_updateText(t){const e=t._getKey(),r=this._getGpuText(t),i=r.batchableSprite;r.currentKey!==e&&this._updateGpuText(t),t._didTextUpdate=!1,Ee(i,t)}_updateGpuText(t){const e=this._getGpuText(t),r=e.batchableSprite;e.texture&&this._renderer.canvasText.decreaseReferenceCount(e.currentKey),e.texture=r.texture=this._renderer.canvasText.getManagedTexture(t),e.currentKey=t._getKey(),r.texture=e.texture}_getGpuText(t){return this._gpuText[t.uid]||this.initGpuText(t)}initGpuText(t){const e={texture:null,currentKey:"--",batchableSprite:E.get(Li)};return e.batchableSprite.renderable=t,e.batchableSprite.transform=t.groupTransform,e.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},e.batchableSprite.roundPixels=this._renderer._roundPixels|t._roundPixels,this._gpuText[t.uid]=e,t._resolution=t._autoResolution?this._renderer.resolution:t.resolution,this._updateText(t),t.on("destroyed",this._destroyRenderableBound),e}destroy(){for(const t in this._gpuText)this._destroyRenderableById(t);this._gpuText=null,this._renderer=null}}es.extension={type:[B.WebGLPipes,B.WebGPUPipes,B.CanvasPipes],name:"text"};function Qr(s,t,e){for(let r=0,i=4*e*t;r<t;++r,i+=4)if(s[i+3]!==0)return!1;return!0}function Zr(s,t,e,r,i){const n=4*t;for(let a=r,o=r*n+4*e;a<=i;++a,o+=n)if(s[o+3]!==0)return!1;return!0}function so(s,t=1){const{width:e,height:r}=s,i=s.getContext("2d",{willReadFrequently:!0});if(i===null)throw new TypeError("Failed to get canvas 2D context");const a=i.getImageData(0,0,e,r).data;let o=0,l=0,h=e-1,c=r-1;for(;l<r&&Qr(a,e,l);)++l;if(l===r)return X.EMPTY;for(;Qr(a,e,c);)--c;for(;Zr(a,e,o,l,c);)++o;for(;Zr(a,e,h,l,c);)--h;return++h,++c,new X(o/t,l/t,(h-o)/t,(c-l)/t)}class rs{constructor(t){this._activeTextures={},this._renderer=t}getTextureSize(t,e,r){const i=rt.measureText(t||" ",r);let n=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*e),a=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*e);return n=Math.ceil(n-1e-6),a=Math.ceil(a-1e-6),n=qt(n),a=qt(a),{width:n,height:a}}getTexture(t,e,r,i){typeof t=="string"&&(G("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),t={text:t,style:r,resolution:e}),t.style instanceof at||(t.style=new at(t.style));const{texture:n,canvasAndContext:a}=this.createTextureAndCanvas(t);return this._renderer.texture.initSource(n._source),pt.returnCanvasAndContext(a),n}createTextureAndCanvas(t){const{text:e,style:r}=t,i=t.resolution??this._renderer.resolution,n=rt.measureText(e||" ",r),a=Math.ceil(Math.ceil(Math.max(1,n.width)+r.padding*2)*i),o=Math.ceil(Math.ceil(Math.max(1,n.height)+r.padding*2)*i),l=pt.getOptimalCanvasAndContext(a,o),{canvas:h}=l;this.renderTextToCanvas(e,r,i,l);const c=ts(h,a,o,i);if(r.trim){const u=so(h,i);c.frame.copyFrom(u),c.updateUvs()}return{texture:c,canvasAndContext:l}}getManagedTexture(t){t._resolution=t._autoResolution?this._renderer.resolution:t.resolution;const e=t._getKey();if(this._activeTextures[e])return this._increaseReferenceCount(e),this._activeTextures[e].texture;const{texture:r,canvasAndContext:i}=this.createTextureAndCanvas(t);return this._activeTextures[e]={canvasAndContext:i,texture:r,usageCount:1},r}_increaseReferenceCount(t){this._activeTextures[t].usageCount++}returnTexture(t){const e=t.source;e.resource=null,e.uploadMethodId="unknown",e.alphaMode="no-premultiply-alpha",Z.returnTexture(t)}decreaseReferenceCount(t){const e=this._activeTextures[t];e.usageCount--,e.usageCount===0&&(pt.returnCanvasAndContext(e.canvasAndContext),this.returnTexture(e.texture),this._activeTextures[t]=null)}getReferenceCount(t){return this._activeTextures[t].usageCount}renderTextToCanvas(t,e,r,i){var _,b,y,T;const{canvas:n,context:a}=i,o=Jt(e),l=rt.measureText(t||" ",e),h=l.lines,c=l.lineHeight,u=l.lineWidths,f=l.maxLineWidth,d=l.fontProperties,g=n.height;if(a.resetTransform(),a.scale(r,r),a.textBaseline=e.textBaseline,(_=e._stroke)!=null&&_.width){const S=e._stroke;a.lineWidth=S.width,a.miterLimit=S.miterLimit,a.lineJoin=S.join,a.lineCap=S.cap}a.font=o;let p,m;const x=e.dropShadow?2:1;for(let S=0;S<x;++S){const w=e.dropShadow&&S===0,k=w?Math.ceil(Math.max(1,g)+e.padding*2):0,R=k*r;if(w){a.fillStyle="black",a.strokeStyle="black";const A=e.dropShadow,z=A.color,$=A.alpha;a.shadowColor=D.shared.setValue(z).setAlpha($).toRgbaString();const ot=A.blur*r,M=A.distance*r;a.shadowBlur=ot,a.shadowOffsetX=Math.cos(A.angle)*M,a.shadowOffsetY=Math.sin(A.angle)*M+R}else{if(a.fillStyle=e._fill?te(e._fill,a,l):null,(b=e._stroke)!=null&&b.width){const A=e._stroke.width*e._stroke.alignment;a.strokeStyle=te(e._stroke,a,l,A)}a.shadowColor="black"}let P=(c-d.fontSize)/2;c-d.fontSize<0&&(P=0);const v=((y=e._stroke)==null?void 0:y.width)??0;for(let A=0;A<h.length;A++)p=v/2,m=v/2+A*c+d.ascent+P,e.align==="right"?p+=f-u[A]:e.align==="center"&&(p+=(f-u[A])/2),(T=e._stroke)!=null&&T.width&&this._drawLetterSpacing(h[A],e,i,p+e.padding,m+e.padding-k,!0),e._fill!==void 0&&this._drawLetterSpacing(h[A],e,i,p+e.padding,m+e.padding-k)}}_drawLetterSpacing(t,e,r,i,n,a=!1){const{context:o}=r,l=e.letterSpacing;let h=!1;if(rt.experimentalLetterSpacingSupported&&(rt.experimentalLetterSpacing?(o.letterSpacing=`${l}px`,o.textLetterSpacing=`${l}px`,h=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),l===0||h){a?o.strokeText(t,i,n):o.fillText(t,i,n);return}let c=i;const u=rt.graphemeSegmenter(t);let f=o.measureText(t).width,d=0;for(let g=0;g<u.length;++g){const p=u[g];a?o.strokeText(p,c,n):o.fillText(p,c,n);let m="";for(let x=g+1;x<u.length;++x)m+=u[x];d=o.measureText(m).width,c+=f-d+l,f=d}}destroy(){this._activeTextures=null}}rs.extension={type:[B.WebGLSystem,B.WebGPUSystem,B.CanvasSystem],name:"canvasText"};O.add(ni);O.add(ai);O.add(Hi);O.add(Qe);O.add($i);O.add(ji);O.add(Yi);O.add(rs);O.add(es);O.add(Zi);O.add(ir);O.add(Ji);O.add(Qi);O.add(Ki);O.add(Ii);O.add(zi);
